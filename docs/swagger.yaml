definitions:
  admin_handler.Login:
    properties:
      code:
        type: string
      password:
        type: string
      username:
        type: string
      uuid:
        type: string
    required:
    - code
    - password
    - username
    - uuid
    type: object
  dto.AddStockEntryProductsReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      goodsId:
        description: ActQuantity int    `json:"actQuantity" comment:"实际入库数量"`
        type: integer
      id:
        type: integer
      quantity:
        type: integer
      skuCode:
        type: string
      stockEntryProductsSub:
        items:
          $ref: '#/definitions/dto.StockEntryProductsSubReq'
        type: array
      stockLocationId:
        description: |-
          IsDefective int `json:"isDefective"`
          VendorId int `json:"vendorId"`
          WarehouseCode      string `json:"warehouseCode"`
          LogicWarehouseCode string `json:"logicWarehouseCode"`
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.AddStockEntryReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      id:
        type: integer
      logicWarehouseCode:
        type: string
      remark:
        type: string
      stockEntryProducts:
        items:
          $ref: '#/definitions/dto.AddStockEntryProductsReq'
        type: array
      supplierId:
        description: |-
          EntryCode string `json:"entryCode"`
          SkuCode            string    `json:"skuCode"`
          SourceCode         string    `json:"sourceCode" comment:"来源单号"`
          Type               string `json:"type" binding:"required" comment:"入库类型:  0 大货入库  1 退货入库  2 其他 3采购入库"`
          Status             string `json:"status" binding:"required" comment:"状态:0-已作废 1-未出库未入库 2-已出库未入库 4-部分出库未入库 5-部分出库部分入库 6-全部出库部分入库  3-出库完成入库完成 98已提交 99未提交"`
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
      vendorId:
        type: integer
      warehouseCode:
        type: string
    required:
    - logicWarehouseCode
    - supplierId
    - vendorId
    - warehouseCode
    type: object
  dto.AddressDefaultReq:
    properties:
      addressType:
        type: integer
      cancel:
        description: 是否取消 1-取消 0-设置默认
        type: integer
      id:
        description: 编号
        type: integer
      userId:
        description: 当前用户ID
        type: integer
    type: object
  dto.ApprovalTimeDeleteReq:
    properties:
      id:
        type: integer
    type: object
  dto.ApprovalTimeInsertReq:
    properties:
      hour:
        type: string
      min:
        type: string
      repeat:
        type: string
      weeks:
        items:
          type: string
        type: array
    type: object
  dto.ApprovalTimeUpdateReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      hour:
        type: string
      id:
        type: integer
      min:
        type: string
      repeat:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      weeks:
        items:
          type: string
        type: array
    type: object
  dto.AttributeDefDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.AttributeDefInsertReq:
    properties:
      attrType:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      nameEn:
        type: string
      nameZh:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.AttributeDefUpdateReq:
    properties:
      attrType:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      id:
        description: 属性ID
        type: integer
      nameEn:
        type: string
      nameZh:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.BatchProApprovalReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      selected:
        items:
          type: integer
        type: array
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.BatchUploadProductImageReq:
    properties:
      productImage:
        items:
          $ref: '#/definitions/go-admin_app_pc_service_admin_dto.MediaInstanceInsertReq'
        type: array
    type: object
  dto.BrandDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.BrandInfo:
    properties:
      brandId:
        type: integer
      brandZh:
        type: string
    type: object
  dto.BrandInsertReq:
    properties:
      brandDescription:
        type: string
      brandEn:
        type: string
      brandZh:
        type: string
      confirm:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      status:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.BrandUpdateReq:
    properties:
      brandDescription:
        type: string
      brandEn:
        type: string
      brandZh:
        type: string
      confirm:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      id:
        description: 品牌id
        type: integer
      status:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.CategoryChildList:
    properties:
      id:
        type: integer
      name_zh:
        type: string
    type: object
  dto.CategoryDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.CategoryInsertReq:
    properties:
      categoryTaxCode:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      description:
        type: string
      keyWords:
        type: string
      level1Catid:
        type: integer
      level2Catid:
        type: integer
      level3Catid:
        type: integer
      level4Catid:
        type: integer
      mediaInstance:
        $ref: '#/definitions/go-admin_app_pc_service_admin_dto.MediaInstanceInsertReq'
      nameEn:
        type: string
      nameZh:
        type: string
      seq:
        type: integer
      status:
        type: integer
      tax:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.CategoryNav:
    properties:
      categoryId:
        type: integer
      nameZh:
        type: string
      selected:
        type: integer
    type: object
  dto.CategorySort:
    properties:
      categoryId:
        type: integer
      seq:
        type: integer
    type: object
  dto.ChangePwdReq:
    properties:
      pwd:
        type: string
      pwdCheck:
        type: string
      token:
        type: string
      type:
        type: string
    type: object
  dto.CheckUserTokenAvailableReq:
    properties:
      token:
        type: string
    type: object
  dto.ClassificationDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.ClassificationInsertReq:
    properties:
      companyId:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      name:
        type: string
      remark:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.ClassificationUpdateReq:
    properties:
      companyId:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      id:
        type: integer
      name:
        type: string
      remark:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.ComitVerifyCodeReq:
    properties:
      userPhone:
        type: string
      verifyCode:
        type: string
    type: object
  dto.CommonPrintsResp:
    properties:
      prints: {}
    type: object
  dto.CompanyDepartmentDeleteReq:
    properties:
      id:
        type: integer
    type: object
  dto.CompanyDepartmentGetPageListData:
    properties:
      companyId:
        description: 公司id
        type: integer
      companyName:
        description: 公司名
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      departmentBudget:
        description: 部门预算 null不设置无限预算 >=0 有预算限制
        type: number
      fDepartmentName:
        description: 上级部门名称
        type: string
      fId:
        description: 父级部门id
        type: integer
      id:
        type: integer
      level:
        description: 部门层级
        type: integer
      name:
        description: 部门名称
        type: string
      personalBudget:
        description: 人均预算 null不设置无限预算 >=0 有预算限制
        type: number
      topId:
        description: 一级部门ID
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
    type: object
  dto.CompanyDepartmentInsertReq:
    properties:
      companyId:
        type: integer
      departmentBudget:
        type: number
      fId:
        type: integer
      name:
        type: string
      personalBudget:
        type: number
    type: object
  dto.CompanyDepartmentIsCanDeleteRes:
    properties:
      isCanDelete:
        type: boolean
    type: object
  dto.CompanyDepartmentUpdateBudgetReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      departmentBudget:
        type: number
      id:
        type: integer
      personalBudget:
        type: number
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.CompanyDepartmentUpdateReq:
    properties:
      departmentBudget:
        type: number
      fId:
        type: integer
      id:
        type: integer
      personalBudget:
        type: number
    type: object
  dto.CompanyIndividualitySwitchDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.CompanyIndividualitySwitchInsertReq:
    properties:
      companyId:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      desc:
        type: string
      isDel:
        type: integer
      keyword:
        type: string
      remark:
        type: string
      sort:
        type: integer
      status:
        type: integer
      switchStatus:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.CompanyIndividualitySwitchUpdateReq:
    properties:
      companyId:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      desc:
        type: string
      id:
        type: integer
      isDel:
        type: integer
      keyword:
        type: string
      remark:
        type: string
      sort:
        type: integer
      status:
        type: integer
      switchStatus:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.CompanyInfoDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.CompanyInfoGetPageData:
    properties:
      children:
        items:
          $ref: '#/definitions/dto.CompanyInfoGetPageData'
        type: array
      companyLevels:
        description: 公司层级
        type: integer
      companyName:
        description: 公司名称
        type: string
      companyNature:
        description: 公司性质 （2终端，3分销）
        type: integer
      companyStatus:
        description: 公司状态（1可用 0不可用）
        type: integer
      companyType:
        description: 公司类型（1:KA 2:SME 3:DS 4:整包 5:央企 6:其他）
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      id:
        description: 主键
        type: integer
      orderAutoSignFor:
        description: 订单自动签收 0否 1是
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
    type: object
  dto.CompanyInfoGetPageRes:
    properties:
      list:
        items:
          $ref: '#/definitions/dto.CompanyInfoGetPageData'
        type: array
    type: object
  dto.CompanyInfoGetRes:
    properties:
      address:
        description: 地址
        type: string
      afterAutoAudit:
        description: 售后自动审核 空不自动 自动的售后type逗号分隔的字符串
        type: string
      approveEmailType:
        type: integer
      areaId:
        type: integer
      bankAccount:
        description: 银行帐号
        type: string
      bankName:
        description: 开户行
        type: string
      checkStockStatus:
        type: integer
      cityId:
        type: integer
      companyLevels:
        description: 公司等级
        type: integer
      companyLogo:
        description: 公司logo
        type: string
      companyMediumLogo:
        description: 中等大小logo
        type: string
      companyName:
        type: string
      companyNature:
        description: 公司性质 （2终端，3分销）
        type: integer
      companySmallLogo:
        description: 小logo
        type: string
      companyStatus:
        description: 公司状态（1可用 0不可用）
        type: integer
      companyType:
        description: （1:KA 2:SME 3:DS 4:整包 5:央企 6:其他）
        type: integer
      countryId:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      domain:
        description: 公司自定义域名
        type: string
      id:
        type: integer
      industryId:
        type: integer
      isEas:
        description: 领用单是否审批(1是 0否)
        type: integer
      isEis:
        description: eis服务(1是 0否)
        type: integer
      isPunchout:
        description: punchout服务(1是 0否)
        type: integer
      isSendEmail:
        type: integer
      isTaxPrice:
        type: integer
      loginType:
        type: integer
      orderAutoConfirm:
        description: 订单自动确认 0否 1自动确认
        type: integer
      orderAutoSignFor:
        description: 订单自动签收 0否 1是
        type: integer
      orderEamilSet:
        type: string
      parentId:
        description: 父公司id
        type: integer
      parentName:
        type: string
      paymentMethods:
        type: string
      pdfType:
        type: integer
      pid:
        type: integer
      presoTerm:
        type: integer
      provinceId:
        type: integer
      reconciliationDay:
        description: 当月对账日
        type: integer
      serviceFee:
        type: string
      showEasflow:
        type: integer
      siteCss:
        type: string
      siteTitle:
        description: 自定义域名后，网站定制标题
        type: string
      taxNo:
        description: 税号
        type: string
      theme:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
    type: object
  dto.CompanyInfoGetSelectPageData:
    properties:
      companyLevels:
        description: 公司层级
        type: integer
      companyName:
        description: 公司名称
        type: string
      companyNature:
        description: 公司性质 （2终端，3分销）
        type: integer
      companyStatus:
        description: 公司状态（1可用 0不可用）
        type: integer
      companyType:
        description: 公司类型（1:KA 2:SME 3:DS 4:整包 5:央企 6:其他）
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      id:
        description: 主键
        type: integer
      orderAutoSignFor:
        type: integer
      reconciliationDay:
        description: 当月对账日
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
    type: object
  dto.CompanyInfoInsertReq:
    properties:
      address:
        description: 地址
        type: string
      checkStockStatus:
        description: 领用单是否审批
        type: integer
      companyLogo:
        type: string
      companyMediumLogo:
        type: string
      companyName:
        type: string
      companyNature:
        type: integer
      companySmallLogo:
        type: string
      companyStatus:
        type: integer
      companyType:
        type: integer
      isEas:
        description: 领用单是否审批
        type: integer
      orderAutoSignFor:
        description: 订单自动签收 0否 1是
        type: integer
    type: object
  dto.CompanyInfoIsAvailableRes:
    properties:
      isAvailable:
        description: 是否可用
        type: boolean
    type: object
  dto.CompanyInfoUpdateReq:
    properties:
      address:
        description: 地址
        type: string
      checkStockStatus:
        description: 领用单是否审批
        type: integer
      companyLogo:
        description: 公司logo
        type: string
      companyMediumLogo:
        description: 中等大小logo
        type: string
      companyName:
        description: 公司名称
        type: string
      companyNature:
        description: 公司性质
        type: integer
      companySmallLogo:
        description: 小logo
        type: string
      companyStatus:
        description: 公司状态
        type: integer
      companyType:
        description: 公司类型
        type: integer
      domain:
        description: 公司自定义域名
        type: string
      id:
        description: 主键
        type: integer
      isEas:
        description: 领用单是否审批(1是 0否)
        type: integer
      orderAutoConfirm:
        type: integer
      orderAutoSignFor:
        description: 订单自动签收 0否 1是
        type: integer
      reconciliationDay:
        description: 当月对账日
        type: integer
      siteTitle:
        description: 自定义域名后，网站定制标题
        type: string
    type: object
  dto.CsApplyAllAuditReq:
    properties:
      auditReason:
        description: 审核原因
        type: string
      csNos:
        description: 售后单号
        items:
          type: string
        type: array
      operationType:
        description: 售后审核类型  undo作废 confirm确认
        type: string
    type: object
  dto.CsApplyAllAuditRes:
    properties:
      msg:
        description: 操作后提示
        type: string
      msgType:
        description: 提示弹窗的类型 success 或者 warning
        type: string
    type: object
  dto.CsApplyConfirmReq:
    properties:
      csNo:
        description: 售后单号
        type: string
    type: object
  dto.CsApplyData:
    properties:
      applyPrice:
        description: 申请金额
        type: number
      applyQuantity:
        description: 申请总数量
        type: integer
      auditReason:
        description: 审核原因
        type: string
      companyName:
        description: 公司名
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      csDescription:
        description: 售后申请描述
        type: string
      csIssueDetail:
        description: 产品质量问题投诉必填信息
        type: string
      csNo:
        description: 售后申请编号
        type: string
      csReason:
        description: 售后原因id
        type: integer
      csSource:
        description: mall ,sxyz
        type: string
      csStatus:
        description: 售后状态：0-待处理、1-已确认、2-已驳回、99-完结
        type: integer
      csType:
        description: 售后类型：0-退货、1-换货、2-退款、3-发票问题、4-技术及资料支持、5-技术及资料支持、6-缺货少配件、7-售后维修、8-其他、9-订单取消、10-补发货（仅限erp迁移老数据使用）
        type: integer
      customerName:
        description: 客户名称
        type: string
      id:
        type: integer
      isStatements:
        description: 订单是否存在对账单 0否 1是
        type: integer
      logicWarehouseCode:
        description: 退货逻辑仓code
        type: string
      orderId:
        description: 销售订单号
        type: string
      pics:
        description: 售后申请图片
        type: string
      refundAmt:
        description: 退款金额
        type: string
      reparationAmt:
        description: 赔款金额
        type: string
      telephone:
        description: 联系电话
        type: string
      totalAmount:
        description: 订单支付金额
        type: string
      transferAmount:
        description: 转款金额
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      userId:
        description: 提交人id
        type: integer
      userName:
        description: 提交人名称
        type: string
      vendorId:
        description: 售后单所属货主id
        type: integer
      vendorName:
        description: 售后单所属货主名
        type: string
      vendorSkuCode:
        description: 售后单所属货主sku
        type: string
      warehouseCode:
        description: 退货实体仓库code
        type: string
      warehouseName:
        description: 退货实体仓库name
        type: string
    type: object
  dto.CsApplyDetailGetRes:
    properties:
      afterSalesList:
        description: 实际售后的数据
        items:
          $ref: '#/definitions/models.CsApplyDetail'
        type: array
      applicationList:
        description: 用户申请的
        items:
          $ref: '#/definitions/models.CsApplyDetail'
        type: array
    type: object
  dto.CsApplyGetOrderProducts:
    properties:
      actualStock:
        type: integer
      afterNum:
        type: integer
      allowQuantity:
        description: 允许申请数量
        type: integer
      areaId:
        type: integer
      batchGroup:
        type: integer
      brandEname:
        type: string
      brandId:
        type: integer
      brandName:
        type: string
      cancelQuantity:
        type: integer
      catId:
        type: integer
      catId2:
        type: integer
      catId3:
        type: integer
      catId4:
        type: integer
      catName:
        type: string
      catName2:
        type: string
      catName3:
        type: string
      catName4:
        type: string
      createdAt:
        type: string
      deliveryWarehouse:
        type: string
      finalQuantity:
        type: integer
      finalSubTotalAmount:
        type: number
      goodsId:
        type: integer
      id:
        type: integer
      listSort:
        type: integer
      lockStock:
        type: integer
      marketPrice:
        type: number
      moq:
        type: integer
      orderId:
        type: string
      orderStatus:
        description: 订单状态
        type: string
      originalItemsMount:
        type: number
      originalQuantity:
        type: integer
      productId:
        type: integer
      productModel:
        type: string
      productName:
        type: string
      productNo:
        type: string
      productPic:
        type: string
      purchasePrice:
        type: number
      quantity:
        type: integer
      returnNum:
        type: integer
      salePrice:
        type: number
      sendQuantity:
        type: integer
      skuCode:
        type: string
      skuProfit:
        type: number
      skuProfitText:
        type: string
      subTotalAmount:
        type: number
      supplierWarehouse:
        type: string
      unit:
        type: string
      updatedAt:
        type: string
      userId:
        type: integer
      userName:
        type: string
      userProductName:
        type: string
      userProductRemark:
        type: string
      vendorId:
        type: integer
      vendorsCode:
        description: 货主code
        type: string
      vendorsName:
        description: 添加其他字段...
        type: string
      warehouseCode:
        type: string
    type: object
  dto.CsApplyGetSaleProductsRes:
    properties:
      isStatements:
        type: boolean
      products:
        items:
          $ref: '#/definitions/dto.CsApplyGetOrderProducts'
        type: array
      warehouse:
        $ref: '#/definitions/dto.CsApplyWarehouseData'
    type: object
  dto.CsApplyInsertProduct:
    properties:
      brandName:
        description: 品牌名称
        type: string
      csType:
        description: 客服类型
        type: integer
      goodsId:
        description: 商品ID
        type: integer
      isDefective:
        description: 是否有质量问题
        type: integer
      pics:
        description: 图片列表
        type: string
      productModel:
        description: 产品型号
        type: string
      productName:
        description: 产品名称
        type: string
      productNo:
        description: 产品编号
        type: string
      productPic:
        description: 产品图片
        type: string
      quantity:
        description: 数量
        type: integer
      refundAmt:
        description: 退款金额
        type: number
      remark:
        description: 备注
        type: string
      reparationAmt:
        description: 赔偿金额
        type: number
      returnToSupplier:
        description: 退回供应商
        type: string
      salePrice:
        description: 销售价格
        type: number
      skuCode:
        description: SKU编码
        type: string
      transferAmount:
        description: 转账金额
        type: number
      unit:
        description: 单位
        type: string
      vendorId:
        description: 货主名称
        type: integer
      vendorsCode:
        description: 货主SKU编码
        type: string
      vendorsName:
        description: 货主名称
        type: string
      warehouseCode:
        description: 仓库编码
        type: string
      worthless:
        description: 无效标志
        type: integer
    type: object
  dto.CsApplyInsertRequest:
    properties:
      csType:
        description: CS类型
        type: integer
      isStatements:
        description: 是否结算
        type: integer
      orderId:
        description: 订单ID
        type: string
      products:
        items:
          $ref: '#/definitions/dto.CsApplyInsertProduct'
        type: array
      warehouseCode:
        description: 仓库代码
        type: string
    type: object
  dto.CsApplyIsOrderInAfterPendingReviewRes:
    properties:
      isPendingReview:
        type: boolean
    type: object
  dto.CsApplyWarehouseData:
    properties:
      warehouseCode:
        type: string
      warehouseName:
        type: string
    type: object
  dto.DataRemarkDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.DataRemarkInsertReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      dataId:
        description: 订单号
        type: string
      remark:
        description: 备注
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.DataRemarkUpdateReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      dataId:
        type: string
      id:
        type: integer
      remark:
        description: 备注
        type: string
      type:
        description: 类型{sale_order:销售售后，purchase_order:采购售后}
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      usertype:
        description: 操作人员类型(0:opc,1:spc,2:other)
        type: integer
    type: object
  dto.DepartmentBudgetGetResp:
    properties:
      balance:
        type: number
      companyName:
        type: string
      createdAt:
        type: string
      depId:
        type: integer
      depName:
        type: string
      excessAmount:
        type: number
      id:
        type: integer
      initialAmount:
        type: number
      month:
        type: string
      spent:
        type: number
      updatedAt:
        type: string
    type: object
  dto.DepartmentBudgetListResp:
    properties:
      balance:
        type: number
      companyId:
        type: integer
      companyName:
        type: string
      createdAt:
        type: string
      depId:
        type: integer
      depName:
        type: string
      excessAmount:
        type: number
      id:
        type: integer
      initialAmount:
        type: number
      isUserBudget:
        type: integer
      month:
        type: string
      parentDepName:
        type: string
      personalBudget:
        $ref: '#/definitions/sql.NullFloat64'
      spent:
        type: number
      updatedAt:
        type: string
    type: object
  dto.EmailApproveDeleteReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      id:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.EmailApproveDetailGetResp:
    properties:
      approveDetailStatus:
        type: integer
      approveId:
        type: integer
      approveRankType:
        type: integer
      approveUsers:
        items:
          $ref: '#/definitions/dto.EmailApproveGetUserResp'
        type: array
      limitType:
        type: integer
      priority:
        type: integer
      totalPriceLimit:
        type: string
    type: object
  dto.EmailApproveDetailInsertReq:
    properties:
      approveRankType:
        type: integer
      approveUsers:
        items:
          type: integer
        type: array
      createBy:
        type: integer
      createByName:
        type: string
      limitType:
        type: integer
      totalPriceLimit:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.EmailApproveGetApproveAndRecipient:
    properties:
      allApproveUsers:
        items:
          $ref: '#/definitions/dto.EmailApproveGetUserResp'
        type: array
      allRecipientUsers:
        items:
          $ref: '#/definitions/dto.EmailApproveGetUserResp'
        type: array
    type: object
  dto.EmailApproveGetResp:
    properties:
      allApproveUsers:
        items:
          $ref: '#/definitions/dto.EmailApproveGetUserResp'
        type: array
      allRecipientUsers:
        items:
          $ref: '#/definitions/dto.EmailApproveGetUserResp'
        type: array
      emailApproveDetails:
        items:
          $ref: '#/definitions/dto.EmailApproveDetailGetResp'
        type: array
      recipientUsers:
        items:
          $ref: '#/definitions/dto.EmailApproveGetUserResp'
        type: array
    type: object
  dto.EmailApproveGetUserResp:
    properties:
      userId:
        type: integer
      userName:
        type: string
    type: object
  dto.EmailApproveInsertReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      emailApproveDetails:
        items:
          $ref: '#/definitions/dto.EmailApproveDetailInsertReq'
        type: array
      recipientUsers:
        items:
          type: integer
        type: array
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.EmailApproveUpdateReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      emailApproveDetails:
        items:
          $ref: '#/definitions/dto.EmailApproveDetailInsertReq'
        type: array
      id:
        description: id
        type: integer
      recipientUsers:
        items:
          type: integer
        type: array
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.EmailApproveWorkflow:
    properties:
      id:
        type: integer
      process:
        type: string
    type: object
  dto.ExportReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.GetGoodsByIdReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.GetProductBySkuCodeReq:
    properties:
      skuCode:
        type: string
    type: object
  dto.GetSetSysConfigReq:
    properties:
      configKey:
        type: string
      configValue:
        type: string
    type: object
  dto.GoodsApproveReq:
    properties:
      approveRemark:
        type: string
      approveStatus:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      ids:
        items:
          type: integer
        type: array
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.GoodsDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.GoodsGetInfo:
    properties:
      approveRemark:
        type: string
      approveStatus:
        type: integer
      checkStockStatus:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      isCollect:
        type: boolean
      isCurrentWarehouse:
        type: boolean
      marketPrice:
        type: number
      nakedSalePrice:
        type: number
      onlineStatus:
        type: integer
      priceModifyReason:
        type: string
      product:
        $ref: '#/definitions/models.Product'
      productNo:
        type: string
      quantity:
        type: integer
      salesMoq:
        type: integer
      skuCode:
        type: string
      status:
        type: integer
      stock:
        type: integer
      supplierSkuCode:
        type: string
      tax:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      vendorId:
        type: integer
      vendorName:
        type: string
      warehouseCode:
        type: string
    type: object
  dto.GoodsInsertReq:
    properties:
      approveRemark:
        type: string
      approveStatus:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      marketPrice:
        type: number
      onlineStatus:
        type: integer
      priceModifyReason:
        type: string
      productNo:
        type: string
      skuCode:
        type: string
      status:
        default: 1
        type: integer
      supplierSkuCode:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      vendorId:
        type: integer
      warehouseCode:
        type: string
    type: object
  dto.GoodsUpdateReq:
    properties:
      approveRemark:
        type: string
      approveStatus:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      id:
        type: integer
      marketPrice:
        type: number
      onlineStatus:
        type: integer
      priceModifyReason:
        type: string
      productNo:
        type: string
      skuCode:
        type: string
      status:
        type: integer
      supplierSkuCode:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      vendorId:
        type: integer
      warehouseCode:
        type: string
    type: object
  dto.InnerStockInfoGetByGoodsIdAndLwhCodeReq:
    properties:
      query:
        items:
          $ref: '#/definitions/dto.InnerStockInfoGetByGoodsIdAndLwhCodeReqInfo'
        type: array
    type: object
  dto.InnerStockInfoGetByGoodsIdAndLwhCodeReqInfo:
    properties:
      goodsId:
        type: integer
      logicWarehouseCode:
        type: string
    type: object
  dto.InnerStockInfoGetByGoodsIdAndWarehouseCodeReq:
    properties:
      goodsIds:
        items:
          type: integer
        type: array
      warehouseCode:
        type: string
    type: object
  dto.InnerWarehouseGetListReq:
    properties:
      companyId:
        type: integer
      isVirtual:
        type: string
      status:
        type: string
      warehouseCode:
        type: string
      warehouseName:
        type: string
    type: object
  dto.List:
    properties:
      brandAll:
        items:
          additionalProperties: {}
          type: object
        type: array
      brandFilter:
        items:
          additionalProperties:
            items:
              $ref: '#/definitions/dto.BrandInfo'
            type: array
          type: object
        type: array
      brandNav:
        items:
          type: string
        type: array
      category:
        items:
          additionalProperties: {}
          type: object
        type: array
      categoryNav:
        items:
          items:
            $ref: '#/definitions/dto.CategoryNav'
          type: array
        type: array
      product:
        items:
          $ref: '#/definitions/go-admin_app_pc_service_mall_dto.GoodsGetPageResp'
        type: array
      vendor:
        items:
          additionalProperties: {}
          type: object
        type: array
    type: object
  dto.LocationStock:
    properties:
      StockInfoId:
        type: integer
      locationCode:
        type: string
      lockStock:
        type: integer
      logicWarehouseCode:
        type: string
      stock:
        type: integer
      totalStock:
        type: integer
      warehouseCode:
        type: string
    type: object
  dto.LogTypesDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.LogTypesInsertReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      mapping:
        type: string
      model_name:
        type: string
      title:
        type: string
      type:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.LogTypesUpdateReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      id:
        type: integer
      mapping:
        type: string
      model_name:
        type: string
      title:
        type: string
      type:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.LogicWarehouseInsertReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      email:
        type: string
      linkman:
        type: string
      logicWarehouseName:
        type: string
      mobile:
        type: string
      remark:
        type: string
      type:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      warehouseCode:
        type: string
    type: object
  dto.LogicWarehouseSelectResp:
    properties:
      logicWarehouseCode:
        type: string
      logicWarehouseName:
        type: string
    type: object
  dto.LogicWarehouseUpdateReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      email:
        type: string
      id:
        description: id
        type: integer
      linkman:
        type: string
      logicWarehouseName:
        type: string
      mobile:
        type: string
      remark:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.ManageMenuDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.ManageMenuInsertReq:
    properties:
      activeRouteNames:
        items:
          type: string
        type: array
      createBy:
        type: integer
      createByName:
        type: string
      groupName:
        type: string
      isActive:
        type: integer
      order:
        type: integer
      routeName:
        type: string
      title:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.ManageMenuUpdateReq:
    properties:
      activeRouteNames:
        items:
          type: string
        type: array
      createBy:
        type: integer
      createByName:
        type: string
      groupName:
        type: string
      id:
        description: 主键ID
        type: integer
      isActive:
        type: integer
      order:
        type: integer
      routeName:
        type: string
      title:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.OlineOfflineReq:
    properties:
      actionType:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      ids:
        items:
          type: integer
        type: array
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.Option:
    properties:
      label:
        type: string
      value:
        type: string
    type: object
  dto.OptionRulesControl:
    properties:
      Audit:
        type: boolean
      delete:
        type: boolean
      detail:
        type: boolean
      update:
        type: boolean
    type: object
  dto.OptionRulesEntry:
    properties:
      Audit:
        type: boolean
      confirm:
        type: boolean
      detail:
        type: boolean
      print:
        type: boolean
    type: object
  dto.OptionRulesOutbound:
    properties:
      confirm:
        type: boolean
      detail:
        type: boolean
      print:
        type: boolean
    type: object
  dto.OptionRulesTransfer:
    properties:
      Audit:
        type: boolean
      delete:
        type: boolean
      detail:
        type: boolean
      update:
        type: boolean
    type: object
  dto.OrderInfoBuyAgainReq:
    properties:
      id:
        type: string
    type: object
  dto.OrderInfoGetPageRespOrderDetail:
    properties:
      batchGroup:
        type: integer
      brandEname:
        type: string
      brandId:
        type: integer
      brandName:
        type: string
      cancelQuantity:
        type: integer
      catId:
        type: integer
      catId2:
        type: integer
      catId3:
        type: integer
      catId4:
        type: integer
      catName:
        type: string
      catName2:
        type: string
      catName3:
        type: string
      catName4:
        type: string
      createdAt:
        type: string
      deliveryWarehouse:
        type: string
      finalQuantity:
        type: integer
      finalSubTotalAmount:
        type: number
      goodsId:
        type: integer
      id:
        type: integer
      lockStock:
        type: integer
      marketPrice:
        type: number
      moq:
        type: integer
      orderId:
        type: string
      originalItemsMount:
        type: number
      originalQuantity:
        type: integer
      productId:
        type: integer
      productModel:
        type: string
      productName:
        type: string
      productNo:
        type: string
      productPic:
        type: string
      purchasePrice:
        type: number
      quantity:
        type: integer
      salePrice:
        type: number
      sendQuantity:
        type: integer
      skuCode:
        type: string
      subTotalAmount:
        type: number
      supplierWarehouse:
        type: string
      unTaxPrice:
        type: number
      unit:
        type: string
      updatedAt:
        type: string
      userId:
        type: integer
      userName:
        type: string
      userProductName:
        type: string
      userProductRemark:
        type: string
      vendorId:
        type: integer
      vendorName:
        type: string
      warehouseCode:
        type: string
    type: object
  dto.OrderInfoGetReceiptImageReq:
    properties:
      orderId:
        description: OrderId
        type: string
    type: object
  dto.OrderInfoOrderImagesUpdateReq:
    properties:
      id:
        description: 如果是原来的图片就有id 如果是新的图片没有id可以传0或者不传这个字段
        type: integer
      name:
        type: string
      url:
        type: string
    type: object
  dto.OrderInfoSaveReceiptImageReq:
    properties:
      orderId:
        description: OrderId
        type: string
      receiptImages:
        items:
          $ref: '#/definitions/dto.OrderInfoOrderImagesUpdateReq'
        type: array
    type: object
  dto.OrderToStatementsListResp:
    properties:
      brandName:
        type: string
      companyDepartmentName:
        type: string
      createFrom:
        type: string
      finalQuantity:
        type: integer
      finalSubTotalAmount:
        type: number
      finalTotalAmount:
        type: number
      fullCompanyName:
        type: string
      key:
        type: integer
      orderId:
        type: string
      parentCompanyDepartmentName:
        type: string
      payAccount:
        type: string
      productModel:
        type: string
      productName:
        type: string
      productNo:
        type: string
      salePrice:
        type: number
      skuClassificationName:
        type: string
      skuClassificationSwitch:
        type: string
      skuCode:
        type: string
      supplierSkuCode:
        type: string
      userId:
        type: integer
      userName:
        type: string
      userPhone:
        type: string
      vendorName:
        type: string
    type: object
  dto.PassWord:
    properties:
      newPassword:
        type: string
      oldPassword:
        type: string
    type: object
  dto.PhoneInfo:
    properties:
      countryCode:
        description: 区号
        type: string
      phoneNumber:
        description: 用户绑定的手机号（国外手机号会有区号）
        type: string
      purePhoneNumber:
        description: 没有区号的手机号
        type: string
      watermark:
        allOf:
        - $ref: '#/definitions/dto.Watermark'
        description: 数据水印
    type: object
  dto.PhoneNumberRequest:
    properties:
      code:
        description: 手机号获取凭证
        type: string
    type: object
  dto.PhoneNumberResponse:
    properties:
      errCode:
        description: 错误码
        type: integer
      errMsg:
        description: 错误信息
        type: string
      phoneInfo:
        allOf:
        - $ref: '#/definitions/dto.PhoneInfo'
        description: 用户手机号信息
    type: object
  dto.PresoBatchApprovalReq:
    properties:
      approveRemark:
        type: string
      approveStatus:
        type: integer
      presoNos:
        items:
          type: string
        type: array
    type: object
  dto.PresoFinishApprovalProductReq:
    properties:
      approved:
        type: integer
      approvedQuantity:
        type: integer
      price:
        type: number
      quantity:
        type: integer
      skuCode:
        type: string
    type: object
  dto.PresoFinishApprovalReq:
    properties:
      approveItems:
        items:
          $ref: '#/definitions/dto.PresoFinishApprovalProductReq'
        type: array
      approveRemark:
        type: string
      contractNo:
        type: string
      passTotal:
        type: integer
      presoNo:
        type: string
      rejectTotal:
        type: integer
      remark:
        type: string
      step:
        type: integer
    type: object
  dto.PresoGetPageResp:
    properties:
      address:
        type: string
      approveRemark:
        type: string
      approveStatus:
        type: integer
      approveUser:
        type: string
      approveUsers:
        type: string
      approveflowId:
        type: integer
      areaId:
        type: integer
      areaName:
        type: string
      buttonList:
        items:
          type: integer
        type: array
      cityId:
        type: integer
      cityName:
        type: string
      companyName:
        type: string
      consignee:
        type: string
      contactEmail:
        type: string
      contractNo:
        type: string
      countryId:
        type: integer
      countryName:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createFrom:
        type: string
      createdAt:
        type: string
      deliverId:
        type: integer
      expireTime:
        type: string
      expireTimeText:
        type: string
      files:
        items:
          $ref: '#/definitions/models.PresoImage'
        type: array
      id:
        type: integer
      ip:
        type: string
      mobile:
        type: string
      orderId:
        type: string
      presoDetails:
        items:
          $ref: '#/definitions/dto.PresoGetPageRespPresoDetail'
        type: array
      presoNo:
        type: string
      provinceId:
        type: integer
      provinceName:
        type: string
      remark:
        type: string
      step:
        type: integer
      taxTotalAmount:
        type: number
      telephone:
        type: string
      totalAmount:
        type: number
      totalQuantity:
        type: integer
      townId:
        type: integer
      townName:
        type: string
      unRejectTotalAmount:
        type: number
      updatedAt:
        type: string
      userCompanyId:
        type: integer
      userCompanyName:
        type: string
      userId:
        type: integer
      userName:
        type: string
      warehouseCode:
        type: string
      workFollowNodes:
        items:
          $ref: '#/definitions/models.WorkFlowNodes'
        type: array
    type: object
  dto.PresoGetPageRespPresoDetail:
    properties:
      approveQuantity:
        type: integer
      approveRemark:
        type: string
      approveStatus:
        type: integer
      brandName:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      goodsId:
        type: integer
      id:
        type: integer
      marketPrice:
        type: number
      mfgModel:
        type: string
      nakedUnitPrice:
        type: number
      presoNo:
        type: string
      productName:
        type: string
      productNo:
        type: string
      productPic:
        type: string
      quantity:
        type: integer
      rejectByName:
        type: string
      salePrice:
        type: number
      skuCode:
        type: string
      step:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      userId:
        type: integer
      userName:
        type: string
      userProductRemark:
        type: string
      vendorId:
        type: integer
      vendorName:
        type: string
      warehouseCode:
        type: string
    type: object
  dto.PresoGetResp:
    properties:
      address:
        type: string
      addressFullName:
        type: string
      approveRemark:
        type: string
      approveRemarkText:
        type: string
      approveStatus:
        type: integer
      approveUsers:
        type: string
      approveflowId:
        type: integer
      areaId:
        type: integer
      areaName:
        type: string
      cityId:
        type: integer
      cityName:
        type: string
      companyName:
        type: string
      consignee:
        type: string
      contactEmail:
        type: string
      contractNo:
        type: string
      countryId:
        type: integer
      countryName:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createFrom:
        type: string
      createdAt:
        type: string
      deliverId:
        type: integer
      expireTime:
        type: string
      expireTimeText:
        type: string
      files:
        items:
          $ref: '#/definitions/models.PresoImage'
        type: array
      id:
        type: integer
      ip:
        type: string
      isCurrentNodeApprover:
        type: integer
      mobile:
        type: string
      orderId:
        type: string
      presoDetails:
        items:
          $ref: '#/definitions/dto.PresoGetRespPresoDetail'
        type: array
      presoNo:
        type: string
      provinceId:
        type: integer
      provinceName:
        type: string
      remark:
        type: string
      step:
        type: integer
      telephone:
        type: string
      totalAmount:
        type: number
      townId:
        type: integer
      townName:
        type: string
      updatedAt:
        type: string
      userCompanyId:
        type: integer
      userCompanyName:
        type: string
      userId:
        type: integer
      userName:
        type: string
      warehouseCode:
        type: string
      workFollowNodes:
        items:
          $ref: '#/definitions/models.WorkFlowNodes'
        type: array
    type: object
  dto.PresoGetRespPresoDetail:
    properties:
      approveQuantity:
        type: integer
      approveRemark:
        type: string
      approveStatus:
        type: integer
      brandName:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      goodsId:
        type: integer
      id:
        type: integer
      marketPrice:
        type: number
      mfgModel:
        type: string
      nakedUnitPrice:
        type: number
      operUser:
        type: string
      presoNo:
        type: string
      productName:
        type: string
      productNo:
        type: string
      productPic:
        type: string
      quantity:
        type: integer
      rejectByName:
        type: string
      salePrice:
        type: number
      skuCode:
        type: string
      step:
        type: integer
      tax:
        type: number
      taxedTotal:
        type: number
      unit:
        type: string
      untaxedTotal:
        type: number
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      userId:
        type: integer
      userName:
        type: string
      userProductRemark:
        type: string
      vendorId:
        type: integer
      vendorName:
        type: string
      vendorSkuCode:
        type: string
      warehouseCode:
        type: string
    type: object
  dto.PresoImagesInsertReq:
    properties:
      name:
        type: string
      url:
        type: string
    type: object
  dto.PresoSaveFileReq:
    properties:
      name:
        type: string
      presoNo:
        type: string
      url:
        type: string
    type: object
  dto.PresoSubmitApprovalReq:
    properties:
      approveRemark:
        type: string
      approveflowId:
        type: integer
      buyNow:
        type: integer
      contractNo:
        type: string
      createFrom:
        type: string
      goodsId:
        type: integer
      presoImage:
        items:
          $ref: '#/definitions/dto.PresoImagesInsertReq'
        type: array
      quantity:
        type: integer
      remark:
        type: string
      shippingAddressId:
        type: integer
      userProductRemark:
        items:
          $ref: '#/definitions/dto.PresoUserProductRemarkReq'
        type: array
    type: object
  dto.PresoUserProductRemarkReq:
    properties:
      remark:
        type: string
      skuCode:
        type: string
    type: object
  dto.PresoWithdrawReq:
    properties:
      presoNo:
        type: string
    type: object
  dto.ProductCategory:
    properties:
      categoryId:
        type: integer
      categoryName:
        type: string
    type: object
  dto.ProductLogDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.ProductLogInsertReq:
    properties:
      afterData:
        type: string
      beforeData:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      data:
        type: string
      dataId:
        type: integer
      diffData:
        type: string
      type:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.ProductLogUpdateReq:
    properties:
      afterData:
        type: string
      beforeData:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      data:
        type: string
      dataId:
        type: integer
      diffData:
        type: string
      id:
        type: integer
      type:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.ProductSort:
    properties:
      productId:
        type: integer
      seq:
        type: integer
    type: object
  dto.ProductSortReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      sort:
        items:
          $ref: '#/definitions/dto.ProductSort'
        type: array
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.QualityCheckConfigDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.QualityCheckConfigInsertReq:
    properties:
      categoryConstraint:
        items:
          $ref: '#/definitions/models.Constraint'
        type: array
      companyIds:
        items:
          type: integer
        type: array
      createBy:
        type: integer
      createByName:
        type: string
      id:
        description: Primary Key
        type: integer
      orderType:
        type: integer
      qualityCheckOptions:
        type: string
      qualityCheckRoles:
        type: string
      samplingNum:
        type: integer
      skuConstraint:
        items:
          $ref: '#/definitions/models.Constraint'
        type: array
      status:
        type: integer
      type:
        type: integer
      unqualified:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
      warehouseCodes:
        items:
          type: string
        type: array
    type: object
  dto.QualityCheckUpdateReq:
    properties:
      id:
        type: integer
      qualityBy:
        type: integer
      qualityOption:
        items:
          $ref: '#/definitions/dto.QualityOption'
        type: array
      qualityRes:
        type: integer
      quantityNum:
        type: integer
      remark:
        type: string
    type: object
  dto.QualityOption:
    properties:
      qualityBy:
        type: integer
      qualityCheckOption:
        type: string
      qualityRes:
        type: integer
    type: object
  dto.RegionDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.RegionInsertReq:
    properties:
      adcode:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      latitude:
        type: string
      level:
        type: string
      longitude:
        type: string
      name:
        type: string
      parentId:
        type: string
      postalCode:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.RegionUpdateReq:
    properties:
      adcode:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      id:
        type: integer
      latitude:
        type: string
      level:
        type: string
      longitude:
        type: string
      name:
        type: string
      parentId:
        type: string
      postalCode:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.ReminderListData:
    properties:
      companyId:
        type: integer
      companyName:
        type: string
      createdAt:
        type: string
      id:
        description: id
        type: integer
      reminderRuleId:
        type: integer
      skuCount:
        type: integer
      vendorId:
        type: integer
      vendorName:
        type: string
      warehouseCode:
        type: string
      warehouseName:
        type: string
    type: object
  dto.ReminderRuleGetRes:
    properties:
      companyId:
        description: 公司id
        type: integer
      companyName:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      id:
        description: id
        type: integer
      replenishmentValue:
        description: 设置的备货量
        type: integer
      status:
        description: 状态 1启用 0未启用
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      warehouseCode:
        description: 仓库code
        type: string
      warehouseName:
        type: string
      warningValue:
        description: SKU通用预警值
        type: integer
    type: object
  dto.ReminderRuleInsertReq:
    properties:
      companyId:
        description: 公司id
        type: integer
      replenishmentValue:
        description: 设置的备货量
        type: integer
      skuList:
        items:
          $ref: '#/definitions/dto.ReminderRuleSkuInsertReq'
        type: array
      status:
        description: 状态 1启用 0未启用
        type: integer
      warehouseCode:
        description: 仓库code
        type: string
      warningValue:
        description: SKU通用预警值
        type: integer
    type: object
  dto.ReminderRuleSkuDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.ReminderRuleSkuInsertReq:
    properties:
      replenishmentValue:
        type: integer
      skuCode:
        type: string
      status:
        type: string
      warningValue:
        type: integer
    type: object
  dto.ReminderRuleSkuUpdateReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      id:
        description: id
        type: integer
      replenishmentValue:
        type: integer
      skuCode:
        type: string
      status:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      warningValue:
        type: integer
    type: object
  dto.ReminderRuleUpdateReq:
    properties:
      companyId:
        type: integer
      id:
        description: id
        type: integer
      replenishmentValue:
        type: integer
      skuList:
        items:
          $ref: '#/definitions/dto.ReminderRuleSkuUpdateReq'
        type: array
      status:
        type: integer
      warehouseCode:
        type: string
      warningValue:
        type: integer
    type: object
  dto.ResetSysUserPwdReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      password:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      userId:
        description: 用户ID
        type: integer
    type: object
  dto.RoleDataScopeReq:
    properties:
      dataScope:
        type: string
      deptIds:
        items:
          type: integer
        type: array
      roleId:
        type: integer
    required:
    - dataScope
    - roleId
    type: object
  dto.RoleInfoDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.RoleInfoInsertReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      manageCompany:
        type: string
      roleName:
        type: string
      roleStatus:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.RoleInfoUpdateReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      id:
        description: 编号
        type: integer
      manageCompany:
        type: string
      roleName:
        type: string
      roleStatus:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.SendEmailForChangeEmailReq:
    properties:
      code:
        type: string
      email:
        type: string
      id:
        type: string
      redirectUri:
        type: string
      token:
        type: string
    type: object
  dto.SendEmailForCheckEmailReq:
    properties:
      code:
        type: string
      email:
        type: string
      id:
        type: string
      redirectUri:
        type: string
    type: object
  dto.SendEmailReq:
    properties:
      code:
        type: string
      email:
        type: string
      id:
        type: string
    type: object
  dto.SkuClassificationDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.SkuClassificationInsertReq:
    properties:
      classificationId:
        type: integer
      companyId:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      skuCode:
        type: string
      status:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.SkuClassificationUpdateReq:
    properties:
      classificationId:
        type: integer
      companyId:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      id:
        type: integer
      skuCode:
        type: string
      status:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.SortReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      sort:
        items:
          $ref: '#/definitions/dto.CategorySort'
        type: array
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.StatementsGetPageResp:
    properties:
      companyId:
        type: integer
      companyName:
        type: string
      createdAt:
        type: string
      endTime:
        type: string
      id:
        type: integer
      orderCount:
        type: integer
      productCount:
        type: integer
      startTime:
        type: string
      statementsNo:
        type: string
      totalAmount:
        type: number
    type: object
  dto.StockControlAuditReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      id:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
      verifyRemark:
        type: string
      verifyStatus:
        type: string
    type: object
  dto.StockControlDeleteReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      id:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.StockControlGetPageResp:
    properties:
      controlCode:
        type: string
      controlTotalNum:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      logicWarehouseCode:
        type: string
      logicWarehouseName:
        type: string
      optionRules:
        $ref: '#/definitions/dto.OptionRulesControl'
      remark:
        type: string
      status:
        type: string
      statusName:
        type: string
      type:
        type: string
      typeName:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      vendorId:
        type: integer
      vendorName:
        type: string
      verifyRemark:
        type: string
      verifyStatus:
        type: string
      verifyStatusName:
        type: string
      verifyTime:
        type: string
      verifyUid:
        type: integer
      warehouseCode:
        type: string
      warehouseName:
        type: string
    type: object
  dto.StockControlGetResp:
    properties:
      controlCode:
        type: string
      controlTotalNum:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      logicWarehouseCode:
        type: string
      remark:
        type: string
      status:
        type: string
      statusName:
        type: string
      stockControlProducts:
        items:
          $ref: '#/definitions/dto.StockControlProductsGetResp'
        type: array
      type:
        type: string
      typeName:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      vendorId:
        type: integer
      vendorName:
        type: string
      verifyRemark:
        type: string
      verifyStatus:
        type: string
      verifyStatusName:
        type: string
      verifyTime:
        type: string
      verifyUid:
        type: integer
      warehouseCode:
        type: string
    type: object
  dto.StockControlInsertReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      logicWarehouseCode:
        type: string
      remark:
        type: string
      stockControlProducts:
        items:
          $ref: '#/definitions/dto.StockControlProductsReq'
        type: array
      type:
        default: "0"
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      vendorId:
        type: integer
      warehouseCode:
        type: string
    type: object
  dto.StockControlProductsGetResp:
    properties:
      brandName:
        type: string
      controlCode:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      currentQuantity:
        type: integer
      goodId:
        type: integer
      goodsId:
        type: integer
      id:
        type: integer
      locationCode:
        type: string
      logicWarehouseCode:
        type: string
      mfgModel:
        type: string
      number:
        type: integer
      productName:
        type: string
      productNo:
        type: string
      quantity:
        type: integer
      salesUom:
        type: string
      skuCode:
        type: string
      stockLocationId:
        type: integer
      stockLocations:
        items:
          $ref: '#/definitions/dto.StockControlProductsLocationGetResp'
        type: array
      type:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      vendorId:
        type: integer
      vendorName:
        type: string
      vendorSkuCode:
        type: string
      warehouseCode:
        type: string
    type: object
  dto.StockControlProductsLocationGetResp:
    properties:
      id:
        type: integer
      locationCode:
        type: string
      lockStock:
        type: integer
      stock:
        type: integer
    type: object
  dto.StockControlProductsReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      currentQuantity:
        type: integer
      goodsId:
        type: integer
      logicWarehouseCode:
        type: string
      quantity:
        type: integer
      skuCode:
        type: string
      stockLocationId:
        type: integer
      type:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      vendorId:
        type: integer
      warehouseCode:
        type: string
    type: object
  dto.StockControlUpdateReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      id:
        description: id
        type: integer
      logicWarehouseCode:
        type: string
      remark:
        type: string
      stockControlProducts:
        items:
          $ref: '#/definitions/dto.StockControlProductsReq'
        type: array
      updateBy:
        type: integer
      updateByName:
        type: string
      warehouseCode:
        type: string
    type: object
  dto.StockControlValidateSkusResp:
    properties:
      brandName:
        type: string
      currentQuantity:
        type: integer
      errorMsg:
        type: string
      goodId:
        type: integer
      lockStock:
        type: integer
      mfgModel:
        type: string
      productName:
        type: string
      productNo:
        type: string
      quantity:
        type: integer
      salesUom:
        type: string
      skuCode:
        type: string
      stock:
        type: integer
      stockLocationId:
        type: integer
      stockLocations:
        items:
          $ref: '#/definitions/dto.StockControlProductsLocationGetResp'
        type: array
      totalStock:
        type: integer
      type:
        type: string
      vendorName:
        type: string
      vendorSkuCode:
        type: string
    type: object
  dto.StockEntryConfirmReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      id:
        type: integer
      stockEntryProducts:
        items:
          $ref: '#/definitions/dto.StockEntryProductsConfirmReq'
        type: array
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.StockEntryGetPageResp:
    properties:
      checkRemark:
        type: string
      checkStatus:
        type: string
      checkStatusName:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      diffNum:
        type: string
      entryCode:
        type: string
      entryEndTime:
        type: string
      entryTime:
        type: string
      id:
        type: integer
      logicWarehouseCode:
        type: string
      logicWarehouseName:
        type: string
      nameZh:
        type: string
      optionRules:
        $ref: '#/definitions/dto.OptionRulesEntry'
      remark:
        type: string
      sourceCode:
        type: string
      sourceTypeName:
        type: string
      status:
        type: string
      statusName:
        type: string
      supplierId:
        type: integer
      supplierName:
        type: string
      type:
        type: string
      typeName:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      vendorId:
        type: integer
      warehouseCode:
        type: string
      warehouseName:
        type: string
    type: object
  dto.StockEntryGetResp:
    properties:
      SupplierName:
        type: string
      address:
        type: string
      checkRemark:
        type: string
      checkStatus:
        type: string
      checkStatusName:
        type: string
      city:
        type: integer
      cityName:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      diffNum:
        type: string
      district:
        type: integer
      districtName:
        type: string
      entryCode:
        type: string
      entryEndTime:
        type: string
      entryTime:
        type: string
      externalOrderNo:
        type: string
      id:
        type: integer
      logicWarehouseCode:
        type: string
      logicWarehouseName:
        type: string
      province:
        type: integer
      provinceName:
        type: string
      remark:
        type: string
      sourceCode:
        type: string
      sourceTypeName:
        type: string
      status:
        type: string
      statusName:
        type: string
      stockEntryProducts:
        items:
          $ref: '#/definitions/dto.StockEntryProductsGetResp'
        type: array
      supplierId:
        type: integer
      type:
        type: string
      typeName:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      vendorId:
        type: integer
      warehouseCode:
        type: string
      warehouseName:
        type: string
    type: object
  dto.StockEntryLocationInfo:
    properties:
      actQuantity:
        description: 实际入库数量
        type: integer
      id:
        description: 拆分行ID
        type: integer
      stockLocationId:
        description: 库位ID
        type: integer
    type: object
  dto.StockEntryPartReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      id:
        description: 入库单ID
        type: integer
      stockEntryProducts:
        description: 产品信息列表
        items:
          $ref: '#/definitions/dto.StockEntryProducts'
        type: array
      type:
        description: 0-保存 , 1-部分入库, 2-全部入库
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.StockEntryPrintHtmlResp:
    properties:
      html:
        type: string
    type: object
  dto.StockEntryPrintSkuResp:
    properties:
      brandName:
        type: string
      mfgModel:
        type: string
      productName:
        type: string
      productNo:
        type: string
      qrCode:
        type: string
      salesUom:
        type: string
      skuCode:
        type: string
      vendorCode:
        type: string
      vendorName:
        type: string
    type: object
  dto.StockEntryPrintSkusReq:
    properties:
      goodsIds:
        items:
          type: integer
        type: array
    type: object
  dto.StockEntryProducts:
    properties:
      actQuantityTotal:
        description: 总实际入库数量
        type: integer
      goodId:
        description: 入库单商品ID
        type: integer
      id:
        description: 入库单产品明细id
        type: integer
      quantity:
        description: 应入库数量
        type: integer
      skuCode:
        description: 入库单商品sku
        type: string
      stockLocationInfo:
        description: 库位ID+实际入库数量
        items:
          $ref: '#/definitions/dto.StockEntryLocationInfo'
        type: array
      warehouseCode:
        type: string
    type: object
  dto.StockEntryProductsConfirmReq:
    properties:
      actQuantity:
        type: integer
      skuCode:
        type: string
      stockLocationId:
        type: integer
    type: object
  dto.StockEntryProductsGetResp:
    properties:
      actQuantity:
        type: integer
      brandName:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      diffNum:
        type: integer
      entryCode:
        type: string
      entryEndTime:
        type: string
      entryTime:
        type: string
      goodId:
        type: integer
      goodsId:
        type: integer
      id:
        type: integer
      isDefective:
        type: integer
      locationCode:
        type: string
      logicWarehouseCode:
        type: string
      mfgModel:
        type: string
      number:
        type: integer
      outboundNum:
        type: integer
      productName:
        type: string
      productNo:
        type: string
      quantity:
        type: integer
      salesUom:
        type: string
      skuCode:
        type: string
      stashActQuantity:
        type: integer
      stashLocationId:
        type: integer
      status:
        type: integer
      stockEntryProductsSub:
        items:
          $ref: '#/definitions/models.StockEntryProductsSub'
        type: array
      stockLocationId:
        type: integer
      stockLocations:
        items:
          $ref: '#/definitions/dto.StockEntryProductsLocationGetResp'
        type: array
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      vendorId:
        type: integer
      vendorName:
        type: string
      vendorSkuCode:
        type: string
      warehouseCode:
        type: string
    type: object
  dto.StockEntryProductsLocationGetResp:
    properties:
      id:
        type: integer
      locationCode:
        type: string
    type: object
  dto.StockEntryProductsSubReq:
    properties:
      actQuantity:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      entryCode:
        type: string
      entryProductId:
        type: integer
      entryTime:
        type: string
      id:
        type: integer
      shouldQuantity:
        type: integer
      stashActQuantity:
        type: integer
      stashLocationId:
        type: integer
      stockLocationId:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.StockEntryScanSkuBaseInfoResp:
    properties:
      brandName:
        type: string
      mfgModel:
        type: string
      productName:
        type: string
      productNo:
        type: string
      salesUom:
        type: string
      skuCode:
        type: string
      vendorCode:
        type: string
      vendorName:
        type: string
    type: object
  dto.StockEntryStashReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      id:
        type: integer
      stockEntryProducts:
        items:
          $ref: '#/definitions/dto.StockEntryProductsConfirmReq'
        type: array
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.StockInfoGetPageResp:
    properties:
      brandName:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      goodsId:
        type: integer
      id:
        type: integer
      lackStock:
        description: 实缺库存
        type: integer
      locationLockStocks:
        description: 占用库存数据
        items:
          $ref: '#/definitions/dto.LocationStock'
        type: array
      locationStocks:
        description: 可用库存数据
        items:
          $ref: '#/definitions/dto.LocationStock'
        type: array
      locationTotalStocks:
        description: 在库库存数据
        items:
          $ref: '#/definitions/dto.LocationStock'
        type: array
      lockStock:
        type: integer
      logicWarehouseCode:
        type: string
      logicWarehouseName:
        type: string
      mfgModel:
        type: string
      productName:
        type: string
      productNo:
        type: string
      salesUom:
        type: string
      skuCode:
        type: string
      stock:
        type: integer
      totalStock:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      vendorCode:
        type: string
      vendorId:
        type: integer
      vendorName:
        type: string
      vendorShortName:
        type: string
      vendorSkuCode:
        type: string
      warehouseCode:
        type: string
      warehouseName:
        type: string
    type: object
  dto.StockLocationGoodsListResp:
    properties:
      brandName:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      goodsId:
        type: integer
      id:
        type: integer
      locationCode:
        type: string
      locationId:
        type: integer
      lockStock:
        type: integer
      mfgModel:
        type: string
      productName:
        type: string
      productNo:
        type: string
      skuCode:
        type: string
      stock:
        type: integer
      supplierSkuCode:
        type: string
      totalStock:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      vendorName:
        type: string
      warehouseName:
        type: string
    type: object
  dto.StockLocationInsertReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      locationCode:
        type: string
      logicWarehouseCode:
        type: string
      remark:
        description: |-
          SizeHeight string `json:"sizeHeight" comment:"高"`
          SizeLength string `json:"sizeLength" comment:"长"`
          SizeWidth string `json:"sizeWidth" comment:"宽"`
          Capacity string `json:"capacity" comment:"容量"`
        type: string
      status:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      warehouseCode:
        type: string
    type: object
  dto.StockLocationResp:
    properties:
      id:
        description: id
        type: integer
      locationCode:
        type: string
      logicWarehouseCode:
        type: string
      logicWarehouseName:
        type: string
      remark:
        type: string
      status:
        type: string
      warehouseCode:
        type: string
      warehouseName:
        type: string
    type: object
  dto.StockLocationUpdateReq:
    properties:
      capacity:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      id:
        description: id
        type: integer
      locationCode:
        type: string
      logicWarehouseCode:
        type: string
      remark:
        type: string
      sizeHeight:
        type: string
      sizeLength:
        type: string
      sizeWidth:
        type: string
      status:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      warehouseCode:
        type: string
    type: object
  dto.StockLogGetPageResp:
    properties:
      afterStock:
        type: integer
      beforeStock:
        type: integer
      brandName:
        type: string
      changeStock:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      createdTime:
        type: string
      docketCode:
        type: string
      fromType:
        type: string
      fromTypeName:
        type: string
      id:
        type: integer
      logicWarehouseCode:
        type: string
      logicWarehouseName:
        type: string
      mfgModel:
        type: string
      productName:
        type: string
      productNo:
        type: string
      salesUom:
        type: string
      skuCode:
        type: string
      snapshotAfterLockStock:
        type: integer
      snapshotAfterStock:
        type: integer
      snapshotBeforeLockStock:
        type: integer
      snapshotBeforeStock:
        type: integer
      stockInfoId:
        type: integer
      vendorCode:
        type: string
      vendorId:
        type: integer
      vendorName:
        type: string
      vendorShortName:
        type: string
      vendorSkuCode:
        type: string
      warehouseCode:
        type: string
      warehouseName:
        type: string
    type: object
  dto.StockOutboundConfirmReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      id:
        type: integer
      stockOutboundProducts:
        items:
          $ref: '#/definitions/dto.StockOutboundProductsConfirmReq'
        type: array
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.StockOutboundGetPageResp:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      logicWarehouseCode:
        type: string
      logicWarehouseName:
        type: string
      optionRules:
        $ref: '#/definitions/dto.OptionRulesOutbound'
      outboundCode:
        type: string
      outboundEndTime:
        type: string
      outboundTime:
        type: string
      recipient:
        description: 领用人
        type: string
      remark:
        type: string
      sourceCode:
        type: string
      sourceTypeName:
        type: string
      status:
        type: string
      statusName:
        type: string
      type:
        type: string
      typeName:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      vendorId:
        type: integer
      warehouseCode:
        type: string
      warehouseName:
        type: string
    type: object
  dto.StockOutboundGetResp:
    properties:
      address:
        type: string
      addressFullName:
        type: string
      city:
        type: integer
      cityName:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      district:
        type: integer
      districtName:
        type: string
      externalOrderNo:
        type: string
      id:
        type: integer
      logicWarehouseCode:
        type: string
      logicWarehouseName:
        type: string
      outboundCode:
        type: string
      outboundEndTime:
        type: string
      outboundTime:
        type: string
      province:
        type: integer
      provinceName:
        type: string
      receiveAddrInfo:
        properties:
          address:
            type: string
          addressFullName:
            type: string
          city:
            type: integer
          cityName:
            type: string
          district:
            type: integer
          districtName:
            type: string
          linkman:
            type: string
          mobile:
            type: string
          province:
            type: integer
          provinceName:
            type: string
          userCompanyName:
            type: string
          userDepartment:
            type: string
          userName:
            description: 领用单特有， 下单人信息
            type: string
          userPhone:
            type: string
        type: object
      remark:
        type: string
      sourceCode:
        type: string
      sourceTypeName:
        type: string
      status:
        type: string
      statusName:
        type: string
      stockOutboundProducts:
        items:
          $ref: '#/definitions/dto.StockOutboundProductsGetResp'
        type: array
      type:
        type: string
      typeName:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      vendorId:
        type: integer
      warehouseCode:
        type: string
      warehouseName:
        type: string
    type: object
  dto.StockOutboundPrintResp:
    properties:
      data: {}
      html:
        type: string
    type: object
  dto.StockOutboundProductsConfirmReq:
    properties:
      goodsId:
        description: 商品ID
        type: integer
      id:
        description: 入库单产品明细id
        type: integer
      locationActQuantity:
        description: 实际出库数量
        type: integer
      skuCode:
        description: 商品SKU
        type: string
      stockLocationId:
        description: 出库库位ID
        type: integer
      subId:
        description: 库位ID
        type: integer
    type: object
  dto.StockOutboundProductsGetResp:
    properties:
      actQuantity:
        type: integer
      autoStockLocationId:
        type: integer
      brandName:
        type: string
      diffNum:
        type: integer
      goodId:
        type: integer
      goodsId:
        type: integer
      hasSub:
        type: integer
      id:
        type: integer
      locationActQuantity:
        type: integer
      locationCode:
        type: string
      locationQuantity:
        type: integer
      logicWarehouseCode:
        type: string
      mfgModel:
        type: string
      number:
        type: integer
      outboundCode:
        type: string
      outboundEndTime:
        type: string
      outboundTime:
        type: string
      productName:
        type: string
      productNo:
        type: string
      quantity:
        type: integer
      salesUom:
        type: string
      skuCode:
        type: string
      status:
        type: integer
      stockLocationId:
        type: integer
      subId:
        description: 子表信息
        type: integer
      subLog:
        items:
          $ref: '#/definitions/models.StockOutboundProductsSubLog'
        type: array
      vendorId:
        type: integer
      vendorName:
        type: string
      vendorSkuCode:
        type: string
      warehouseCode:
        type: string
    type: object
  dto.StockPartOutboundReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      id:
        description: 出库单ID
        type: integer
      outboundType:
        description: 1-部分出库 2-全部出库
        type: integer
      stockOutboundProducts:
        description: 出库单商品信息
        items:
          $ref: '#/definitions/dto.StockOutboundProductsConfirmReq'
        type: array
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.StockTransferAuditReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      id:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
      verifyRemark:
        type: string
      verifyStatus:
        type: string
    type: object
  dto.StockTransferDeleteReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      id:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.StockTransferGetPageResp:
    properties:
      address:
        type: string
      autoIn:
        type: integer
      autoOut:
        type: integer
      city:
        type: integer
      cityName:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      district:
        type: integer
      districtName:
        type: string
      fromLogicWarehouseCode:
        type: string
      fromLogicWarehouseName:
        type: string
      fromWarehouseCode:
        type: string
      fromWarehouseName:
        type: string
      id:
        type: integer
      linkman:
        type: string
      logisticsRemark:
        type: string
      mobile:
        type: string
      optionRules:
        $ref: '#/definitions/dto.OptionRulesTransfer'
      province:
        type: integer
      provinceName:
        type: string
      remark:
        type: string
      sourceCode:
        type: string
      status:
        type: string
      statusName:
        type: string
      toLogicWarehouseCode:
        type: string
      toLogicWarehouseName:
        type: string
      toWarehouseCode:
        type: string
      toWarehouseName:
        type: string
      transferCode:
        type: string
      type:
        type: string
      typeName:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      vendorId:
        type: integer
      vendorName:
        type: string
      verifyRemark:
        type: string
      verifyStatus:
        type: string
      verifyStatusName:
        type: string
      verifyTime:
        type: string
      verifyUid:
        type: integer
    type: object
  dto.StockTransferGetResp:
    properties:
      address:
        type: string
      autoIn:
        type: integer
      autoInName:
        type: string
      autoOut:
        type: integer
      autoOutName:
        type: string
      city:
        type: integer
      cityName:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      district:
        type: integer
      districtName:
        type: string
      fromLogicWarehouseCode:
        type: string
      fromLogicWarehouseName:
        type: string
      fromWarehouseCode:
        type: string
      fromWarehouseName:
        type: string
      id:
        type: integer
      linkman:
        type: string
      logisticsRemark:
        type: string
      mobile:
        type: string
      province:
        type: integer
      provinceName:
        type: string
      remark:
        type: string
      sourceCode:
        type: string
      status:
        type: string
      statusName:
        type: string
      stockTransferProducts:
        items:
          $ref: '#/definitions/dto.StockTransferProductsGetResp'
        type: array
      toLogicWarehouseCode:
        type: string
      toLogicWarehouseName:
        type: string
      toWarehouseCode:
        type: string
      toWarehouseName:
        type: string
      transferCode:
        type: string
      type:
        type: string
      typeName:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      vendorId:
        type: integer
      vendorName:
        type: string
      verifyRemark:
        type: string
      verifyStatus:
        type: string
      verifyStatusName:
        type: string
      verifyTime:
        type: string
      verifyUid:
        type: integer
    type: object
  dto.StockTransferInsertReq:
    properties:
      address:
        type: string
      city:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      district:
        type: integer
      fromLogicWarehouseCode:
        type: string
      fromWarehouseCode:
        type: string
      linkman:
        type: string
      logisticsRemark:
        type: string
      mobile:
        type: string
      province:
        type: integer
      remark:
        type: string
      stockTransferProducts:
        items:
          $ref: '#/definitions/dto.StockTransferProductsReq'
        type: array
      toLogicWarehouseCode:
        type: string
      toWarehouseCode:
        type: string
      type:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      vendorId:
        type: integer
    type: object
  dto.StockTransferProductsGetResp:
    properties:
      brandName:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      diffActQuantity:
        type: integer
      fromActQuantity:
        type: integer
      goodId:
        type: integer
      goodsId:
        type: integer
      id:
        type: integer
      logicWarehouseCode:
        type: string
      mfgModel:
        type: string
      number:
        type: integer
      productName:
        type: string
      productNo:
        type: string
      quantity:
        type: integer
      salesUom:
        type: string
      skuCode:
        type: string
      toActQuantity:
        type: integer
      toGoodsId:
        type: integer
      toLogicWarehouseCode:
        type: string
      toWarehouseCode:
        type: string
      transferCode:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      vendorId:
        type: integer
      vendorName:
        type: string
      vendorSkuCode:
        type: string
      warehouseCode:
        type: string
    type: object
  dto.StockTransferProductsReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      quantity:
        type: integer
      skuCode:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.StockTransferUpdateReq:
    properties:
      address:
        type: string
      city:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      district:
        type: integer
      fromLogicWarehouseCode:
        type: string
      fromWarehouseCode:
        type: string
      id:
        description: id
        type: integer
      linkman:
        type: string
      logisticsRemark:
        type: string
      mobile:
        type: string
      province:
        type: integer
      remark:
        type: string
      stockTransferProducts:
        items:
          $ref: '#/definitions/dto.StockTransferProductsReq'
        type: array
      toLogicWarehouseCode:
        type: string
      toWarehouseCode:
        type: string
      type:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      vendorId:
        type: integer
    type: object
  dto.StockTransferValidateSkusResp:
    properties:
      brandName:
        type: string
      goodId:
        type: integer
      mfgModel:
        type: string
      productName:
        type: string
      productNo:
        type: string
      salesUom:
        type: string
      skuCode:
        type: string
      stockLocationId:
        type: integer
      vendorName:
        type: string
      vendorSkuCode:
        type: string
    type: object
  dto.SupplierInsertReq:
    properties:
      address:
        type: string
      backupLinkman:
        type: string
      backupPhone:
        type: string
      cityId:
        type: integer
      code:
        type: string
      companyId:
        type: integer
      countryId:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      email:
        type: string
      fax:
        type: string
      linkman:
        type: string
      nameEn:
        type: string
      nameZh:
        type: string
      phone:
        type: string
      postalCode:
        type: string
      provinceId:
        type: integer
      remark:
        type: string
      shortName:
        type: string
      status:
        type: string
      telephone:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.SupplierSelectResp:
    properties:
      id:
        type: integer
      nameZh:
        type: string
      shortName:
        type: string
    type: object
  dto.SupplierUpdateReq:
    properties:
      address:
        type: string
      backupLinkman:
        type: string
      backupPhone:
        type: string
      cityId:
        type: integer
      companyId:
        type: integer
      countryId:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      email:
        type: string
      fax:
        type: string
      id:
        type: integer
      linkman:
        type: string
      nameEn:
        type: string
      nameZh:
        type: string
      phone:
        type: string
      postalCode:
        type: string
      provinceId:
        type: integer
      remark:
        type: string
      shortName:
        type: string
      status:
        type: string
      telephone:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.SysApiDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.SysApiUpdateReq:
    properties:
      action:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      handle:
        type: string
      id:
        description: 编码
        type: integer
      path:
        type: string
      title:
        type: string
      type:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.SysConfigByKeyReq:
    properties:
      configKey:
        type: string
    type: object
  dto.SysConfigControl:
    properties:
      configKey:
        type: string
      configName:
        type: string
      configType:
        type: string
      configValue:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      id:
        description: 编码
        type: integer
      isFrontend:
        type: string
      remark:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.SysDeptDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.SysDeptInsertReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      deptId:
        description: 编码
        type: integer
      deptName:
        description: 部门名称
        type: string
      deptPath:
        description: 路径
        type: string
      email:
        description: 邮箱
        type: string
      leader:
        description: 负责人
        type: string
      parentId:
        description: 上级部门
        type: integer
      phone:
        description: 手机
        type: string
      sort:
        description: 排序
        type: integer
      status:
        description: 状态
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.SysDeptUpdateReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      deptId:
        description: 编码
        type: integer
      deptName:
        description: 部门名称
        type: string
      deptPath:
        description: 路径
        type: string
      email:
        description: 邮箱
        type: string
      leader:
        description: 负责人
        type: string
      parentId:
        description: 上级部门
        type: integer
      phone:
        description: 手机
        type: string
      sort:
        description: 排序
        type: integer
      status:
        description: 状态
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.SysDictDataDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.SysDictDataGetAllResp:
    properties:
      label:
        type: string
      remark:
        type: string
      value:
        type: string
    type: object
  dto.SysDictDataInsertReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      cssClass:
        type: string
      default:
        type: string
      dictLabel:
        type: string
      dictSort:
        type: integer
      dictType:
        type: string
      dictValue:
        type: string
      isDefault:
        type: string
      listClass:
        type: string
      remark:
        type: string
      status:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.SysDictDataUpdateReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      cssClass:
        type: string
      default:
        type: string
      dictLabel:
        type: string
      dictSort:
        type: integer
      dictType:
        type: string
      dictValue:
        type: string
      id:
        type: integer
      isDefault:
        type: string
      listClass:
        type: string
      remark:
        type: string
      status:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.SysDictTypeDeleteReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      ids:
        items:
          type: integer
        type: array
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.SysDictTypeInsertReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      dictName:
        type: string
      dictType:
        type: string
      id:
        type: integer
      remark:
        type: string
      status:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.SysDictTypeUpdateReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      dictName:
        type: string
      dictType:
        type: string
      id:
        type: integer
      remark:
        type: string
      status:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.SysLoginLogDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.SysMenuDeleteReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      ids:
        items:
          type: integer
        type: array
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.SysMenuInsertReq:
    properties:
      action:
        description: 请求方式
        type: string
      apis:
        items:
          type: integer
        type: array
      breadcrumb:
        description: 是否面包屑
        type: string
      component:
        description: 组件
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      icon:
        description: 图标
        type: string
      isFrame:
        description: 是否frame
        type: string
      menuId:
        description: 编码
        type: integer
      menuName:
        description: 菜单name
        type: string
      menuType:
        description: 菜单类型
        type: string
      noCache:
        description: 是否缓存
        type: boolean
      parentId:
        description: 上级菜单
        type: integer
      path:
        description: 路径
        type: string
      paths:
        description: id路径
        type: string
      permission:
        description: 权限编码
        type: string
      sort:
        description: 排序
        type: integer
      sysApi:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysApi'
        type: array
      title:
        description: 显示名称
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      visible:
        description: 是否显示
        type: string
    type: object
  dto.SysMenuUpdateReq:
    properties:
      action:
        description: 请求方式
        type: string
      apis:
        items:
          type: integer
        type: array
      breadcrumb:
        description: 是否面包屑
        type: string
      component:
        description: 组件
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      icon:
        description: 图标
        type: string
      isFrame:
        description: 是否frame
        type: string
      menuId:
        description: 编码
        type: integer
      menuName:
        description: 菜单name
        type: string
      menuType:
        description: 菜单类型
        type: string
      noCache:
        description: 是否缓存
        type: boolean
      parentId:
        description: 上级菜单
        type: integer
      path:
        description: 路径
        type: string
      paths:
        description: id路径
        type: string
      permission:
        description: 权限编码
        type: string
      sort:
        description: 排序
        type: integer
      sysApi:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysApi'
        type: array
      title:
        description: 显示名称
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      visible:
        description: 是否显示
        type: string
    type: object
  dto.SysOperaLogDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.SysPostDeleteReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      ids:
        items:
          type: integer
        type: array
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.SysPostInsertReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      postCode:
        type: string
      postId:
        type: integer
      postName:
        type: string
      remark:
        type: string
      sort:
        type: integer
      status:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.SysPostUpdateReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      postCode:
        type: string
      postId:
        type: integer
      postName:
        type: string
      remark:
        type: string
      sort:
        type: integer
      status:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.SysRoleDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.SysRoleInsertReq:
    properties:
      admin:
        type: boolean
      createBy:
        type: integer
      createByName:
        type: string
      dataScope:
        type: string
      deptIds:
        items:
          type: integer
        type: array
      flag:
        description: 标记
        type: string
      menuIds:
        items:
          type: integer
        type: array
      remark:
        description: 备注
        type: string
      roleId:
        description: 角色编码
        type: integer
      roleKey:
        description: 角色代码
        type: string
      roleName:
        description: 角色名称
        type: string
      roleSort:
        description: 角色排序
        type: integer
      status:
        description: 状态
        type: string
      sysDept:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysDept'
        type: array
      sysMenu:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysMenu'
        type: array
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.SysRoleUpdateReq:
    properties:
      admin:
        type: boolean
      createBy:
        type: integer
      createByName:
        type: string
      dataScope:
        type: string
      deptIds:
        items:
          type: integer
        type: array
      flag:
        description: 标记
        type: string
      menuIds:
        items:
          type: integer
        type: array
      remark:
        description: 备注
        type: string
      roleId:
        description: 角色编码
        type: integer
      roleKey:
        description: 角色代码
        type: string
      roleName:
        description: 角色名称
        type: string
      roleSort:
        description: 角色排序
        type: integer
      status:
        description: 状态
        type: string
      sysDept:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysDept'
        type: array
      sysMenu:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysMenu'
        type: array
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.SysUserInsertReq:
    properties:
      authorityCompanyId:
        type: string
      authorityVendorId:
        type: string
      authorityWarehouseAllocateId:
        type: string
      authorityWarehouseId:
        type: string
      avatar:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      deptId:
        type: integer
      email:
        type: string
      fax:
        type: string
      nickName:
        type: string
      nickNameEn:
        type: string
      password:
        type: string
      phone:
        type: string
      postId:
        type: integer
      remark:
        type: string
      roleId:
        type: integer
      sendEmailStatus:
        default: "0"
        type: string
      sex:
        type: string
      status:
        default: "1"
        type: string
      telephone:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      userId:
        description: 用户ID
        type: integer
      username:
        type: string
    type: object
  dto.SysUserUpdatePermissionReq:
    properties:
      authorityCompanyId:
        type: string
      authorityVendorId:
        type: string
      authorityWarehouseAllocateId:
        type: string
      authorityWarehouseId:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      userId:
        description: 用户ID
        type: integer
    type: object
  dto.SysUserUpdateReq:
    properties:
      authorityCompanyId:
        type: string
      authorityVendorId:
        type: string
      authorityWarehouseAllocateId:
        type: string
      authorityWarehouseId:
        type: string
      avatar:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      deptId:
        type: integer
      email:
        type: string
      fax:
        type: string
      nickName:
        type: string
      nickNameEn:
        type: string
      phone:
        type: string
      postId:
        type: integer
      remark:
        type: string
      roleId:
        type: integer
      sendEmailStatus:
        default: "0"
        type: string
      sex:
        type: string
      status:
        default: "1"
        type: string
      telephone:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      userId:
        description: 用户ID
        type: integer
      username:
        type: string
    type: object
  dto.TransferStockReq:
    properties:
      goodsId:
        type: integer
      id:
        type: integer
      locationId:
        type: integer
      targetLocationId:
        type: integer
      transferStock:
        type: integer
    type: object
  dto.UommasterDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.UommasterInsertReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      description:
        type: string
      uom:
        type: string
      uomPy:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.UommasterUpdateReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      description:
        type: string
      uom:
        type: string
      uomId:
        type: integer
      uomPy:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.UpdateStatusReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      roleId:
        description: 角色编码
        type: integer
      status:
        description: 状态
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.UpdateSysUserStatusReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      status:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      userId:
        description: 用户ID
        type: integer
    type: object
  dto.UserBudgetGetPageResp:
    properties:
      balance:
        type: number
      createdAt:
        type: string
      excessAmount:
        type: number
      id:
        type: integer
      initialAmount:
        type: number
      month:
        type: string
      spent:
        type: number
      updatedAt:
        type: string
      userId:
        type: integer
      userName:
        type: string
    type: object
  dto.UserCartBatchAddItemReq:
    properties:
      quantity:
        type: integer
      skuCode:
        type: string
    type: object
  dto.UserCartBatchAddReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      data:
        items:
          $ref: '#/definitions/dto.UserCartBatchAddItemReq'
        type: array
      updateBy:
        type: integer
      updateByName:
        type: string
      warehouseCode:
        type: string
    type: object
  dto.UserCartGetProductForCartPageResp:
    properties:
      cartProductNum:
        type: integer
      checkStockStatus:
        type: integer
      isExistNotSale:
        type: integer
      isSelectAll:
        type: integer
      products:
        items:
          $ref: '#/definitions/models.UserCartPageGoodsProduct'
        type: array
      totalAmount:
        type: number
      totalNakedAmount:
        type: number
      totalProductNum:
        type: integer
    type: object
  dto.UserCartGetProductForOrderBuyNowResp:
    properties:
      productCategoryNum:
        type: integer
      productNum:
        type: integer
      products:
        items:
          $ref: '#/definitions/models.UserCartGoodsProduct'
        type: array
      totalAmount:
        type: number
      totalNakedAmount:
        type: number
    type: object
  dto.UserCartGetProductForOrderPageResp:
    properties:
      allowOrder:
        default: 1
        type: integer
      allowOrderMsg:
        type: string
      checkStockStatus:
        type: integer
      products:
        items:
          $ref: '#/definitions/models.UserCartGoodsProduct'
        type: array
      totalAmount:
        type: number
      totalNakedAmount:
        type: number
      totalQuantity:
        type: integer
    type: object
  dto.UserCartGetProductForSaleMoqReq:
    properties:
      skuCodes:
        items:
          type: string
        type: array
      warehouseCode:
        type: string
    type: object
  dto.UserCartGetProductForSaleMoqResp:
    properties:
      saleMoq:
        additionalProperties:
          type: integer
        type: object
    type: object
  dto.UserCartInsertReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      goodsId:
        type: integer
      quantity:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
      warehouseCode:
        type: string
    type: object
  dto.UserCartSelectOneReq:
    properties:
      goodsId:
        type: integer
      userId:
        type: integer
      warehouseCode:
        type: string
    type: object
  dto.UserCartUpdateReq:
    properties:
      goodsId:
        type: integer
      quantity:
        type: integer
      userId:
        type: integer
      warehouseCode:
        type: string
    type: object
  dto.UserCollectDeleteGoodsIdsReq:
    properties:
      goodsIds:
        items:
          type: integer
        type: array
    type: object
  dto.UserConfigSelectWarehouseReq:
    properties:
      warehouseCode:
        type: string
      warehouseId:
        type: integer
      warehouseName:
        type: string
    type: object
  dto.UserFootprintDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.UserFootprintInsertReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      goodsId:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.UserFootprintUpdateReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      goodsId:
        type: integer
      id:
        type: integer
      skuCode:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      userId:
        type: integer
    type: object
  dto.UserInfoChangeBasicInfoReq:
    properties:
      gender:
        type: integer
      headPortrait:
        type: string
      loginName:
        type: string
      userName:
        type: string
    type: object
  dto.UserInfoChangePasswordReq:
    properties:
      code:
        type: string
      codeId:
        type: string
      newPassword:
        type: string
      newPasswordCheck:
        type: string
      password:
        type: string
    type: object
  dto.UserInfoChangePhoneReq:
    properties:
      userPhone:
        type: string
      userPhoneCode:
        type: string
    type: object
  dto.UserInfoChangeUserEmailReq:
    properties:
      email:
        type: string
      token:
        type: string
    type: object
  dto.UserInfoUpdatePassword:
    properties:
      id:
        type: integer
      loginPassword:
        type: string
    type: object
  dto.UserInfoUpdateUserPhone:
    properties:
      id:
        type: integer
      userPhone:
        type: string
    type: object
  dto.UserLoginRequest:
    properties:
      jsCode:
        description: 登录时获取的 code，可通过wx.login获取
        type: string
    type: object
  dto.UserLoginResponse:
    properties:
      errCode:
        description: 错误码
        type: integer
      errMsg:
        description: 错误信息
        type: string
      openId:
        description: 用户唯一标识
        type: string
      sessionKey:
        description: 会话密钥
        type: string
      unionId:
        description: 用户在开放平台的唯一标识符，若当前小程序已绑定到微信开放平台帐号下会返回
        type: string
    type: object
  dto.UserPayAccountDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.UserPayAccountInsertReq:
    properties:
      classificationId:
        type: integer
      companyId:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      payAccount:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      userId:
        type: integer
    type: object
  dto.UserPayAccountUpdateReq:
    properties:
      classificationId:
        type: integer
      companyId:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      id:
        type: integer
      payAccount:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      userId:
        type: integer
    type: object
  dto.UserRoleDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.UserRoleInsertReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      roleId:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
      userId:
        type: integer
    type: object
  dto.UserRoleUpdateReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      id:
        description: 编号
        type: integer
      roleId:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
      userId:
        type: integer
    type: object
  dto.VendorsInsertReq:
    properties:
      address:
        type: string
      backupLinkman:
        type: string
      backupPhone:
        type: string
      city:
        type: integer
      code:
        type: string
      companyId:
        type: integer
      country:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      email:
        type: string
      fax:
        type: string
      linkman:
        type: string
      nameEn:
        type: string
      nameZh:
        type: string
      phone:
        type: string
      postalCode:
        type: string
      province:
        type: integer
      remark:
        type: string
      shortName:
        type: string
      status:
        type: string
      telephone:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.VendorsSelectResp:
    properties:
      id:
        type: integer
      nameZh:
        type: string
      shortName:
        type: string
    type: object
  dto.VendorsUpdateReq:
    properties:
      address:
        type: string
      backupLinkman:
        type: string
      backupPhone:
        type: string
      city:
        type: integer
      companyId:
        type: integer
      country:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      email:
        type: string
      fax:
        type: string
      id:
        type: integer
      linkman:
        type: string
      nameEn:
        type: string
      nameZh:
        type: string
      phone:
        type: string
      postalCode:
        type: string
      province:
        type: integer
      remark:
        type: string
      shortName:
        type: string
      status:
        type: string
      telephone:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  dto.VerifyCodeReq:
    properties:
      checkPhoneExistNoSms:
        type: boolean
      code:
        type: string
      id:
        type: string
      userPhone:
        type: string
    type: object
  dto.WarehouseGetPageResp:
    properties:
      address:
        type: string
      city:
        type: integer
      cityName:
        type: string
      companyId:
        type: integer
      companyName:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      district:
        type: integer
      districtName:
        type: string
      email:
        type: string
      id:
        type: integer
      isVirtual:
        type: string
      isVirtualName:
        type: string
      linkman:
        type: string
      mobile:
        type: string
      postCode:
        type: string
      province:
        type: integer
      provinceName:
        type: string
      remark:
        type: string
      status:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      warehouseCode:
        type: string
      warehouseName:
        type: string
    type: object
  dto.WarehouseGetResp:
    properties:
      address:
        type: string
      city:
        type: integer
      cityName:
        type: string
      companyId:
        type: integer
      companyName:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      district:
        type: integer
      districtName:
        type: string
      email:
        type: string
      id:
        type: integer
      isVirtual:
        type: string
      linkman:
        type: string
      mobile:
        type: string
      postCode:
        type: string
      province:
        type: integer
      provinceName:
        type: string
      remark:
        type: string
      status:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      warehouseCode:
        type: string
      warehouseName:
        type: string
    type: object
  dto.WarehouseSelectResp:
    properties:
      warehouseCode:
        type: string
      warehouseName:
        type: string
    type: object
  dto.Watermark:
    properties:
      appid:
        description: string
        type: string
      timestamp:
        description: 用户获取手机号操作的时间戳
        type: integer
    type: object
  go-admin_app_admin_models.SysApi:
    properties:
      action:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      handle:
        type: string
      id:
        type: integer
      path:
        type: string
      title:
        type: string
      type:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
    type: object
  go-admin_app_admin_models.SysConfig:
    properties:
      configKey:
        type: string
      configName:
        type: string
      configType:
        type: string
      configValue:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      isFrontend:
        type: string
      remark:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
    type: object
  go-admin_app_admin_models.SysDept:
    properties:
      children:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysDept'
        type: array
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      dataScope:
        type: string
      deptId:
        description: 部门编码
        type: integer
      deptName:
        description: 部门名称
        type: string
      deptPath:
        type: string
      email:
        description: 邮箱
        type: string
      leader:
        description: 负责人
        type: string
      params:
        type: string
      parentId:
        description: 上级部门
        type: integer
      phone:
        description: 手机
        type: string
      sort:
        description: 排序
        type: integer
      status:
        description: 状态
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
    type: object
  go-admin_app_admin_models.SysMenu:
    properties:
      action:
        type: string
      apis:
        items:
          type: integer
        type: array
      breadcrumb:
        type: string
      children:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysMenu'
        type: array
      component:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      dataScope:
        type: string
      icon:
        type: string
      is_select:
        type: boolean
      isFrame:
        type: string
      menuId:
        type: integer
      menuName:
        type: string
      menuType:
        type: string
      noCache:
        type: boolean
      params:
        type: string
      parentId:
        type: integer
      path:
        type: string
      paths:
        type: string
      permission:
        type: string
      roleId:
        type: integer
      sort:
        type: integer
      sysApi:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysApi'
        type: array
      title:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      visible:
        type: string
    type: object
  go-admin_app_oc_service_admin_dto.CsApplyCancelReq:
    properties:
      auditReason:
        description: 审核原因
        type: string
      csNo:
        description: 售后单号
        type: string
    type: object
  go-admin_app_oc_service_admin_dto.CsApplyDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  go-admin_app_oc_service_admin_dto.CsApplyUpdateReq:
    properties:
      applyPrice:
        type: string
      applyQuantity:
        type: integer
      auditReason:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      csDescription:
        type: string
      csIssueDetail:
        type: string
      csNo:
        type: string
      csReason:
        type: integer
      csSource:
        type: string
      csStatus:
        type: integer
      csType:
        type: integer
      id:
        type: integer
      isStatements:
        type: integer
      logicWarehouseCode:
        type: string
      orderId:
        type: string
      pics:
        type: string
      refundAmt:
        type: string
      reparationAmt:
        type: string
      telephone:
        type: string
      transferAmount:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      userId:
        type: integer
      userName:
        type: string
      vendorId:
        type: integer
      vendorName:
        type: string
      vendorSkuCode:
        type: string
      warehouseCode:
        type: string
      warehouseName:
        type: string
    type: object
  go-admin_app_oc_service_admin_dto.OrderIdsReq:
    properties:
      orderIds:
        items:
          type: string
        type: array
    type: object
  go-admin_app_oc_service_admin_dto.OrderInfoAddProductReq:
    properties:
      skuCode:
        type: string
      warehouseCode:
        type: string
    type: object
  go-admin_app_oc_service_admin_dto.OrderInfoCancelReq:
    properties:
      cancelBy:
        type: integer
      cancelByName:
        type: string
      id:
        type: integer
      remark:
        type: string
    type: object
  go-admin_app_oc_service_admin_dto.OrderInfoGetDetailResp:
    properties:
      actualStock:
        type: integer
      afterNum:
        type: integer
      batchGroup:
        type: integer
      brandEname:
        type: string
      brandId:
        type: integer
      brandName:
        type: string
      cancelQuantity:
        type: integer
      catId:
        type: integer
      catId2:
        type: integer
      catId3:
        type: integer
      catId4:
        type: integer
      catName:
        type: string
      catName2:
        type: string
      catName3:
        type: string
      catName4:
        type: string
      createdAt:
        type: string
      deliveryWarehouse:
        type: string
      finalQuantity:
        type: integer
      finalSubTotalAmount:
        type: number
      goodsId:
        type: integer
      id:
        type: integer
      lockStock:
        type: integer
      marketPrice:
        type: number
      moq:
        type: integer
      orderId:
        type: string
      originalItemsMount:
        type: number
      originalQuantity:
        type: integer
      productId:
        type: integer
      productModel:
        type: string
      productName:
        type: string
      productNo:
        type: string
      productPic:
        type: string
      purchasePrice:
        type: number
      quantity:
        type: integer
      returnNum:
        type: integer
      salePrice:
        type: number
      sendQuantity:
        type: integer
      skuCode:
        type: string
      stock:
        type: integer
      subTotalAmount:
        type: number
      supplierWarehouse:
        type: string
      tax:
        type: number
      unit:
        type: string
      updatedAt:
        type: string
      userId:
        type: integer
      userName:
        type: string
      userProductName:
        type: string
      userProductRemark:
        type: string
      vendorId:
        type: integer
      vendorName:
        type: string
      vendorSkuCode:
        type: string
      warehouseCode:
        type: string
    type: object
  go-admin_app_oc_service_admin_dto.OrderInfoGetPageResp:
    properties:
      address:
        type: string
      areaId:
        type: integer
      areaName:
        type: string
      cancelBy:
        type: integer
      cancelByName:
        type: string
      cancelByType:
        type: integer
      cityId:
        type: integer
      cityName:
        type: string
      classifyQuantity:
        type: integer
      companyName:
        type: string
      confirmOrderReceiptTime:
        type: string
      confirmTime:
        type: string
      consignee:
        type: string
      contactEmail:
        type: string
      contractNo:
        type: string
      countryId:
        type: integer
      countryName:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createFrom:
        type: string
      createdAt:
        type: string
      deliverId:
        type: integer
      externalOrderNo:
        type: string
      finalTotalAmount:
        type: number
      id:
        type: integer
      ip:
        type: string
      isFormalOrder:
        type: integer
      isOverBudget:
        type: integer
      isTransform:
        type: integer
      isUploadReceipt:
        description: 是否回单上传 1是 0否 等于1时签收按钮替换成回单按钮
        type: integer
      itemsAmount:
        type: number
      logisticalRemark:
        type: string
      mobile:
        type: string
      orderDetails:
        items:
          $ref: '#/definitions/models.OrderDetail'
        type: array
      orderFileRemark:
        type: string
      orderId:
        type: string
      orderImages:
        items:
          $ref: '#/definitions/models.OrderImage'
        type: array
      orderStatus:
        type: integer
      originalItemsAmount:
        type: number
      originalTotalAmount:
        type: number
      productQuantity:
        type: integer
      provinceId:
        type: integer
      provinceName:
        type: string
      receiptImages:
        items:
          $ref: '#/definitions/models.OrderImage'
        type: array
      receiveStatus:
        type: integer
      remark:
        type: string
      returnQuantiry:
        type: integer
      rmaStatus:
        type: integer
      sendStatus:
        type: integer
      sendTime:
        type: string
      telephone:
        type: string
      totalAmount:
        type: number
      townId:
        type: integer
      townName:
        type: string
      updatedAt:
        type: string
      userCompanyId:
        type: integer
      userCompanyName:
        type: string
      userId:
        type: integer
      userName:
        type: string
      validFlag:
        type: integer
      warehouseCode:
        type: string
      warehouseName:
        type: string
    type: object
  go-admin_app_oc_service_admin_dto.OrderInfoGetResp:
    properties:
      address:
        type: string
      areaId:
        type: integer
      areaName:
        type: string
      cancelBy:
        type: integer
      cancelByName:
        type: string
      cancelByType:
        type: integer
      cityId:
        type: integer
      cityName:
        type: string
      classifyQuantity:
        type: integer
      companyName:
        type: string
      confirmOrderReceiptTime:
        type: string
      confirmTime:
        type: string
      consignee:
        type: string
      contactEmail:
        type: string
      contractNo:
        type: string
      countryId:
        type: integer
      countryName:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createFrom:
        type: string
      createdAt:
        type: string
      deliverId:
        type: integer
      externalOrderNo:
        type: string
      finalTotalAmount:
        type: number
      id:
        type: integer
      ip:
        type: string
      isFormalOrder:
        type: integer
      isOverBudget:
        type: integer
      isTransform:
        type: integer
      itemsAmount:
        type: number
      logisticalRemark:
        type: string
      mobile:
        type: string
      orderDetails:
        items:
          $ref: '#/definitions/go-admin_app_oc_service_admin_dto.OrderInfoGetDetailResp'
        type: array
      orderFileRemark:
        type: string
      orderId:
        type: string
      orderImages:
        items:
          $ref: '#/definitions/models.OrderImage'
        type: array
      orderStatus:
        type: integer
      originalItemsAmount:
        type: number
      originalTotalAmount:
        type: number
      productQuantity:
        type: integer
      provinceId:
        type: integer
      provinceName:
        type: string
      receiptImages:
        items:
          $ref: '#/definitions/models.OrderImage'
        type: array
      receiveStatus:
        type: integer
      remark:
        type: string
      rmaStatus:
        type: integer
      sendStatus:
        type: integer
      sendTime:
        type: string
      telephone:
        type: string
      totalAmount:
        type: number
      townId:
        type: integer
      townName:
        type: string
      updatedAt:
        type: string
      userCompanyId:
        type: integer
      userCompanyName:
        type: string
      userId:
        type: integer
      userName:
        type: string
      validFlag:
        type: integer
      warehouseCode:
        type: string
    type: object
  go-admin_app_oc_service_admin_dto.OrderInfoInsertReq:
    properties:
      address:
        type: string
      areaId:
        type: integer
      areaName:
        type: string
      cityId:
        type: integer
      cityName:
        type: string
      consignee:
        type: string
      contractNo:
        type: string
      countryId:
        type: integer
      countryName:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      deliverId:
        type: integer
      email:
        type: string
      logisticalRemark:
        type: string
      mobile:
        type: string
      orderFileRemark:
        type: string
      orderImages:
        items:
          $ref: '#/definitions/go-admin_app_oc_service_admin_dto.OrderInfoOrderImagesInsertReq'
        type: array
      products:
        items:
          $ref: '#/definitions/go-admin_app_oc_service_admin_dto.OrderInfoProductInsertReq'
        type: array
      provinceId:
        type: integer
      provinceName:
        type: string
      remark:
        type: string
      telephone:
        type: string
      townId:
        type: integer
      townName:
        type: string
      userCompanyId:
        type: integer
      userCompanyName:
        type: string
      userId:
        type: integer
      userName:
        type: string
      warehouseCode:
        type: string
    type: object
  go-admin_app_oc_service_admin_dto.OrderInfoOrderImagesInsertReq:
    properties:
      name:
        type: string
      url:
        type: string
    type: object
  go-admin_app_oc_service_admin_dto.OrderInfoProductInsertReq:
    properties:
      brandEname:
        type: string
      brandId:
        type: integer
      brandName:
        type: string
      checkStockStatus:
        type: integer
      companyId:
        type: integer
      goodsId:
        type: integer
      moq:
        type: integer
      productId:
        type: integer
      productModel:
        type: string
      productName:
        type: string
      productNo:
        type: string
      productPic:
        type: string
      quantity:
        type: integer
      salePrice:
        type: number
      skuCode:
        type: string
      stock:
        type: integer
      subTotalAmount:
        type: number
      tax:
        type: number
      unit:
        type: string
      vendorId:
        type: integer
      vendorName:
        type: string
      vendorSkuCode:
        type: string
    type: object
  go-admin_app_oc_service_admin_dto.OrderInfoReceiptReq:
    properties:
      id:
        description: id
        type: integer
      receiptImages:
        items:
          $ref: '#/definitions/go-admin_app_oc_service_admin_dto.OrderInfoOrderImagesInsertReq'
        type: array
    type: object
  go-admin_app_oc_service_admin_dto.OrderInfoUpdateReq:
    properties:
      contractNo:
        type: string
      id:
        type: integer
      orderFileRemark:
        type: string
      orderImages:
        items:
          $ref: '#/definitions/go-admin_app_oc_service_admin_dto.OrderInfoOrderImagesInsertReq'
        type: array
      remark:
        type: string
    type: object
  go-admin_app_oc_service_admin_dto.OrderInfoUpdateShippingReq:
    properties:
      address:
        type: string
      areaId:
        type: integer
      areaName:
        type: string
      cityId:
        type: integer
      cityName:
        type: string
      consignee:
        type: string
      countryId:
        type: integer
      countryName:
        type: string
      deliverId:
        type: integer
      email:
        type: string
      id:
        type: integer
      logisticalRemark:
        type: string
      mobile:
        type: string
      provinceId:
        type: integer
      provinceName:
        type: string
      telephone:
        type: string
      townId:
        type: integer
      townName:
        type: string
    type: object
  go-admin_app_oc_service_mall_dto.CsApplyCancelReq:
    properties:
      auditReason:
        description: 审核原因
        type: string
      csNo:
        description: 售后单号
        type: string
    type: object
  go-admin_app_oc_service_mall_dto.CsApplyDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  go-admin_app_oc_service_mall_dto.CsApplyInsertReq:
    properties:
      applyPrice:
        description: 申请金额
        type: number
      applyQuantity:
        description: 申请总数量
        type: integer
      auditReason:
        description: 审核原因
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      csDescription:
        description: 售后申请描述
        type: string
      csIssueDetail:
        description: 产品质量问题投诉必填信息
        type: string
      csNo:
        description: 售后申请编号
        type: string
      csReason:
        description: 售后原因id
        type: integer
      csSource:
        description: mall ,sxyz
        type: string
      csStatus:
        description: 售后状态：0-待处理、1-已确认、2-已驳回、99-完结
        type: integer
      csType:
        description: 售后类型：0-退货、1-换货、2-退款、3-发票问题、4-技术及资料支持、5-技术及资料支持、6-缺货少配件、7-售后维修、8-其他、9-订单取消、10-补发货（仅限erp迁移老数据使用）
        type: integer
      isStatements:
        description: 订单是否存在对账单 0否 1是
        type: integer
      logicWarehouseCode:
        description: 退货逻辑仓code
        type: string
      orderId:
        description: 销售订单号
        type: string
      pics:
        description: 售后申请图片
        type: string
      refundAmt:
        description: 退款金额
        type: string
      reparationAmt:
        description: 赔款金额
        type: string
      telephone:
        description: 联系电话
        type: string
      transferAmount:
        description: 转款金额
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      userId:
        description: 提交人id
        type: integer
      userName:
        description: 提交人名称
        type: string
      vendorId:
        description: 售后单所属货主id
        type: integer
      vendorName:
        description: 售后单所属货主名
        type: string
      vendorSkuCode:
        description: 售后单所属货主sku
        type: string
      warehouseCode:
        description: 退货实体仓库code
        type: string
      warehouseName:
        description: 退货实体仓库name
        type: string
    type: object
  go-admin_app_oc_service_mall_dto.CsApplyUpdateReq:
    properties:
      applyPrice:
        description: 申请金额
        type: number
      applyQuantity:
        description: 申请总数量
        type: integer
      auditReason:
        description: 审核原因
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      csDescription:
        description: 售后申请描述
        type: string
      csIssueDetail:
        description: 产品质量问题投诉必填信息
        type: string
      csNo:
        description: 售后申请编号
        type: string
      csReason:
        description: 售后原因id
        type: integer
      csSource:
        description: mall ,sxyz
        type: string
      csStatus:
        description: 售后状态：0-待处理、1-已确认、2-已驳回、99-完结
        type: integer
      csType:
        description: 售后类型：0-退货、1-换货、2-退款、3-发票问题、4-技术及资料支持、5-技术及资料支持、6-缺货少配件、7-售后维修、8-其他、9-订单取消、10-补发货（仅限erp迁移老数据使用）
        type: integer
      id:
        type: integer
      isStatements:
        description: 订单是否存在对账单 0否 1是
        type: integer
      logicWarehouseCode:
        description: 退货逻辑仓code
        type: string
      orderId:
        description: 销售订单号
        type: string
      pics:
        description: 售后申请图片
        type: string
      refundAmt:
        description: 退款金额
        type: string
      reparationAmt:
        description: 赔款金额
        type: string
      telephone:
        description: 联系电话
        type: string
      transferAmount:
        description: 转款金额
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      userId:
        description: 提交人id
        type: integer
      userName:
        description: 提交人名称
        type: string
      vendorId:
        description: 售后单所属货主id
        type: integer
      vendorName:
        description: 售后单所属货主名
        type: string
      vendorSkuCode:
        description: 售后单所属货主sku
        type: string
      warehouseCode:
        description: 退货实体仓库code
        type: string
      warehouseName:
        description: 退货实体仓库name
        type: string
    type: object
  go-admin_app_oc_service_mall_dto.OrderInfoCancelReq:
    properties:
      cancelBy:
        type: integer
      cancelByName:
        type: string
      id:
        type: string
      remark:
        type: string
    type: object
  go-admin_app_oc_service_mall_dto.OrderInfoDeleteReq:
    properties:
      id:
        type: string
    type: object
  go-admin_app_oc_service_mall_dto.OrderInfoGetDetailResp:
    properties:
      actualStock:
        type: integer
      afterNum:
        type: integer
      batchGroup:
        type: integer
      brandEname:
        type: string
      brandId:
        type: integer
      brandName:
        type: string
      cancelQuantity:
        type: integer
      catId:
        type: integer
      catId2:
        type: integer
      catId3:
        type: integer
      catId4:
        type: integer
      catName:
        type: string
      catName2:
        type: string
      catName3:
        type: string
      catName4:
        type: string
      createdAt:
        type: string
      deliveryWarehouse:
        type: string
      finalQuantity:
        type: integer
      finalSubTotalAmount:
        type: number
      goodsId:
        type: integer
      id:
        type: integer
      lockStock:
        type: integer
      marketPrice:
        type: number
      moq:
        type: integer
      orderId:
        type: string
      originalItemsMount:
        type: number
      originalQuantity:
        type: integer
      productId:
        type: integer
      productModel:
        type: string
      productName:
        type: string
      productNo:
        type: string
      productPic:
        type: string
      purchasePrice:
        type: number
      quantity:
        type: integer
      returnNum:
        type: integer
      salePrice:
        type: number
      sendQuantity:
        type: integer
      skuCode:
        type: string
      subTotalAmount:
        type: number
      supplierWarehouse:
        type: string
      unit:
        type: string
      updatedAt:
        type: string
      userId:
        type: integer
      userName:
        type: string
      userProductName:
        type: string
      userProductRemark:
        type: string
      vendorId:
        type: integer
      vendorName:
        type: string
      warehouseCode:
        type: string
    type: object
  go-admin_app_oc_service_mall_dto.OrderInfoGetPageResp:
    properties:
      address:
        type: string
      areaId:
        type: integer
      areaName:
        type: string
      buttonList:
        items:
          type: integer
        type: array
      cancelBy:
        type: integer
      cancelByName:
        type: string
      cancelByType:
        type: integer
      cityId:
        type: integer
      cityName:
        type: string
      classifyQuantity:
        type: integer
      companyName:
        type: string
      confirmOrderReceiptTime:
        type: string
      confirmTime:
        type: string
      consignee:
        type: string
      contactEmail:
        type: string
      contractNo:
        type: string
      countryId:
        type: integer
      countryName:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createFrom:
        type: string
      createdAt:
        type: string
      deliverId:
        type: integer
      externalOrderNo:
        type: string
      finalTotalAmount:
        type: number
      id:
        type: integer
      ip:
        type: string
      isFormalOrder:
        type: integer
      isOverBudget:
        type: integer
      isTransform:
        type: integer
      itemsAmount:
        type: number
      logisticalRemark:
        type: string
      mobile:
        type: string
      orderDetails:
        items:
          $ref: '#/definitions/dto.OrderInfoGetPageRespOrderDetail'
        type: array
      orderFileRemark:
        type: string
      orderId:
        type: string
      orderImages:
        items:
          $ref: '#/definitions/models.OrderImage'
        type: array
      orderStatus:
        type: integer
      originalItemsAmount:
        type: number
      originalTotalAmount:
        type: number
      productQuantity:
        type: integer
      provinceId:
        type: integer
      provinceName:
        type: string
      receiptImages:
        items:
          $ref: '#/definitions/models.OrderImage'
        type: array
      receiveStatus:
        type: integer
      remark:
        type: string
      rmaStatus:
        type: integer
      sendStatus:
        type: integer
      sendTime:
        type: string
      telephone:
        type: string
      totalAmount:
        type: number
      townId:
        type: integer
      townName:
        type: string
      updatedAt:
        type: string
      userCompanyId:
        type: integer
      userCompanyName:
        type: string
      userId:
        type: integer
      userName:
        type: string
      validFlag:
        type: integer
      warehouseCode:
        type: string
      warehouseName:
        type: string
    type: object
  go-admin_app_oc_service_mall_dto.OrderInfoGetResp:
    properties:
      address:
        type: string
      addressFullName:
        type: string
      areaId:
        type: integer
      areaName:
        type: string
      buttonList:
        items:
          type: integer
        type: array
      cancelBy:
        type: integer
      cancelByName:
        type: string
      cancelByType:
        type: integer
      cityId:
        type: integer
      cityName:
        type: string
      classifyQuantity:
        type: integer
      companyName:
        type: string
      confirmOrderReceiptTime:
        type: string
      confirmTime:
        type: string
      consignee:
        type: string
      contactEmail:
        type: string
      contractNo:
        type: string
      countryId:
        type: integer
      countryName:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createFrom:
        type: string
      createdAt:
        type: string
      deliverId:
        type: integer
      externalOrderNo:
        type: string
      finalTotalAmount:
        type: number
      id:
        type: integer
      ip:
        type: string
      isFormalOrder:
        type: integer
      isOverBudget:
        type: integer
      isTransform:
        type: integer
      itemsAmount:
        type: number
      logisticalRemark:
        type: string
      mobile:
        type: string
      orderDetails:
        items:
          $ref: '#/definitions/go-admin_app_oc_service_mall_dto.OrderInfoGetDetailResp'
        type: array
      orderFileRemark:
        type: string
      orderId:
        type: string
      orderImages:
        items:
          $ref: '#/definitions/models.OrderImage'
        type: array
      orderStatus:
        type: integer
      originalItemsAmount:
        type: number
      originalTotalAmount:
        type: number
      productQuantity:
        type: integer
      provinceId:
        type: integer
      provinceName:
        type: string
      receiptImages:
        items:
          $ref: '#/definitions/models.OrderImage'
        type: array
      receiveStatus:
        type: integer
      remark:
        type: string
      rmaStatus:
        type: integer
      sendStatus:
        type: integer
      sendTime:
        type: string
      telephone:
        type: string
      totalAmount:
        type: number
      townId:
        type: integer
      townName:
        type: string
      updatedAt:
        type: string
      userCompanyId:
        type: integer
      userCompanyName:
        type: string
      userId:
        type: integer
      userName:
        type: string
      validFlag:
        type: integer
      warehouseCode:
        type: string
    type: object
  go-admin_app_oc_service_mall_dto.OrderInfoReceiptReq:
    properties:
      id:
        type: string
    type: object
  go-admin_app_pc_models.LogTypes:
    properties:
      id:
        type: integer
      mapping:
        type: string
      model_name:
        type: string
      title:
        type: string
      type:
        type: string
    type: object
  go-admin_app_pc_service_admin_dto.AttrsKeyName:
    properties:
      key:
        type: integer
      name:
        type: string
      value:
        type: string
    type: object
  go-admin_app_pc_service_admin_dto.CategoryAttributeDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  go-admin_app_pc_service_admin_dto.CategoryAttributeInsertReq:
    properties:
      attributeId:
        type: integer
      categoryId:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      filterFlag:
        type: integer
      rangeVal:
        type: string
      requiredFlag:
        type: integer
      seq:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  go-admin_app_pc_service_admin_dto.CategoryAttributeUpdateReq:
    properties:
      attributeId:
        type: integer
      categoryId:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      filterFlag:
        type: integer
      id:
        description: id
        type: integer
      rangeVal:
        type: string
      requiredFlag:
        type: integer
      seq:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  go-admin_app_pc_service_admin_dto.CategoryUpdateReq:
    properties:
      categoryTaxCode:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      description:
        type: string
      id:
        description: id
        type: integer
      keyWords:
        type: string
      level1Catid:
        type: integer
      level2Catid:
        type: integer
      level3Catid:
        type: integer
      level4Catid:
        type: integer
      mediaInstance:
        $ref: '#/definitions/go-admin_app_pc_service_admin_dto.MediaInstanceInsertReq'
      nameEn:
        type: string
      nameZh:
        type: string
      parentId:
        type: integer
      seq:
        type: integer
      status:
        type: integer
      tax:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  go-admin_app_pc_service_admin_dto.GetProductExtAttributeReq:
    properties:
      attrList:
        items:
          $ref: '#/definitions/go-admin_app_pc_service_admin_dto.AttrsKeyName'
        type: array
      categoryId:
        type: integer
      skuCode:
        type: string
      status:
        type: integer
    type: object
  go-admin_app_pc_service_admin_dto.GoodsGetPageReq:
    properties:
      approveRemarkOrder:
        type: string
      approveStatus:
        type: integer
      approveStatusOrder:
        type: string
      createByNameOrder:
        type: string
      createByOrder:
        type: string
      createdAtOrder:
        type: string
      deletedAtOrder:
        type: string
      idOrder:
        type: string
      ids[]:
        items:
          type: integer
        type: array
      marketPriceOrder:
        type: string
      nameZh:
        type: string
      onlineStatus:
        type: integer
      onlineStatusOrder:
        type: string
      pageIndex:
        type: integer
      pageSize:
        type: integer
      priceModifyReasonOrder:
        type: string
      productNo:
        type: string
      productNoOrder:
        type: string
      skuCode:
        type: string
      skuCodeOrder:
        type: string
      status:
        type: integer
      statusOrder:
        type: string
      supplierSkuCode:
        type: string
      supplierSkuCodeOrder:
        type: string
      updateByNameOrder:
        type: string
      updateByOrder:
        type: string
      updatedAtOrder:
        type: string
      vendorId:
        type: integer
      vendorIdOrder:
        type: string
      vendorShortName:
        type: string
      warehouseCode:
        type: string
      warehouseCodeList[]:
        items:
          type: string
        type: array
      warehouseCodeOrder:
        type: string
    type: object
  go-admin_app_pc_service_admin_dto.MediaInstanceInsertReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      mediaDir:
        type: string
      mediaName:
        type: string
      seq:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
      waterMark:
        type: integer
    type: object
  go-admin_app_pc_service_admin_dto.ProductDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  go-admin_app_pc_service_admin_dto.ProductExtAttribute:
    properties:
      key:
        type: integer
      name:
        type: string
      value:
        type: string
    type: object
  go-admin_app_pc_service_admin_dto.ProductGetPageReq:
    properties:
      accessoriesOrder:
        type: string
      assembleFlagOrder:
        type: string
      brandIdOrder:
        type: string
      brandZh:
        type: string
      briefDescOrder:
        type: string
      bulkyFlagOrder:
        type: string
      consumptiveFlagOrder:
        type: string
      createByNameOrder:
        type: string
      createByOrder:
        type: string
      createDateEnd:
        type: string
      createDateStart:
        type: string
      createdAtOrder:
        type: string
      customMadeFlagOrder:
        type: string
      deletedAtOrder:
        type: string
      fragileFlagOrder:
        type: string
      hazardFlagOrder:
        type: string
      idOrder:
        type: string
      ids[]:
        items:
          type: integer
        type: array
      isFluidOrder:
        type: string
      isValuablesOrder:
        type: string
      level1Catid:
        type: integer
      level2Catid:
        type: integer
      level3Catid:
        type: integer
      level4Catid:
        type: integer
      mfgModel:
        type: string
      mfgModelOrder:
        type: string
      nameEnOrder:
        type: string
      nameZh:
        type: string
      nameZhOrder:
        type: string
      otherLabelOrder:
        type: string
      packHeightOrder:
        type: string
      packLengthOrder:
        type: string
      packWeightOrder:
        type: string
      packWidthOrder:
        type: string
      pageIndex:
        type: integer
      pageSize:
        type: integer
      physicalUomOrder:
        type: string
      productAliasOrder:
        type: string
      salesMoqOrder:
        type: string
      salesPhysicalFactorOrder:
        type: string
      salesUomOrder:
        type: string
      skuCode:
        type: string
      skuCodeOrder:
        type: string
      status:
        type: integer
      statusOrder:
        type: string
      storageFlagOrder:
        type: string
      storageTimeOrder:
        type: string
      supplierSkuCode:
        type: string
      supplierSkuCodeOrder:
        type: string
      taxOrder:
        type: string
      titleOrder:
        type: string
      updateByNameOrder:
        type: string
      updateByOrder:
        type: string
      updatedAtOrder:
        type: string
      vendorId:
        type: integer
      vendorIdOrder:
        type: string
    type: object
  go-admin_app_pc_service_admin_dto.ProductInsertReq:
    properties:
      accessories:
        type: string
      assembleFlag:
        type: integer
      attrList:
        items:
          $ref: '#/definitions/go-admin_app_pc_service_admin_dto.ProductExtAttribute'
        type: array
      barcode:
        type: string
      brandId:
        type: integer
      briefDesc:
        type: string
      bulkyFlag:
        type: integer
      certificateImage:
        type: string
      consumptiveFlag:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      customMadeFlag:
        type: integer
      fragileFlag:
        type: integer
      hazardClass:
        type: integer
      hazardFlag:
        type: integer
      isFluid:
        type: integer
      isValuables:
        type: integer
      mfgModel:
        type: string
      nameEn:
        type: string
      nameZh:
        type: string
      otherLabel:
        type: string
      packHeight:
        type: string
      packLength:
        type: string
      packWeight:
        type: string
      packWidth:
        type: string
      physicalUom:
        type: string
      productAlias:
        type: string
      productCategory:
        items:
          $ref: '#/definitions/dto.ProductCategory'
        type: array
      productCategoryPrimary:
        type: integer
      productImage:
        items:
          $ref: '#/definitions/go-admin_app_pc_service_admin_dto.MediaInstanceInsertReq'
        type: array
      refundFlag:
        type: integer
      salesMoq:
        type: integer
      salesPhysicalFactor:
        type: string
      salesUom:
        type: string
      skuCode:
        type: string
      status:
        type: integer
      storageFlag:
        type: integer
      storageTime:
        type: integer
      supplierSkuCode:
        type: string
      tax:
        type: string
      title:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      vendorId:
        type: integer
    type: object
  go-admin_app_pc_service_admin_dto.ProductUpdateReq:
    properties:
      accessories:
        type: string
      assembleFlag:
        type: integer
      attrList:
        items:
          $ref: '#/definitions/go-admin_app_pc_service_admin_dto.ProductExtAttribute'
        type: array
      barcode:
        type: string
      brandId:
        type: integer
      briefDesc:
        type: string
      bulkyFlag:
        type: integer
      certificateImage:
        type: string
      consumptiveFlag:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      customMadeFlag:
        type: integer
      fragileFlag:
        type: integer
      hazardClass:
        type: integer
      hazardFlag:
        type: integer
      id:
        description: 产品id
        type: integer
      isFluid:
        type: integer
      isValuables:
        type: integer
      mfgModel:
        type: string
      nameEn:
        type: string
      nameZh:
        type: string
      otherLabel:
        type: string
      packHeight:
        type: string
      packLength:
        type: string
      packWeight:
        type: string
      packWidth:
        type: string
      physicalUom:
        type: string
      productAlias:
        type: string
      productCategory:
        items:
          $ref: '#/definitions/dto.ProductCategory'
        type: array
      productCategoryPrimary:
        type: integer
      productImage:
        items:
          $ref: '#/definitions/go-admin_app_pc_service_admin_dto.MediaInstanceInsertReq'
        type: array
      refundFlag:
        type: integer
      salesMoq:
        type: integer
      salesPhysicalFactor:
        type: string
      salesUom:
        type: string
      skuCode:
        type: string
      status:
        type: integer
      storageFlag:
        type: integer
      storageTime:
        type: integer
      supplierSkuCode:
        type: string
      tax:
        type: string
      title:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      vendorId:
        type: integer
    type: object
  go-admin_app_pc_service_mall_dto.GoodsGetPageResp:
    properties:
      brandEn:
        type: string
      brandFirstLetter:
        type: string
      brandId:
        type: integer
      brandZh:
        type: string
      goodsId:
        type: integer
      image:
        $ref: '#/definitions/models.MediaInstance'
      isCollect:
        type: boolean
      marketPrice:
        type: number
      mfgModel:
        type: string
      nakedSalePrice:
        type: number
      nameZh:
        type: string
      productNo:
        type: string
      quantity:
        type: integer
      salesMoq:
        type: integer
      salesUom:
        type: string
      skuCode:
        type: string
      stock:
        type: integer
      tax:
        type: string
      vendorId:
        type: integer
      vendorName:
        type: string
    type: object
  go-admin_app_pc_service_mall_dto.GoodsGetResp:
    properties:
      info:
        $ref: '#/definitions/dto.GoodsGetInfo'
      navigation:
        items:
          additionalProperties: {}
          type: object
        type: array
      productExtAttribute: {}
    type: object
  go-admin_app_uc_service_admin_dto.AddressDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  go-admin_app_uc_service_admin_dto.AddressInsertReq:
    properties:
      addressType:
        description: |-
          CompanyId int `json:"companyId" comment:"公司ID"`
          CompanyName string `json:"companyName" comment:"公司名称"`
        type: integer
      areaId:
        type: integer
      areaName:
        type: string
      cellPhone:
        type: string
      cityId:
        type: integer
      cityName:
        type: string
      countryId:
        type: integer
      countryName:
        type: string
      detailAddress:
        type: string
      email:
        description: IsDeadlineReceivingAddr int    `json:"isDeadlineReceivingAddr"
          comment:"是否账期收货地址"`
        type: string
      isDefault:
        type: integer
      postalCode:
        type: string
      provinceId:
        type: integer
      provinceName:
        type: string
      receiverName:
        type: string
      telephone:
        type: string
      townId:
        type: integer
      townName:
        type: string
      userId:
        type: integer
    type: object
  go-admin_app_uc_service_admin_dto.AddressUpdateReq:
    properties:
      addressType:
        description: |-
          CompanyId     int    `json:"companyId" comment:"公司ID"`
          CompanyName   string `json:"companyName" comment:"公司名称"`
        type: integer
      areaId:
        type: integer
      areaName:
        type: string
      cellPhone:
        type: string
      cityId:
        type: integer
      cityName:
        type: string
      countryId:
        type: integer
      countryName:
        type: string
      department:
        type: string
      detailAddress:
        type: string
      email:
        description: IsDeadlineReceivingAddr int    `json:"isDeadlineReceivingAddr"
          comment:"是否账期收货地址"`
        type: string
      id:
        description: 编号
        type: integer
      isDefault:
        type: integer
      pcCode:
        type: string
      postalCode:
        type: string
      provinceId:
        type: integer
      provinceName:
        type: string
      receiverName:
        type: string
      telephone:
        type: string
      townId:
        type: integer
      townName:
        type: string
      userId:
        type: integer
    type: object
  go-admin_app_uc_service_admin_dto.ImportReq:
    properties:
      objects:
        type: string
    type: object
  go-admin_app_uc_service_admin_dto.UserInfoInsertReq:
    properties:
      companyDepartmentId:
        type: integer
      companyDepartmentIds:
        items:
          type: integer
        type: array
      companyId:
        type: integer
      gender:
        type: string
      headPortrait:
        type: string
      loginName:
        type: string
      loginPassword:
        type: string
      telephone:
        type: string
      userEmail:
        type: string
      userName:
        type: string
      userPhone:
        type: string
      userRole:
        description: 用户角色
        items:
          type: integer
        type: array
      userStatus:
        type: integer
    type: object
  go-admin_app_uc_service_admin_dto.UserInfoUpdateReq:
    properties:
      companyDepartmentId:
        type: integer
      companyId:
        type: integer
      gender:
        type: string
      headPortrait:
        type: string
      id:
        type: integer
      loginName:
        type: string
      loginPassword:
        type: string
      telephone:
        type: string
      userEmail:
        type: string
      userName:
        type: string
      userPhone:
        type: string
      userRole:
        description: 用户角色
        items:
          type: integer
        type: array
      userStatus:
        type: integer
    type: object
  go-admin_app_uc_service_mall_dto.AddressDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  go-admin_app_uc_service_mall_dto.AddressInsertReq:
    properties:
      addressType:
        type: integer
      areaId:
        type: integer
      areaName:
        type: string
      cellPhone:
        type: string
      cityId:
        type: integer
      cityName:
        type: string
      companyId:
        type: integer
      companyName:
        type: string
      countryId:
        type: integer
      countryName:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      department:
        type: string
      detailAddress:
        type: string
      email:
        type: string
      isDeadlineReceivingAddr:
        type: integer
      isDefault:
        type: integer
      pcCode:
        type: string
      postalCode:
        type: string
      provinceId:
        type: integer
      provinceName:
        type: string
      receiverName:
        type: string
      telephone:
        type: string
      townId:
        type: integer
      townName:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      userId:
        type: integer
    type: object
  go-admin_app_uc_service_mall_dto.AddressUpdateReq:
    properties:
      addressType:
        type: integer
      areaId:
        type: integer
      areaName:
        type: string
      cellPhone:
        type: string
      cityId:
        type: integer
      cityName:
        type: string
      companyId:
        type: integer
      companyName:
        type: string
      countryId:
        type: integer
      countryName:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      department:
        type: string
      detailAddress:
        type: string
      email:
        type: string
      id:
        description: 编号
        type: integer
      isDeadlineReceivingAddr:
        type: integer
      isDefault:
        type: integer
      pcCode:
        type: string
      postalCode:
        type: string
      provinceId:
        type: integer
      provinceName:
        type: string
      receiverName:
        type: string
      telephone:
        type: string
      townId:
        type: integer
      townName:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      userId:
        type: integer
    type: object
  go-admin_app_uc_service_mall_dto.UserCollectGetListPageRes:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      goodsId:
        description: 商品表id
        type: integer
      id:
        type: integer
      productBrandZh:
        description: 品牌名称
        type: string
      productImage:
        description: 商品图片
        type: string
      productMarketPrice:
        description: 销售价
        type: number
      productMfgModel:
        description: 产品型号
        type: string
      productName:
        description: 商品名
        type: string
      productSalesMoq:
        description: 商品最小起订量
        type: integer
      productStock:
        description: 商品库存
        type: integer
      productVendorName:
        description: 货主名称
        type: string
      skuCode:
        description: 产品SKU
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      userId:
        description: 用户ID
        type: integer
      warehouseCode:
        description: 仓库code
        type: string
    type: object
  go-admin_app_uc_service_mall_dto.UserCollectInsertReq:
    properties:
      goodsId:
        description: 商品表id
        type: integer
      goodsIds:
        description: 商品表id 和 GoodsId任选一个
        items:
          type: integer
        type: array
    type: object
  go-admin_app_uc_service_mall_dto.UserCollectUpdateReq:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      goodsId:
        description: 商品表id
        type: integer
      id:
        description: 编号
        type: integer
      skuCode:
        description: 产品SKU
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      userId:
        description: 用户ID
        type: integer
      warehouseCode:
        description: 仓库code
        type: string
    type: object
  go-admin_app_uc_service_mall_dto.UserInfoDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  go-admin_app_uc_service_mall_dto.UserInfoInsertReq:
    properties:
      canLogin:
        description: 是否可登陆
        type: integer
      companyDepartmentId:
        description: 用户所属部门
        type: integer
      companyId:
        description: 公司ID
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      deliveryMailset:
        description: 发货邮件通知设置，英文逗号分割{1,2,3=下单人,收货人,销售}
        type: string
      deviceToken:
        description: 手机标识码
        type: string
      easReceiveMsgSet:
        description: EAS审批短信通知设置，英文逗号分割{1=采购人（审批驳回）;2=审批人（采购审批）}
        type: string
      emailApproveCronExpr:
        description: 邮件定时规则表达式
        type: string
      emailVerifyStatus:
        description: 邮箱验证状态（0：未验证 1：已验证 2验证失败）
        type: integer
      gender:
        description: 性别 (0:女 1:男)
        type: string
      headPortrait:
        description: 头像地址
        type: string
      invoiceMailset:
        description: 发票邮件通知设置，英文逗号分割{1,2,3,4=下单人,收货人,销售,收票人}
        type: string
      isAdminShow:
        description: 用户状态（1是，0否）
        type: string
      isOpen:
        description: 此用户的邮件审批是否开启
        type: integer
      loginName:
        description: 用户登录名
        type: string
      loginPassword:
        description: 登录密码
        type: string
      phoneType:
        description: 手机类型(1 IOS 2android)
        type: integer
      position:
        type: string
      registerMode:
        description: 注册方式 (1 手机注册，2邮箱注册,3 微信注册)
        type: integer
      registerSource:
        description: 注册用户渠道来源来源
        type: string
      telephone:
        description: 用户座机号
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      userEmail:
        description: 用户邮箱
        type: string
      userName:
        description: 用户名称
        type: string
      userPhone:
        description: 手机号码
        type: string
      userSource:
        description: 用户来源（1www,2opc,3android,4IOS,5M,6微信,7微信小程序，8脉信，9CRM）
        type: integer
      userStatus:
        description: 用户状态（1可用，0不可用）
        type: integer
      userType:
        description: 用户类型 1.下单人2联系人3审批人4通用
        type: string
    type: object
  go-admin_app_uc_service_mall_dto.UserInfoUpdateReq:
    properties:
      canLogin:
        description: 是否可登陆
        type: integer
      companyDepartmentId:
        description: 用户所属部门
        type: integer
      companyId:
        description: 公司ID
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      deliveryMailset:
        description: 发货邮件通知设置，英文逗号分割{1,2,3=下单人,收货人,销售}
        type: string
      deviceToken:
        description: 手机标识码
        type: string
      easReceiveMsgSet:
        description: EAS审批短信通知设置，英文逗号分割{1=采购人（审批驳回）;2=审批人（采购审批）}
        type: string
      emailApproveCronExpr:
        description: 邮件定时规则表达式
        type: string
      emailVerifyStatus:
        description: 邮箱验证状态（0：未验证 1：已验证 2验证失败）
        type: integer
      gender:
        description: 性别 (0:女 1:男)
        type: string
      headPortrait:
        description: 头像地址
        type: string
      id:
        type: integer
      invoiceMailset:
        description: 发票邮件通知设置，英文逗号分割{1,2,3,4=下单人,收货人,销售,收票人}
        type: string
      isAdminShow:
        description: 用户状态（1是，0否）
        type: string
      isOpen:
        description: 此用户的邮件审批是否开启
        type: integer
      loginName:
        description: 用户登录名
        type: string
      loginPassword:
        description: 登录密码
        type: string
      phoneType:
        description: 手机类型(1 IOS 2android)
        type: integer
      position:
        type: string
      registerMode:
        description: 注册方式 (1 手机注册，2邮箱注册,3 微信注册)
        type: integer
      registerSource:
        description: 注册用户渠道来源来源
        type: string
      telephone:
        description: 用户座机号
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      userEmail:
        description: 用户邮箱
        type: string
      userName:
        description: 用户名称
        type: string
      userPhone:
        description: 手机号码
        type: string
      userSource:
        description: 用户来源（1www,2opc,3android,4IOS,5M,6微信,7微信小程序，8脉信，9CRM）
        type: integer
      userStatus:
        description: 用户状态（1可用，0不可用）
        type: integer
      userType:
        description: 用户类型 1.下单人2联系人3审批人4通用
        type: string
    type: object
  go-admin_app_wc_models.OperateLogDetail:
    properties:
      desc:
        type: string
      key:
        type: string
      value:
        type: string
    type: object
  go-admin_app_wc_models.OperateLogs:
    properties:
      createdAt:
        type: string
      dataId:
        type: string
      doStatus:
        type: string
      id:
        type: integer
      modelName:
        type: string
      operatorId:
        type: integer
      operatorName:
        type: string
      operatorType:
        type: integer
      remark:
        type: string
      type:
        type: string
      typeName:
        type: string
    type: object
  go-admin_app_wc_service_admin_dto.WarehouseInsertReq:
    properties:
      address:
        type: string
      city:
        type: integer
      companyId:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      district:
        type: integer
      email:
        type: string
      isVirtual:
        description: Status        string `json:"status" comment:"是否使用 0-否，1-是" vd:"$=='0'
          || $=='1'; msg:'status为0或1'"`
        type: string
      linkman:
        type: string
      mobile:
        type: string
      postCode:
        type: string
      province:
        type: integer
      remark:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      warehouseName:
        type: string
    type: object
  go-admin_app_wc_service_admin_dto.WarehouseUpdateReq:
    properties:
      address:
        type: string
      city:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      district:
        type: integer
      email:
        type: string
      id:
        description: id
        type: integer
      isVirtual:
        description: Status        string `json:"status" comment:"是否使用 0-否，1-是" vd:"$=='0'
          || $=='1'; msg:'status为0或1'"`
        type: string
      linkman:
        type: string
      mobile:
        type: string
      postCode:
        type: string
      province:
        type: integer
      remark:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      warehouseName:
        type: string
    type: object
  go-admin_app_wc_service_mall_dto.WarehouseDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  go-admin_app_wc_service_mall_dto.WarehouseInsertReq:
    properties:
      address:
        type: string
      city:
        type: integer
      cityName:
        type: string
      companyId:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      district:
        type: integer
      districtName:
        type: string
      email:
        type: string
      isVirtual:
        type: string
      linkman:
        type: string
      mobile:
        type: string
      postCode:
        type: string
      province:
        type: integer
      provinceName:
        type: string
      remark:
        type: string
      status:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      warehouseCode:
        type: string
      warehouseName:
        type: string
    type: object
  go-admin_app_wc_service_mall_dto.WarehouseUpdateReq:
    properties:
      address:
        type: string
      city:
        type: integer
      cityName:
        type: string
      companyId:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      district:
        type: integer
      districtName:
        type: string
      email:
        type: string
      id:
        description: id
        type: integer
      isVirtual:
        type: string
      linkman:
        type: string
      mobile:
        type: string
      postCode:
        type: string
      province:
        type: integer
      provinceName:
        type: string
      remark:
        type: string
      status:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      warehouseCode:
        type: string
      warehouseName:
        type: string
    type: object
  go-admin_common_models.OperateLogDetail:
    properties:
      desc:
        type: string
      key:
        type: string
      value:
        type: string
    type: object
  go-admin_common_models.OperateLogs:
    properties:
      createdAt:
        type: string
      dataId:
        type: string
      doStatus:
        type: string
      id:
        type: integer
      modelName:
        type: string
      operatorId:
        type: integer
      operatorName:
        type: string
      operatorType:
        type: integer
      remark:
        type: string
      type:
        type: string
      typeName:
        type: string
    type: object
  mall_handler.Login:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  mall_handler.UserConfig:
    properties:
      selectedWarehouseCode:
        type: string
      selectedWarehouseId:
        type: integer
      selectedWarehouseName:
        type: string
      userId:
        type: integer
    type: object
  models.Address:
    properties:
      addressType:
        description: 地址类型（1收货地址)
        type: integer
      areaId:
        description: 区域ID
        type: integer
      areaName:
        description: 区域名称
        type: string
      cellPhone:
        description: 收件人手机号码
        type: string
      cityId:
        description: 城市ID
        type: integer
      cityName:
        description: 城市名称
        type: string
      companyId:
        type: integer
      companyName:
        type: string
      countryId:
        description: 国家ID
        type: integer
      countryName:
        description: 国家名称
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      department:
        type: string
      detailAddress:
        description: 详细地址
        type: string
      email:
        description: 邮箱（用于发送出库提醒）
        type: string
      id:
        type: integer
      isDeadlineReceivingAddr:
        type: integer
      isDefault:
        description: 是否默认(1默认)
        type: integer
      pcCode:
        description: 仓库编号
        type: string
      postalCode:
        description: 邮政编码
        type: string
      provinceId:
        description: 省份ID
        type: integer
      provinceName:
        description: 省份名称
        type: string
      receiverName:
        description: 收货姓名
        type: string
      telephone:
        description: 座机号码
        type: string
      townId:
        description: 镇(街道)ID
        type: integer
      townName:
        description: 镇(街道)ID
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      userId:
        description: 用户ID
        type: integer
    type: object
  models.AttributeDef:
    properties:
      attrType:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      nameEn:
        type: string
      nameZh:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
    type: object
  models.Brand:
    properties:
      brandDescription:
        type: string
      brandEn:
        type: string
      brandZh:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      firstLetter:
        type: string
      id:
        type: integer
      status:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
    type: object
  models.BrandLog:
    properties:
      afterData:
        type: string
      beforeData:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      data:
        type: string
      dataId:
        type: integer
      diffData:
        type: string
      id:
        type: integer
      type:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
    type: object
  models.Category:
    properties:
      cateLevel:
        type: integer
      categoryTaxCode:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      description:
        type: string
      id:
        type: integer
      keyWords:
        type: string
      mediaRelationship:
        $ref: '#/definitions/models.MediaRelationship'
      nameEn:
        type: string
      nameZh:
        type: string
      parentId:
        type: integer
      seq:
        type: integer
      status:
        type: integer
      tax:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
    type: object
  models.CategoryAttribute:
    properties:
      attribute:
        $ref: '#/definitions/models.AttributeDef'
      attributeId:
        type: integer
      categoryId:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      filterFlag:
        type: integer
      id:
        type: integer
      rangeVal:
        type: string
      requiredFlag:
        type: integer
      seq:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
    type: object
  models.CategoryLog:
    properties:
      afterData:
        type: string
      beforeData:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      data:
        type: string
      dataId:
        type: integer
      diffData:
        type: string
      id:
        type: integer
      type:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
    type: object
  models.Classification:
    properties:
      companyId:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
      remark:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
    type: object
  models.CompanyDepartment:
    properties:
      companyId:
        description: 公司id
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      departmentBudget:
        allOf:
        - $ref: '#/definitions/sql.NullFloat64'
        description: 部门预算 null不设置无限预算 >=0 有预算限制
      fId:
        description: 父级部门id
        type: integer
      id:
        type: integer
      level:
        description: 部门层级
        type: integer
      name:
        description: 部门名称
        type: string
      personalBudget:
        allOf:
        - $ref: '#/definitions/sql.NullFloat64'
        description: 人均预算 null不设置无限预算 >=0 有预算限制
      topId:
        description: 一级部门ID
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
    type: object
  models.CompanyIndividualitySwitch:
    properties:
      companyId:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      desc:
        type: string
      id:
        type: integer
      isDel:
        type: integer
      keyword:
        type: string
      remark:
        type: string
      sort:
        type: integer
      status:
        type: integer
      switchStatus:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
    type: object
  models.CompanyInfo:
    properties:
      address:
        description: 地址
        type: string
      afterAutoAudit:
        description: 售后自动审核 空不自动 自动的售后type逗号分隔的字符串
        type: string
      approveEmailType:
        type: integer
      areaId:
        type: integer
      bankAccount:
        description: 银行帐号
        type: string
      bankName:
        description: 开户行
        type: string
      checkStockStatus:
        type: integer
      cityId:
        type: integer
      companyLevels:
        description: 公司等级
        type: integer
      companyLogo:
        description: 公司logo
        type: string
      companyMediumLogo:
        description: 中等大小logo
        type: string
      companyName:
        type: string
      companyNature:
        description: 公司性质 （2终端，3分销）
        type: integer
      companySmallLogo:
        description: 小logo
        type: string
      companyStatus:
        description: 公司状态（1可用 0不可用）
        type: integer
      companyType:
        description: （1:KA 2:SME 3:DS 4:整包 5:央企 6:其他）
        type: integer
      countryId:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      domain:
        description: 公司自定义域名
        type: string
      id:
        type: integer
      industryId:
        type: integer
      isEas:
        description: 领用单是否审批(1是 0否)
        type: integer
      isEis:
        description: eis服务(1是 0否)
        type: integer
      isPunchout:
        description: punchout服务(1是 0否)
        type: integer
      isSendEmail:
        type: integer
      isTaxPrice:
        type: integer
      loginType:
        type: integer
      orderAutoConfirm:
        description: 订单自动确认 0否 1自动确认
        type: integer
      orderAutoSignFor:
        description: 订单自动签收 0否 1是
        type: integer
      orderEamilSet:
        type: string
      parentId:
        description: 父公司id
        type: integer
      paymentMethods:
        type: string
      pdfType:
        type: integer
      pid:
        type: integer
      presoTerm:
        type: integer
      provinceId:
        type: integer
      reconciliationDay:
        description: 当月对账日
        type: integer
      serviceFee:
        type: string
      showEasflow:
        type: integer
      siteCss:
        type: string
      siteTitle:
        description: 自定义域名后，网站定制标题
        type: string
      taxNo:
        description: 税号
        type: string
      theme:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
    type: object
  models.Constraint:
    properties:
      field:
        type: string
      operator:
        type: string
      relation:
        type: string
      targetValue:
        type: string
    type: object
  models.CsApply:
    properties:
      applyPrice:
        description: 申请金额
        type: number
      applyQuantity:
        description: 申请总数量
        type: integer
      auditReason:
        description: 审核原因
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      csDescription:
        description: 售后申请描述
        type: string
      csIssueDetail:
        description: 产品质量问题投诉必填信息
        type: string
      csNo:
        description: 售后申请编号
        type: string
      csReason:
        description: 售后原因id
        type: integer
      csSource:
        description: mall ,sxyz
        type: string
      csStatus:
        description: 售后状态：0-待处理、1-已确认、2-已驳回、99-完结
        type: integer
      csType:
        description: 售后类型：0-退货、1-换货、2-退款、3-发票问题、4-技术及资料支持、5-技术及资料支持、6-缺货少配件、7-售后维修、8-其他、9-订单取消、10-补发货（仅限erp迁移老数据使用）
        type: integer
      id:
        type: integer
      isStatements:
        description: 订单是否存在对账单 0否 1是
        type: integer
      logicWarehouseCode:
        description: 退货逻辑仓code
        type: string
      orderId:
        description: 销售订单号
        type: string
      pics:
        description: 售后申请图片
        type: string
      refundAmt:
        description: 退款金额
        type: string
      reparationAmt:
        description: 赔款金额
        type: string
      telephone:
        description: 联系电话
        type: string
      transferAmount:
        description: 转款金额
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      userId:
        description: 提交人id
        type: integer
      userName:
        description: 提交人名称
        type: string
      vendorId:
        description: 售后单所属货主id
        type: integer
      vendorName:
        description: 售后单所属货主名
        type: string
      vendorSkuCode:
        description: 售后单所属货主sku
        type: string
      warehouseCode:
        description: 退货实体仓库code
        type: string
      warehouseName:
        description: 退货实体仓库name
        type: string
    type: object
  models.CsApplyDetail:
    properties:
      brandName:
        description: 产品的品牌
        type: string
      createdAt:
        type: string
      csNo:
        description: 售后申请编号
        type: string
      csType:
        description: 类型：0-用户申请、1-实际售后
        type: integer
      deliveryTime:
        description: 货期
        type: string
      goodsId:
        type: integer
      id:
        type: integer
      isDefective:
        description: 是否次品 1是 0否
        type: integer
      pics:
        description: 售后申请的图片
        type: string
      productModel:
        description: 售后申请产品名原始型号
        type: string
      productName:
        description: 商品名称
        type: string
      productNo:
        description: 物料编码
        type: string
      productPic:
        description: 商品图片url
        type: string
      quantity:
        description: 数量
        type: integer
      refundAmt:
        description: 退款金额
        type: string
      remark:
        description: 备注
        type: string
      reparationAmt:
        description: 赔款金额
        type: string
      salePrice:
        description: 销售价
        type: number
      skuCode:
        description: 商品sku
        type: string
      unit:
        description: 单位
        type: string
      updatedAt:
        type: string
      vendorName:
        description: 货主
        type: string
      vendorSkuCode:
        description: 货主sku
        type: string
      warehouseCode:
        description: 到货仓库
        type: string
    type: object
  models.CsApplyLog:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      csNo:
        type: string
      handlerLog:
        type: string
      id:
        type: integer
      updatedAt:
        type: string
      userId:
        type: string
      userName:
        type: string
    type: object
  models.DataRemark:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      dataId:
        type: string
      id:
        type: integer
      remark:
        description: 备注
        type: string
      type:
        description: 类型{sale_order:销售售后，purchase_order:采购售后}
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      usertype:
        description: 操作人员类型(0:opc,1:spc,2:other)
        type: integer
    type: object
  models.EmailApproveListCustomer:
    properties:
      approveStatus:
        type: integer
      id:
        type: integer
      person:
        type: string
      priority:
        type: integer
      process:
        type: string
    type: object
  models.Goods:
    properties:
      approveRemark:
        type: string
      approveStatus:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      marketPrice:
        type: number
      onlineStatus:
        type: integer
      priceModifyReason:
        type: string
      product:
        $ref: '#/definitions/models.Product'
      productNo:
        type: string
      skuCode:
        type: string
      status:
        type: integer
      supplierSkuCode:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      vendorId:
        type: integer
      warehouseCode:
        type: string
    type: object
  models.GoodsLog:
    properties:
      afterData:
        type: string
      beforeData:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      data:
        type: string
      dataId:
        type: integer
      diffData:
        type: string
      id:
        type: integer
      type:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
    type: object
  models.LogicWarehouse:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      email:
        type: string
      id:
        type: integer
      linkman:
        type: string
      logicWarehouseCode:
        type: string
      logicWarehouseName:
        type: string
      mobile:
        type: string
      remark:
        type: string
      status:
        type: string
      type:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      warehouseCode:
        type: string
    type: object
  models.ManageMenu:
    properties:
      activeRouteNames:
        items:
          type: string
        type: array
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      groupName:
        type: string
      id:
        type: integer
      isActive:
        type: integer
      orderBy:
        type: integer
      routeName:
        type: string
      title:
        type: string
      type:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
    type: object
  models.MediaInstance:
    properties:
      id:
        type: integer
      mediaDir:
        type: string
      mediaName:
        type: string
    type: object
  models.MediaRelationship:
    properties:
      buszId:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      imgFeatureId:
        type: string
      mediaInstance:
        $ref: '#/definitions/models.MediaInstance'
      mediaInstantId:
        type: integer
      mediaTypeId:
        type: integer
      seq:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      watermark:
        type: integer
    type: object
  models.OrderDetail:
    properties:
      batchGroup:
        type: integer
      brandEname:
        type: string
      brandId:
        type: integer
      brandName:
        type: string
      cancelQuantity:
        type: integer
      catId:
        type: integer
      catId2:
        type: integer
      catId3:
        type: integer
      catId4:
        type: integer
      catName:
        type: string
      catName2:
        type: string
      catName3:
        type: string
      catName4:
        type: string
      createdAt:
        type: string
      deliveryWarehouse:
        type: string
      finalQuantity:
        type: integer
      finalSubTotalAmount:
        type: number
      goodsId:
        type: integer
      id:
        type: integer
      lockStock:
        type: integer
      marketPrice:
        type: number
      moq:
        type: integer
      orderId:
        type: string
      originalItemsMount:
        type: number
      originalQuantity:
        type: integer
      productId:
        type: integer
      productModel:
        type: string
      productName:
        type: string
      productNo:
        type: string
      productPic:
        type: string
      purchasePrice:
        type: number
      quantity:
        type: integer
      salePrice:
        type: number
      sendQuantity:
        type: integer
      skuCode:
        type: string
      subTotalAmount:
        type: number
      supplierWarehouse:
        type: string
      unit:
        type: string
      updatedAt:
        type: string
      userId:
        type: integer
      userName:
        type: string
      userProductName:
        type: string
      userProductRemark:
        type: string
      vendorId:
        type: integer
      warehouseCode:
        type: string
    type: object
  models.OrderImage:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
      orderId:
        type: string
      type:
        type: integer
      url:
        type: string
    type: object
  models.OrderInfo:
    properties:
      address:
        type: string
      areaId:
        type: integer
      areaName:
        type: string
      cancelBy:
        type: integer
      cancelByName:
        type: string
      cancelByType:
        type: integer
      cityId:
        type: integer
      cityName:
        type: string
      classifyQuantity:
        type: integer
      companyName:
        type: string
      confirmOrderReceiptTime:
        type: string
      confirmTime:
        type: string
      consignee:
        type: string
      contactEmail:
        type: string
      contractNo:
        type: string
      countryId:
        type: integer
      countryName:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createFrom:
        type: string
      createdAt:
        type: string
      deliverId:
        type: integer
      externalOrderNo:
        type: string
      finalTotalAmount:
        type: number
      id:
        type: integer
      ip:
        type: string
      isFormalOrder:
        type: integer
      isOverBudget:
        type: integer
      isTransform:
        type: integer
      itemsAmount:
        type: number
      logisticalRemark:
        type: string
      mobile:
        type: string
      orderDetails:
        items:
          $ref: '#/definitions/models.OrderDetail'
        type: array
      orderFileRemark:
        type: string
      orderId:
        type: string
      orderImages:
        items:
          $ref: '#/definitions/models.OrderImage'
        type: array
      orderStatus:
        type: integer
      originalItemsAmount:
        type: number
      originalTotalAmount:
        type: number
      productQuantity:
        type: integer
      provinceId:
        type: integer
      provinceName:
        type: string
      receiptImages:
        items:
          $ref: '#/definitions/models.OrderImage'
        type: array
      receiveStatus:
        type: integer
      remark:
        type: string
      rmaStatus:
        type: integer
      sendStatus:
        type: integer
      sendTime:
        type: string
      telephone:
        type: string
      totalAmount:
        type: number
      townId:
        type: integer
      townName:
        type: string
      updatedAt:
        type: string
      userCompanyId:
        type: integer
      userCompanyName:
        type: string
      userId:
        type: integer
      userName:
        type: string
      validFlag:
        type: integer
      warehouseCode:
        type: string
    type: object
  models.OrderInfoLog:
    properties:
      afterData:
        type: string
      beforeData:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      data:
        type: string
      dataId:
        type: integer
      diffData:
        type: string
      id:
        type: integer
      type:
        type: string
    type: object
  models.PresoDetail:
    properties:
      approveQuantity:
        type: integer
      approveRemark:
        type: string
      approveStatus:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      goodsId:
        type: integer
      id:
        type: integer
      marketPrice:
        type: number
      presoNo:
        type: string
      productName:
        type: string
      productNo:
        type: string
      productPic:
        type: string
      quantity:
        type: integer
      rejectByName:
        type: string
      salePrice:
        type: number
      skuCode:
        type: string
      step:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      userId:
        type: integer
      userName:
        type: string
      userProductRemark:
        type: string
      vendorId:
        type: integer
      warehouseCode:
        type: string
    type: object
  models.PresoImage:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
      presoNo:
        type: string
      type:
        type: integer
      url:
        type: string
    type: object
  models.Product:
    properties:
      accessories:
        type: string
      assembleFlag:
        type: integer
      barcode:
        type: string
      brand:
        $ref: '#/definitions/models.Brand'
      brandId:
        type: integer
      briefDesc:
        type: string
      bulkyFlag:
        type: integer
      certificateImage:
        type: string
      consumptiveFlag:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      customMadeFlag:
        type: integer
      fragileFlag:
        type: integer
      hazardClass:
        type: integer
      hazardFlag:
        type: integer
      id:
        type: integer
      isFluid:
        type: integer
      isValuables:
        type: integer
      mediaRelationship:
        items:
          $ref: '#/definitions/models.MediaRelationship'
        type: array
      mfgModel:
        type: string
      nameEn:
        type: string
      nameZh:
        type: string
      otherLabel:
        type: string
      packHeight:
        type: string
      packLength:
        type: string
      packWeight:
        type: string
      packWidth:
        type: string
      physicalUom:
        type: string
      productAlias:
        type: string
      refundFlag:
        type: integer
      salesMoq:
        type: integer
      salesPhysicalFactor:
        type: string
      salesUom:
        type: string
      seq:
        type: integer
      skuCode:
        type: string
      status:
        type: integer
      storageFlag:
        type: integer
      storageTime:
        type: integer
      supplierSkuCode:
        type: string
      tax:
        type: string
      title:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      vendorId:
        type: integer
      vendorName:
        type: string
    type: object
  models.ProductLog:
    properties:
      afterData:
        type: string
      beforeData:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      data:
        type: string
      dataId:
        type: integer
      diffData:
        type: string
      id:
        type: integer
      type:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
    type: object
  models.QualityCheck:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      entryCode:
        type: string
      id:
        type: integer
      logicWarehouseCode:
        type: string
      qualityCheckCode:
        type: string
      qualityRes:
        type: integer
      qualityStatus:
        type: integer
      qualityTime:
        type: string
      quantityNum:
        type: integer
      skuCode:
        type: string
      sourceCode:
        type: string
      sourceName:
        type: string
      status:
        type: integer
      stayQualityNum:
        type: integer
      type:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      warehouseCode:
        type: string
    type: object
  models.QualityCheckConfig:
    properties:
      categoryConstraint:
        items:
          $ref: '#/definitions/models.Constraint'
        type: array
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      orderType:
        type: integer
      qualityCheckOptions:
        type: string
      qualityCheckRoles:
        type: string
      samplingNum:
        type: integer
      skuConstraint:
        items:
          $ref: '#/definitions/models.Constraint'
        type: array
      status:
        type: integer
      type:
        type: integer
      unqualified:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
    type: object
  models.Region:
    properties:
      adcode:
        type: string
      id:
        type: integer
      latitude:
        type: string
      level:
        type: string
      longitude:
        type: string
      name:
        type: string
      parentId:
        type: string
      postalCode:
        type: string
    type: object
  models.ReminderList:
    properties:
      companyId:
        type: integer
      createdAt:
        type: string
      id:
        type: integer
      reminderRuleId:
        type: integer
      skuCount:
        type: integer
      vendorId:
        type: integer
      warehouseCode:
        type: string
    type: object
  models.ReminderListSku:
    properties:
      allStock:
        type: integer
      createdAt:
        type: string
      genuineStock:
        type: integer
      id:
        type: integer
      occupyStock:
        type: integer
      orderLackStock:
        type: integer
      recommendReplenishmentValue:
        type: integer
      reminderListId:
        type: integer
      replenishmentValue:
        type: integer
      skuCode:
        type: string
      vendorId:
        type: integer
      vendorSku:
        type: string
      warningValue:
        type: integer
    type: object
  models.ReminderRule:
    properties:
      companyId:
        description: 公司id
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      replenishmentValue:
        type: integer
      status:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      warehouseCode:
        type: string
      warningValue:
        type: integer
    type: object
  models.ReminderRuleSku:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      reminderRuleId:
        type: integer
      replenishmentValue:
        type: integer
      skuCode:
        type: string
      status:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      warningValue:
        type: integer
    type: object
  models.ReminderRuleSkuLog:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      logType:
        type: integer
      reminderRuleSkuId:
        type: integer
      replenishmentValue:
        type: integer
      skuCode:
        type: string
      status:
        type: string
      warningValue:
        type: integer
    type: object
  models.RoleInfo:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      dataScope:
        type: string
      id:
        type: integer
      manageCompany:
        type: string
      menus:
        type: string
      roleKey:
        type: string
      roleName:
        type: string
      roleStatus:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
    type: object
  models.RouterMenu:
    properties:
      children:
        items:
          $ref: '#/definitions/models.ManageMenu'
        type: array
      title:
        type: string
    type: object
  models.SkuClassification:
    properties:
      classificationId:
        type: integer
      companyId:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      skuCode:
        type: string
      status:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
    type: object
  models.Statements:
    properties:
      companyId:
        type: integer
      createdAt:
        type: string
      endTime:
        type: string
      id:
        type: integer
      orderCount:
        type: integer
      productCount:
        type: integer
      startTime:
        type: string
      statementsNo:
        type: string
      totalAmount:
        type: number
    type: object
  models.StockEntryProductsSub:
    properties:
      actQuantity:
        type: integer
      entryCode:
        type: string
      entryProductId:
        type: integer
      entryTime:
        type: string
      id:
        type: integer
      shouldQuantity:
        type: integer
      stashActQuantity:
        type: integer
      stashLocationId:
        type: integer
      stockLocationId:
        type: integer
    type: object
  models.StockLocation:
    properties:
      capacity:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      locationCode:
        type: string
      logicWarehouseCode:
        type: string
      remark:
        type: string
      sizeHeight:
        type: string
      sizeLength:
        type: string
      sizeWidth:
        type: string
      status:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      warehouseCode:
        type: string
    type: object
  models.StockLocationGoodsLog:
    properties:
      afterStock:
        type: integer
      beforeStock:
        type: integer
      changeStock:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      docketCode:
        type: string
      fromType:
        type: string
      id:
        type: integer
      snapshotAfterLockStock:
        type: integer
      snapshotAfterStock:
        type: integer
      snapshotBeforeLockStock:
        type: integer
      snapshotBeforeStock:
        type: integer
      stockLocationGoodsId:
        type: integer
    type: object
  models.StockOutboundProductsSubLog:
    properties:
      id:
        type: integer
      locationActQuantity:
        type: integer
      outboundTime:
        type: string
      subId:
        type: integer
    type: object
  models.Supplier:
    properties:
      address:
        type: string
      backupLinkman:
        type: string
      backupPhone:
        type: string
      cityId:
        type: integer
      code:
        type: string
      countryId:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      email:
        type: string
      fax:
        type: string
      id:
        type: integer
      linkman:
        type: string
      nameEn:
        type: string
      nameZh:
        type: string
      phone:
        type: string
      postalCode:
        type: string
      provinceId:
        type: integer
      remark:
        type: string
      shortName:
        type: string
      status:
        type: string
      telephone:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
    type: object
  models.SysUserLog:
    properties:
      afterData:
        type: string
      beforeData:
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      data:
        type: string
      dataId:
        type: integer
      diffData:
        type: string
      id:
        type: integer
      type:
        type: string
    type: object
  models.Uommaster:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      description:
        type: string
      id:
        type: integer
      uom:
        type: string
      uomPy:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
    type: object
  models.UserBudget:
    properties:
      balance:
        type: number
      createdAt:
        type: string
      excessAmount:
        type: number
      id:
        type: integer
      initialAmount:
        type: number
      month:
        type: string
      spent:
        type: number
      updatedAt:
        type: string
      userId:
        type: integer
    type: object
  models.UserCartGoodsProduct:
    properties:
      brandZh:
        type: string
      goodsId:
        type: integer
      image:
        $ref: '#/definitions/models.MediaInstance'
      marketPrice:
        type: number
      mfgModel:
        type: string
      nakedSalePrice:
        type: number
      nameZh:
        type: string
      onlineStatus:
        type: integer
      productNo:
        type: string
      quantity:
        type: integer
      refundFlag:
        type: integer
      saleStatus:
        type: integer
      saleStatusRemark:
        type: string
      salesMoq:
        type: integer
      selected:
        type: integer
      showCartProduct:
        type: integer
      skuCode:
        type: string
      status:
        type: integer
      stock:
        type: integer
      tax:
        type: string
      totalMarketPrice:
        type: number
      totalNakedSalePrice:
        type: number
      totalTaxPrice:
        type: number
      vendorId:
        type: integer
      vendorName:
        type: string
      warehouseCode:
        type: string
    type: object
  models.UserCartPageGoodsProduct:
    properties:
      brandZh:
        type: string
      collected:
        type: boolean
      goodsId:
        type: integer
      image:
        $ref: '#/definitions/models.MediaInstance'
      marketPrice:
        type: number
      mfgModel:
        type: string
      nakedSalePrice:
        type: number
      nameZh:
        type: string
      onlineStatus:
        type: integer
      productNo:
        type: string
      quantity:
        type: integer
      refundFlag:
        type: integer
      saleStatus:
        type: integer
      saleStatusRemark:
        type: string
      salesMoq:
        type: integer
      selected:
        type: integer
      showCartProduct:
        type: integer
      skuCode:
        type: string
      status:
        type: integer
      stock:
        type: integer
      tax:
        type: string
      totalMarketPrice:
        type: number
      totalNakedSalePrice:
        type: number
      totalTaxPrice:
        type: number
      vendorId:
        type: integer
      vendorName:
        type: string
      warehouseCode:
        type: string
    type: object
  models.UserCollect:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      goodsId:
        description: 商品表id
        type: integer
      id:
        type: integer
      skuCode:
        description: 产品SKU
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      userId:
        description: 用户ID
        type: integer
      warehouseCode:
        description: 仓库code
        type: string
    type: object
  models.UserFootprint:
    properties:
      createdAt:
        type: string
      goodsId:
        type: integer
      id:
        type: integer
      skuCode:
        type: string
      updatedAt:
        type: string
      userId:
        type: integer
      warehouseCode:
        description: 仓库code
        type: string
    type: object
  models.UserInfo:
    properties:
      canLogin:
        description: 是否可登陆
        type: integer
      companyDepartmentId:
        description: 用户所属部门
        type: integer
      companyId:
        description: 公司ID
        type: integer
      companyInfo:
        $ref: '#/definitions/models.CompanyInfo'
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      deliveryMailset:
        type: string
      department:
        $ref: '#/definitions/models.CompanyDepartment'
      deviceToken:
        type: string
      easReceiveMsgSet:
        type: string
      emailApproveCronExpr:
        type: string
      emailVerifyStatus:
        description: 邮箱验证状态（0：未验证 1：已验证 2验证失败）
        type: integer
      gender:
        description: 性别 (0:女 1:男)
        type: string
      headPortrait:
        description: 头像地址
        type: string
      id:
        type: integer
      invoiceMailset:
        type: string
      isAdminShow:
        type: string
      isOpen:
        type: integer
      loginName:
        description: 用户登录名
        type: string
      loginPassword:
        type: string
      phoneType:
        type: integer
      position:
        type: string
      registerMode:
        type: integer
      registerSource:
        type: string
      roleInfo:
        items:
          $ref: '#/definitions/models.RoleInfo'
        type: array
      routerMenu:
        items:
          $ref: '#/definitions/models.RouterMenu'
        type: array
      selectMenu:
        items:
          $ref: '#/definitions/models.ManageMenu'
        type: array
      telephone:
        description: 用户座机号
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      userConfig:
        $ref: '#/definitions/mall_handler.UserConfig'
      userEmail:
        description: 用户邮箱
        type: string
      userName:
        description: 用户名称
        type: string
      userPhone:
        description: 手机号码
        type: string
      userRole:
        items:
          $ref: '#/definitions/models.UserRole'
        type: array
      userSource:
        type: integer
      userStatus:
        description: 用户状态（1可用，0不可用）
        type: integer
      userType:
        description: 用户类型 1.下单人2联系人3审批人4通用
        type: string
    type: object
  models.UserLoginLog:
    properties:
      browser:
        description: 浏览器
        type: string
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      ipaddr:
        description: ip地址
        type: string
      loginLocation:
        description: 归属地
        type: string
      loginTime:
        description: 登录时间
        type: string
      msg:
        description: 信息
        type: string
      os:
        description: 系统
        type: string
      platform:
        description: 固件
        type: string
      remark:
        description: 备注
        type: string
      status:
        description: 状态
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      userId:
        description: 主键编码
        type: integer
      username:
        description: 用户名
        type: string
    type: object
  models.UserPasswordChangeLog:
    properties:
      id:
        type: integer
      recordName:
        type: string
      recordTime:
        type: string
      userId:
        type: integer
    type: object
  models.UserPayAccount:
    properties:
      classificationId:
        type: integer
      companyId:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      payAccount:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      userId:
        type: integer
    type: object
  models.UserRole:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      roleId:
        type: integer
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      userId:
        type: integer
    type: object
  models.UserSearchHistory:
    properties:
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      keyword:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      userId:
        type: integer
      warehouseCode:
        type: string
    type: object
  models.Vendors:
    properties:
      address:
        type: string
      backupLinkman:
        type: string
      backupPhone:
        type: string
      city:
        type: integer
      code:
        type: string
      country:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      email:
        type: string
      fax:
        type: string
      id:
        type: integer
      linkman:
        type: string
      nameEn:
        type: string
      nameZh:
        type: string
      phone:
        type: string
      postalCode:
        type: string
      province:
        type: integer
      remark:
        type: string
      shortName:
        type: string
      status:
        type: string
      telephone:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
    type: object
  models.Warehouse:
    properties:
      address:
        type: string
      city:
        type: integer
      cityName:
        type: string
      companyId:
        type: integer
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      district:
        type: integer
      districtName:
        type: string
      email:
        type: string
      id:
        type: integer
      isVirtual:
        type: string
      linkman:
        type: string
      mobile:
        type: string
      postCode:
        type: string
      province:
        type: integer
      provinceName:
        type: string
      remark:
        type: string
      status:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
      warehouseCode:
        type: string
      warehouseName:
        type: string
    type: object
  models.WorkFlowNodes:
    properties:
      approveUser:
        type: string
      children:
        items:
          $ref: '#/definitions/models.WorkFlowNodesChildren'
        type: array
      isAutoApprove:
        type: integer
      rejectText:
        items:
          type: string
        type: array
      remark:
        type: string
      status:
        type: integer
      step:
        type: integer
      text:
        type: string
      textAdditional:
        type: string
    type: object
  models.WorkFlowNodesChildren:
    properties:
      approvedAt:
        type: string
      remark:
        type: string
      status:
        type: integer
      text:
        description: Step int `json:"step" comment:"步骤"`
        type: string
      textAdditional:
        type: string
    type: object
  response.Page:
    properties:
      count:
        type: integer
      pageIndex:
        type: integer
      pageSize:
        type: integer
    type: object
  response.Response:
    properties:
      code:
        type: integer
      msg:
        type: string
      requestId:
        description: 数据集
        type: string
      status:
        type: string
    type: object
  sql.NullFloat64:
    properties:
      float64:
        type: number
      valid:
        description: Valid is true if Float64 is not NULL
        type: boolean
    type: object
  tools.Params:
    properties:
      treeCode:
        type: string
      treeName:
        type: string
      treeParentCode:
        type: string
    type: object
  tools.SysColumns:
    properties:
      columnComment:
        type: string
      columnId:
        type: integer
      columnName:
        type: string
      columnType:
        type: string
      createBy:
        type: integer
      createdAt:
        type: string
      deletedAt:
        type: string
      dictType:
        type: string
      edit:
        type: boolean
      fkCol:
        items:
          $ref: '#/definitions/tools.SysColumns'
        type: array
      fkLabelId:
        type: string
      fkLabelName:
        type: string
      fkTableName:
        type: string
      fkTableNameClass:
        type: string
      fkTableNamePackage:
        type: string
      goField:
        type: string
      goType:
        type: string
      htmlType:
        type: string
      increment:
        type: boolean
      insert:
        type: boolean
      isEdit:
        type: string
      isIncrement:
        type: string
      isInsert:
        type: string
      isList:
        type: string
      isPk:
        type: string
      isQuery:
        type: string
      isRequired:
        type: string
      jsonField:
        type: string
      list:
        type: string
      pk:
        type: boolean
      query:
        type: boolean
      queryType:
        type: string
      remark:
        type: string
      required:
        type: boolean
      sort:
        type: integer
      superColumn:
        type: boolean
      tableId:
        type: integer
      updateBy:
        type: integer
      updatedAt:
        type: string
      usableColumn:
        type: boolean
    type: object
  tools.SysTables:
    properties:
      businessName:
        type: string
      className:
        description: 类名
        type: string
      columns:
        items:
          $ref: '#/definitions/tools.SysColumns'
        type: array
      createBy:
        type: integer
      createByName:
        type: string
      createdAt:
        type: string
      crud:
        type: boolean
      dataScope:
        type: string
      deletedAt:
        type: string
      functionAuthor:
        description: 功能作者
        type: string
      functionName:
        description: 功能名称
        type: string
      isActions:
        type: integer
      isAuth:
        type: integer
      isDataScope:
        type: integer
      isLogicalDelete:
        type: string
      logicalDelete:
        type: boolean
      logicalDeleteColumn:
        type: string
      moduleFrontName:
        description: 前端文件名
        type: string
      moduleName:
        description: go文件名
        type: string
      options:
        type: string
      packageName:
        description: 包名
        type: string
      params:
        $ref: '#/definitions/tools.Params'
      pkColumn:
        type: string
      pkGoField:
        type: string
      pkJsonField:
        type: string
      remark:
        type: string
      tableComment:
        description: 表备注
        type: string
      tableId:
        description: 表编码
        type: integer
      tableName:
        description: 表名称
        type: string
      tplCategory:
        type: string
      tree:
        type: boolean
      treeCode:
        type: string
      treeName:
        type: string
      treeParentCode:
        type: string
      updateBy:
        type: integer
      updateByName:
        type: string
      updatedAt:
        type: string
    type: object
  utils.OperateLogDetail:
    properties:
      desc:
        type: string
      key:
        type: string
      value:
        type: string
    type: object
info:
  contact: {}
  description: |-
    基于Gin + Vue + Element UI的前后端分离权限管理系统的接口文档
    添加qq群: 521386980 进入技术交流群 请先star，谢谢！
  license:
    name: MIT
    url: https://github.com/go-admin-team/go-admin/blob/master/LICENSE.md
  title: go-admin API
  version: 2.0.0
paths:
  /api/v1/app-config:
    get:
      description: 获取系统配置信息，主要注意这里不在验证权限
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties:
                    type: string
                  type: object
              type: object
      summary: 获取系统前台配置信息，主要注意这里不在验证权限
      tags:
      - 配置管理
  /api/v1/brand-log:
    get:
      description: 获取品牌日志表列表
      parameters:
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      - description: 品牌ID
        in: query
        name: brandId
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.BrandLog'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取品牌日志表列表
      tags:
      - 品牌日志表
  /api/v1/brand-log/{id}:
    get:
      description: 获取品牌日志表
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.BrandLog'
              type: object
      security:
      - Bearer: []
      summary: 获取品牌日志表
      tags:
      - 品牌日志表
  /api/v1/captcha:
    get:
      description: 获取验证码
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
                id:
                  type: string
                msg:
                  type: string
              type: object
      summary: 获取验证码
      tags:
      - Mall登陆
  /api/v1/db/columns/page:
    get:
      description: 数据库表列分页列表 / database table column page list
      parameters:
      - description: tableName / 数据表名称
        in: query
        name: tableName
        type: string
      - description: pageSize / 页条数
        in: query
        name: pageSize
        type: integer
      - description: pageIndex / 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      summary: 分页列表数据 / page list data
      tags:
      - 工具 / 生成工具
  /api/v1/db/tables/page:
    get:
      description: 数据库表分页列表 / database table page list
      parameters:
      - description: tableName / 数据表名称
        in: query
        name: tableName
        type: string
      - description: pageSize / 页条数
        in: query
        name: pageSize
        type: integer
      - description: pageIndex / 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      summary: 分页列表数据 / page list data
      tags:
      - 工具 / 生成工具
  /api/v1/dept:
    delete:
      description: 删除数据
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysDeptDeleteReq'
      responses:
        "200":
          description: '{"code": -1, "message": "删除失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 删除部门
      tags:
      - 部门
    get:
      description: 分页列表
      parameters:
      - description: deptName
        in: query
        name: deptName
        type: string
      - description: deptId
        in: query
        name: deptId
        type: string
      - description: position
        in: query
        name: position
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 分页部门列表数据
      tags:
      - 部门
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysDeptInsertReq'
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 添加部门
      tags:
      - 部门
  /api/v1/dept/{deptId}:
    get:
      description: 获取JSON
      parameters:
      - description: deptId
        in: path
        name: deptId
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 获取部门数据
      tags:
      - 部门
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysDeptUpdateReq'
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 修改部门
      tags:
      - 部门
  /api/v1/dict/data:
    delete:
      description: 删除数据
      parameters:
      - description: body
        in: body
        name: dictCode
        required: true
        schema:
          $ref: '#/definitions/dto.SysDictDataDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除字典数据
      tags:
      - 字典数据
    get:
      description: 获取JSON
      parameters:
      - description: status
        in: query
        name: status
        type: string
      - description: dictCode
        in: query
        name: dictCode
        type: string
      - description: dictType
        in: query
        name: dictType
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 字典数据列表
      tags:
      - 字典数据
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysDictDataInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 添加字典数据
      tags:
      - 字典数据
  /api/v1/dict/data/{dictCode}:
    get:
      description: 获取JSON
      parameters:
      - description: 字典编码
        in: path
        name: dictCode
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 通过编码获取字典数据
      tags:
      - 字典数据
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysDictDataUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改字典数据
      tags:
      - 字典数据
  /api/v1/dict/type:
    delete:
      description: 删除数据
      parameters:
      - description: body
        in: body
        name: dictCode
        required: true
        schema:
          $ref: '#/definitions/dto.SysDictTypeDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除字典类型
      tags:
      - 字典类型
    get:
      description: 获取JSON
      parameters:
      - description: dictName
        in: query
        name: dictName
        type: string
      - description: dictId
        in: query
        name: dictId
        type: string
      - description: dictType
        in: query
        name: dictType
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 字典类型列表数据
      tags:
      - 字典类型
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysDictTypeInsertReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 添加字典类型
      tags:
      - 字典类型
  /api/v1/dict/type-option-select:
    get:
      description: 获取JSON
      parameters:
      - description: dictName
        in: query
        name: dictName
        type: string
      - description: dictId
        in: query
        name: dictId
        type: string
      - description: dictType
        in: query
        name: dictType
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 字典类型全部数据 代码生成使用接口
      tags:
      - 字典类型
  /api/v1/dict/type/{dictId}:
    get:
      description: 获取JSON
      parameters:
      - description: 字典类型编码
        in: path
        name: dictId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 字典类型通过字典id获取
      tags:
      - 字典类型
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysDictTypeUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改字典类型
      tags:
      - 字典类型
  /api/v1/getinfo:
    get:
      description: 获取JSON
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 获取个人信息
      tags:
      - 个人中心
  /api/v1/log-types:
    delete:
      description: 删除LOG字段类型表
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.LogTypesDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除LOG字段类型表
      tags:
      - LOG字段类型表
    post:
      consumes:
      - application/json
      description: 创建LOG字段类型表
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.LogTypesInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建LOG字段类型表
      tags:
      - LOG字段类型表
  /api/v1/log-types/{id}:
    get:
      description: 获取LOG字段类型表
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/go-admin_app_pc_models.LogTypes'
              type: object
      security:
      - Bearer: []
      summary: 获取LOG字段类型表
      tags:
      - LOG字段类型表
    put:
      consumes:
      - application/json
      description: 修改LOG字段类型表
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.LogTypesUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改LOG字段类型表
      tags:
      - LOG字段类型表
  /api/v1/login:
    post:
      consumes:
      - application/json
      description: |-
        获取token
        LoginHandler can be used by clients to get a jwt token.
        Payload needs to be json in the form of {"username": "USERNAME", "password": "PASSWORD"}.
        Reply will be of the form {"token": "TOKEN"}.
        dev mode：It should be noted that all fields cannot be empty, and a value of 0 can be passed in addition to the account password
        注意：开发模式：需要注意全部字段不能为空，账号密码外可以传入0值
      parameters:
      - description: account
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/admin_handler.Login'
      responses:
        "200":
          description: '{"code": 200, "expire": "2019-08-07T12:45:48+08:00", "token":
            ".eyJleHAiOjE1NjUxNTMxNDgsImlkIjoiYWRtaW4iLCJvcmlnX2lhdCI6MTU2NTE0OTU0OH0.-zvzHvbg0A"
            }'
          schema:
            type: string
      summary: Admin登陆
      tags:
      - Admin登陆
  /api/v1/menu:
    delete:
      description: 删除数据
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysMenuDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除菜单
      tags:
      - 菜单
    get:
      description: 获取JSON
      parameters:
      - description: menuName
        in: query
        name: menuName
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Menu列表数据
      tags:
      - 菜单
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysMenuInsertReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建菜单
      tags:
      - 菜单
  /api/v1/menu/{id}:
    get:
      description: 获取JSON
      parameters:
      - description: id
        in: path
        name: id
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Menu详情数据
      tags:
      - 菜单
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysMenuUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改菜单
      tags:
      - 菜单
  /api/v1/menuTreeselect/{roleId}:
    get:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: roleId
        in: path
        name: roleId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 角色修改使用的菜单列表
      tags:
      - 菜单
  /api/v1/menurole:
    get:
      description: 获取JSON
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 根据登录角色名称获取菜单列表数据（左菜单使用）
      tags:
      - 菜单
  /api/v1/oc/admin/cs-apply:
    delete:
      description: 删除售后单
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_oc_service_admin_dto.CsApplyDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除售后单
      tags:
      - 售后中心
    get:
      description: 获取售后单列表
      parameters:
      - description: 售后申请编号
        in: query
        name: csNo
        type: string
      - description: 售后类型：0-退货、1-换货、2-退款、3-发票问题、4-技术及资料支持、5-技术及资料支持、6-缺货少配件、7-售后维修、8-其他、9-订单取消、10-补发货（仅限erp迁移老数据使用）
        in: query
        name: csType
        type: integer
      - description: 销售订单号
        in: query
        name: orderId
        type: string
      - description: 售后状态：0-待处理、1-已确认、2-已驳回、99-完结
        in: query
        name: csStatus
        type: integer
      - description: 提交人id
        in: query
        name: userId
        type: integer
      - description: 退货实体仓库code
        in: query
        name: warehouseCode
        type: string
      - description: 退货逻辑仓code
        in: query
        name: logicWarehouseCode
        type: string
      - description: mall ,sxyz
        in: query
        name: csSource
        type: string
      - description: 售后单所属货主id
        in: query
        name: vendorId
        type: integer
      - description: 售后单所属货主sku
        in: query
        name: vendorSkuCode
        type: string
      - description: 订单是否存在对账单 0否 1是
        in: query
        name: isStatements
        type: integer
      - description: 商品sku
        in: query
        name: filterSkuCode
        type: string
      - description: 物料编码
        in: query
        name: filterProductNo
        type: string
      - description: 商品名
        in: query
        name: filterProductName
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/dto.CsApplyData'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取售后单列表
      tags:
      - 售后中心
    post:
      consumes:
      - application/json
      description: 创建售后单
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.CsApplyInsertRequest'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建售后单
      tags:
      - 售后中心
  /api/v1/oc/admin/cs-apply-detail/cs-apply-info/{csNo}:
    get:
      description: 获取售后相关商品表
      parameters:
      - description: csNo
        in: path
        name: csNo
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.CsApplyDetailGetRes'
              type: object
      security:
      - Bearer: []
      summary: 获取售后相关商品表
      tags:
      - 售后相关商品表
  /api/v1/oc/admin/cs-apply-log:
    get:
      description: 获取售后日志列表
      parameters:
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.CsApplyLog'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取售后日志列表
      tags:
      - 售后中心
  /api/v1/oc/admin/cs-apply/{csNo}:
    get:
      description: 获取售后单
      parameters:
      - description: csNo
        in: path
        name: csNo
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.CsApplyData'
              type: object
      security:
      - Bearer: []
      summary: 获取售后单
      tags:
      - 售后中心
  /api/v1/oc/admin/cs-apply/{id}:
    put:
      consumes:
      - application/json
      description: 修改售后单
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_oc_service_admin_dto.CsApplyUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改售后单
      tags:
      - 售后中心
  /api/v1/oc/admin/cs-apply/all-audit/{id}:
    put:
      consumes:
      - application/json
      description: 批量审核售后丹
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.CsApplyAllAuditReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.CsApplyAllAuditRes'
              type: object
      security:
      - Bearer: []
      summary: 批量审核售后丹
      tags:
      - 售后中心
  /api/v1/oc/admin/cs-apply/cancel:
    put:
      consumes:
      - application/json
      description: 拒绝售后单
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_oc_service_admin_dto.CsApplyCancelReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 拒绝售后单
      tags:
      - 售后中心
  /api/v1/oc/admin/cs-apply/confirm:
    put:
      consumes:
      - application/json
      description: 确认审核售后单
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.CsApplyConfirmReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 确认审核售后单
      tags:
      - 售后中心
  /api/v1/oc/admin/cs-apply/remark:
    get:
      description: 获取售后备注列表
      parameters:
      - description: 类型{sale_order:销售售后，purchase_order:采购售后}
        in: query
        name: type
        type: string
      - description: 订单号 必填
        in: query
        name: dataId
        required: true
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.DataRemark'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取售后备注列表
      tags:
      - 售后备注
    post:
      consumes:
      - application/json
      description: 创建售后备注记录
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.DataRemarkInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建售后备注记录
      tags:
      - 售后备注
  /api/v1/oc/admin/cs-apply/sale-products/{orderId}:
    get:
      description: 申请售后时-获取订单商品信息
      parameters:
      - description: orderId
        in: path
        name: orderId
        type: string
      - description: csType
        in: query
        name: csType
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.CsApplyGetSaleProductsRes'
              type: object
      security:
      - Bearer: []
      summary: 申请售后时-获取订单商品信息
      tags:
      - 售后中心
  /api/v1/oc/admin/cs-apply/un-do:
    put:
      consumes:
      - application/json
      description: 关闭售后单
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_oc_service_admin_dto.CsApplyCancelReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 关闭售后单
      tags:
      - 售后中心
  /api/v1/oc/data-remark:
    delete:
      description: 删除操作备注记录
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.DataRemarkDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除操作备注记录
      tags:
      - 操作备注记录
  /api/v1/oc/data-remark/{id}:
    put:
      consumes:
      - application/json
      description: 修改操作备注记录
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.DataRemarkUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改操作备注记录
      tags:
      - 操作备注记录
  /api/v1/oc/mall/cs-apply:
    delete:
      description: 删除商城-售后中心
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_oc_service_mall_dto.CsApplyDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除商城-售后中心
      tags:
      - 商城-售后中心
    get:
      description: 获取商城-售后中心列表
      parameters:
      - description: 售后申请编号
        in: query
        name: csNo
        type: string
      - description: 售后类型：0-退货、1-换货、2-退款、3-发票问题、4-技术及资料支持、5-技术及资料支持、6-缺货少配件、7-售后维修、8-其他、9-订单取消、10-补发货（仅限erp迁移老数据使用）
        in: query
        name: csType
        type: integer
      - description: 销售订单号
        in: query
        name: orderId
        type: string
      - description: 售后状态：0-待处理、1-已确认、2-已驳回、99-完结
        in: query
        name: csStatus
        type: integer
      - description: 提交人id
        in: query
        name: userId
        type: integer
      - description: 退货实体仓库code
        in: query
        name: warehouseCode
        type: string
      - description: 退货逻辑仓code
        in: query
        name: logicWarehouseCode
        type: string
      - description: mall ,sxyz
        in: query
        name: csSource
        type: string
      - description: 售后单所属货主id
        in: query
        name: vendorId
        type: integer
      - description: 售后单所属货主sku
        in: query
        name: vendorSkuCode
        type: string
      - description: 订单是否存在对账单 0否 1是
        in: query
        name: isStatements
        type: integer
      - description: 关键字搜索
        in: query
        name: filterKeyword
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.CsApply'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取商城-售后中心列表
      tags:
      - 商城-售后中心
    post:
      consumes:
      - application/json
      description: 创建商城-售后中心
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_oc_service_mall_dto.CsApplyInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建商城-售后中心
      tags:
      - 商城-售后中心
  /api/v1/oc/mall/cs-apply/{id}:
    get:
      description: 获取商城-售后中心
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.CsApply'
              type: object
      security:
      - Bearer: []
      summary: 获取商城-售后中心
      tags:
      - 商城-售后中心
    put:
      consumes:
      - application/json
      description: 修改商城-售后中心
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_oc_service_mall_dto.CsApplyUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改商城-售后中心
      tags:
      - 商城-售后中心
  /api/v1/oc/mall/cs-apply/cancel:
    put:
      consumes:
      - application/json
      description: 拒绝售后单
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_oc_service_mall_dto.CsApplyCancelReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 拒绝售后单
      tags:
      - 商城-售后中心
  /api/v1/oc/mall/cs-apply/get-page-details:
    get:
      description: 获取商城-售后中心列表(包含售后商品)
      parameters:
      - description: 售后申请编号
        in: query
        name: csNo
        type: string
      - description: 售后类型：0-退货、1-换货、2-退款、3-发票问题、4-技术及资料支持、5-技术及资料支持、6-缺货少配件、7-售后维修、8-其他、9-订单取消、10-补发货（仅限erp迁移老数据使用）
        in: query
        name: csType
        type: integer
      - description: 销售订单号
        in: query
        name: orderId
        type: string
      - description: 售后状态：0-待处理、1-已确认、2-已驳回、99-完结
        in: query
        name: csStatus
        type: integer
      - description: 提交人id
        in: query
        name: userId
        type: integer
      - description: 退货实体仓库code
        in: query
        name: warehouseCode
        type: string
      - description: 退货逻辑仓code
        in: query
        name: logicWarehouseCode
        type: string
      - description: mall ,sxyz
        in: query
        name: csSource
        type: string
      - description: 售后单所属货主id
        in: query
        name: vendorId
        type: integer
      - description: 售后单所属货主sku
        in: query
        name: vendorSkuCode
        type: string
      - description: 订单是否存在对账单 0否 1是
        in: query
        name: isStatements
        type: integer
      - description: 关键字搜索
        in: query
        name: filterKeyword
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.CsApply'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取商城-售后中心列表(包含售后商品)
      tags:
      - 商城-售后中心
  /api/v1/oc/mall/cs-apply/group-by-order:
    get:
      description: 获取商城-售后中心列表-根据订单分组
      parameters:
      - description: 售后申请编号
        in: query
        name: csNo
        type: string
      - description: 售后类型：0-退货、1-换货、2-退款、3-发票问题、4-技术及资料支持、5-技术及资料支持、6-缺货少配件、7-售后维修、8-其他、9-订单取消、10-补发货（仅限erp迁移老数据使用）
        in: query
        name: csType
        type: integer
      - description: 销售订单号
        in: query
        name: orderId
        type: string
      - description: 售后状态：0-待处理、1-已确认、2-已驳回、99-完结
        in: query
        name: csStatus
        type: integer
      - description: 提交人id
        in: query
        name: userId
        type: integer
      - description: 退货实体仓库code
        in: query
        name: warehouseCode
        type: string
      - description: 退货逻辑仓code
        in: query
        name: logicWarehouseCode
        type: string
      - description: mall ,sxyz
        in: query
        name: csSource
        type: string
      - description: 售后单所属货主id
        in: query
        name: vendorId
        type: integer
      - description: 售后单所属货主sku
        in: query
        name: vendorSkuCode
        type: string
      - description: 订单是否存在对账单 0否 1是
        in: query
        name: isStatements
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.CsApply'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取商城-售后中心列表-根据订单分组
      tags:
      - 商城-售后中心
  /api/v1/oc/mall/order:
    get:
      description: 获取领用单列表
      parameters:
      - description: 关键词
        in: query
        name: keyword
        type: string
      - description: 订单类型
        in: query
        name: orderType
        type: integer
      - description: 下单日期开始
        in: query
        name: startTime
        type: string
      - description: 下单日期结束
        in: query
        name: endTime
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/go-admin_app_oc_service_mall_dto.OrderInfoGetPageResp'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取领用单列表
      tags:
      - 商城领用单
    post:
      consumes:
      - application/json
      description: 创建领用单
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.PresoSubmitApprovalReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建领用单
      tags:
      - 商城领用单
  /api/v1/oc/mall/order/{id}:
    get:
      description: 获取领用单
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/go-admin_app_oc_service_mall_dto.OrderInfoGetResp'
              type: object
      security:
      - Bearer: []
      summary: 获取领用单
      tags:
      - 商城领用单
  /api/v1/oc/mall/order/buy-again/{id}:
    put:
      consumes:
      - application/json
      description: 再次购买
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.OrderInfoBuyAgainReq'
      responses:
        "200":
          description: '{"code": 200, "message": "取消成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 再次购买
      tags:
      - 商城领用单
  /api/v1/oc/mall/order/cancel/{id}:
    put:
      consumes:
      - application/json
      description: 申请取消
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_oc_service_mall_dto.OrderInfoCancelReq'
      responses:
        "200":
          description: '{"code": 200, "message": "取消成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 申请取消
      tags:
      - 商城领用单
  /api/v1/oc/mall/order/count:
    get:
      description: 获取领用单列表各状态数量
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties:
                    type: integer
                  type: object
              type: object
      security:
      - Bearer: []
      summary: 获取领用单列表各状态数量
      tags:
      - 商城领用单
  /api/v1/oc/mall/order/delete/{id}:
    put:
      consumes:
      - application/json
      description: 删除订单
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_oc_service_mall_dto.OrderInfoDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除订单
      tags:
      - 商城领用单
  /api/v1/oc/mall/order/export:
    get:
      description: 导出订单明细报表
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/go-admin_app_oc_service_mall_dto.OrderInfoGetPageResp'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 导出订单明细报表
      tags:
      - 商城领用单
  /api/v1/oc/mall/order/update-po/{id}:
    put:
      consumes:
      - application/json
      description: 修改Po单号
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_oc_service_mall_dto.OrderInfoReceiptReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改Po单号成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改Po单号
      tags:
      - 商城领用单
  /api/v1/oc/mall/preso:
    get:
      description: 领用申请+领用审批列表
      parameters:
      - description: 关键词
        in: query
        name: keyword
        type: string
      - description: 审批状态
        in: query
        name: approveStatus
        type: integer
      - description: '类型: 1-领用申请 2-领用审批'
        in: query
        name: type
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/dto.PresoGetPageResp'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 领用申请+领用审批列表
      tags:
      - 领用审批
  /api/v1/oc/mall/preso/{id}:
    get:
      description: 获取预订单
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.PresoGetResp'
              type: object
      security:
      - Bearer: []
      summary: 获取预订单
      tags:
      - 领用审批
  /api/v1/oc/mall/preso/batch-approval:
    post:
      consumes:
      - application/json
      description: 批量审批
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.PresoBatchApprovalReq'
      responses:
        "200":
          description: '{"code": 200, "message": "审批成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 批量审批
      tags:
      - 领用审批
  /api/v1/oc/mall/preso/buy-again/{id}:
    put:
      consumes:
      - application/json
      description: 再次购买
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.OrderInfoBuyAgainReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 再次购买
      tags:
      - 领用审批
  /api/v1/oc/mall/preso/count:
    get:
      description: tab数量
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties:
                    type: integer
                  type: object
              type: object
      security:
      - Bearer: []
      summary: tab数量
      tags:
      - 领用审批
  /api/v1/oc/mall/preso/export/{id}:
    get:
      description: 导出审批明细
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/go-admin_app_oc_service_mall_dto.OrderInfoGetPageResp'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 导出审批明细
      tags:
      - 领用审批
  /api/v1/oc/mall/preso/file:
    delete:
      description: 删除文件
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_oc_service_mall_dto.CsApplyDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除文件
      tags:
      - 领用审批
  /api/v1/oc/mall/preso/finish-approval:
    post:
      consumes:
      - application/json
      description: 完成审批
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.PresoFinishApprovalReq'
      responses:
        "200":
          description: '{"code": 200, "message": "审批成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 完成审批
      tags:
      - 领用审批
  /api/v1/oc/mall/preso/save-file:
    post:
      consumes:
      - application/json
      description: 上传文档
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.PresoSaveFileReq'
      responses:
        "200":
          description: '{"code": 200, "message": "保存成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 上传文档
      tags:
      - 领用审批
  /api/v1/oc/mall/preso/submit-approval:
    post:
      consumes:
      - application/json
      description: 提交审批
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.PresoSubmitApprovalReq'
      responses:
        "200":
          description: '{"code": 200, "message": "提交成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 提交审批
      tags:
      - 领用审批
  /api/v1/oc/mall/preso/withdraw:
    post:
      consumes:
      - application/json
      description: 撤回审批单
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.PresoWithdrawReq'
      responses:
        "200":
          description: '{"code": 200, "message": "撤回成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 撤回审批单
      tags:
      - 领用审批
  /api/v1/oc/order:
    get:
      description: 获取领用单列表
      parameters:
      - description: 订单号
        in: query
        name: orderIds
        type: string
      - collectionFormat: csv
        description: 订单状态
        in: query
        items:
          type: integer
        name: orderStatus
        type: array
      - description: 售后状态
        in: query
        name: rmaStatus
        type: integer
      - description: 订单来源
        in: query
        name: createFrom
        type: string
      - description: 用户ID
        in: query
        name: createBy
        type: integer
      - description: 下单日期开始
        in: query
        name: startTime
        type: string
      - description: 下单日期结束
        in: query
        name: endTime
        type: string
      - description: 是否超出预算
        in: query
        name: isOverBudget
        type: integer
      - description: 公司ID
        in: query
        name: actualOrderingCompanyId
        type: integer
      - description: SKU
        in: query
        name: skuCode
        type: string
      - description: 商品名称
        in: query
        name: productName
        type: string
      - description: 发货仓库
        in: query
        name: warehouseCode
        type: string
      - description: 物料编码
        in: query
        name: productNo
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/go-admin_app_oc_service_admin_dto.OrderInfoGetPageResp'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取领用单列表
      tags:
      - 领用单
    post:
      consumes:
      - application/json
      description: 创建领用单
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_oc_service_admin_dto.OrderInfoInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建领用单
      tags:
      - 领用单
  /api/v1/oc/order-info-log:
    get:
      description: 获取订单日志列表
      parameters:
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.OrderInfoLog'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取订单日志列表
      tags:
      - 订单日志
  /api/v1/oc/order-info-log/{id}:
    get:
      description: 获取订单日志
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.OrderInfoLog'
              type: object
      security:
      - Bearer: []
      summary: 获取订单日志
      tags:
      - 订单日志
  /api/v1/oc/order/{id}:
    get:
      description: 获取领用单
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/go-admin_app_oc_service_admin_dto.OrderInfoGetResp'
              type: object
      security:
      - Bearer: []
      summary: 获取领用单
      tags:
      - 领用单
    put:
      consumes:
      - application/json
      description: 修改领用单基本信息
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_oc_service_admin_dto.OrderInfoUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改领用单基本信息
      tags:
      - 领用单
  /api/v1/oc/order/addProduct:
    post:
      consumes:
      - application/json
      description: 领用单添加商品
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_oc_service_admin_dto.OrderInfoAddProductReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 领用单添加商品
      tags:
      - 领用单
  /api/v1/oc/order/cancel/{OrderId}:
    put:
      consumes:
      - application/json
      description: 取消领用单
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_oc_service_admin_dto.OrderInfoCancelReq'
      responses:
        "200":
          description: '{"code": 200, "message": "取消成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 取消领用单
      tags:
      - 领用单
  /api/v1/oc/order/check-over-budget:
    post:
      consumes:
      - application/json
      description: 领用单是否超预算
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_oc_service_admin_dto.OrderIdsReq'
      responses:
        "200":
          description: '{"code": 200, "message": "无订单超预算"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 领用单是否超预算
      tags:
      - 领用单
  /api/v1/oc/order/confirm:
    post:
      consumes:
      - application/json
      description: 领用单确认
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_oc_service_admin_dto.OrderIdsReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 领用单确认
      tags:
      - 领用单
  /api/v1/oc/order/product/{id}:
    put:
      consumes:
      - application/json
      description: 修改领用单商品
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_oc_service_admin_dto.OrderInfoUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改领用单商品
      tags:
      - 领用单
  /api/v1/oc/order/receipt-image/{orderId}:
    get:
      consumes:
      - application/json
      description: 订单-获取回单图片信息
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.OrderInfoGetReceiptImageReq'
      responses:
        "200":
          description: '{"code": 200, "message": "签收成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 订单-获取回单图片信息
      tags:
      - 领用单
    put:
      consumes:
      - application/json
      description: 订单-回单上传
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.OrderInfoSaveReceiptImageReq'
      responses:
        "200":
          description: '{"code": 200, "message": "签收成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 订单-回单上传
      tags:
      - 领用单
  /api/v1/oc/order/receipt/{id}:
    put:
      consumes:
      - application/json
      description: 签收领用单
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_oc_service_mall_dto.OrderInfoReceiptReq'
      responses:
        "200":
          description: '{"code": 200, "message": "签收成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 签收领用单
      tags:
      - 商城领用单
  /api/v1/oc/order/shipping/{id}:
    put:
      consumes:
      - application/json
      description: 修改领用单配送
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_oc_service_admin_dto.OrderInfoUpdateShippingReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改领用单配送
      tags:
      - 领用单
  /api/v1/oc/statements:
    get:
      description: 获取对账单列表
      parameters:
      - description: 公司id
        in: query
        name: companyId
        type: integer
      - description: 创建时间开始
        in: query
        name: startTime
        type: string
      - description: 创建时间结束
        in: query
        name: endTime
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/dto.StatementsGetPageResp'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取对账单列表
      tags:
      - 对账单
  /api/v1/oc/statements/{id}:
    get:
      description: 获取对账单
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Statements'
              type: object
      security:
      - Bearer: []
      summary: 获取对账单
      tags:
      - 对账单
  /api/v1/oc/statements/details/{id}:
    get:
      description: 获取对账单详情
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.OrderToStatementsListResp'
                  type: array
              type: object
      security:
      - Bearer: []
      summary: 获取对账单详情
      tags:
      - 对账单
  /api/v1/oc/statements/details/export/{id}:
    get:
      description: 导出对账单
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses: {}
      security:
      - Bearer: []
      summary: 导出对账单
      tags:
      - 对账单
  /api/v1/pc/admin/product/skucode:
    get:
      description: SKU查询产品档案信息
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.GetProductBySkuCodeReq'
      responses: {}
      security:
      - Bearer: []
      summary: SKU查询产品档案信息
      tags:
      - SKU查询产品档案信息
  /api/v1/pc/attribute-def:
    delete:
      description: 删除属性主表
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AttributeDefDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除属性主表
      tags:
      - 属性主表
    get:
      description: 获取属性主表列表
      parameters:
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.AttributeDef'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取属性主表列表
      tags:
      - 属性主表
    post:
      consumes:
      - application/json
      description: 创建属性主表
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AttributeDefInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建属性主表
      tags:
      - 属性主表
  /api/v1/pc/attribute-def/{id}:
    get:
      description: 获取属性主表
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.AttributeDef'
              type: object
      security:
      - Bearer: []
      summary: 获取属性主表
      tags:
      - 属性主表
    put:
      consumes:
      - application/json
      description: 修改属性主表
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AttributeDefUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改属性主表
      tags:
      - 属性主表
  /api/v1/pc/brand:
    delete:
      description: 删除品牌表
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.BrandDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除品牌表
      tags:
      - 品牌表
    get:
      description: 获取品牌表列表
      parameters:
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.Brand'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取品牌表列表
      tags:
      - 品牌表
    post:
      consumes:
      - application/json
      description: 创建品牌表
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.BrandInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建品牌表
      tags:
      - 品牌表
  /api/v1/pc/brand/{id}:
    get:
      description: 获取品牌表
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Brand'
              type: object
      security:
      - Bearer: []
      summary: 获取品牌表
      tags:
      - 品牌表
    put:
      consumes:
      - application/json
      description: 修改品牌表
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.BrandUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改品牌表
      tags:
      - 品牌表
  /api/v1/pc/category:
    delete:
      description: 删除产线表
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.CategoryDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除产线表
      tags:
      - 产线表
    get:
      description: 获取产线表列表
      parameters:
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.Category'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取产线表列表
      tags:
      - 产线表
    post:
      consumes:
      - application/json
      description: 创建产线表
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.CategoryInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建产线表
      tags:
      - 产线表
  /api/v1/pc/category-attribute:
    delete:
      description: 删除产线属性表
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_pc_service_admin_dto.CategoryAttributeDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除产线属性表
      tags:
      - 产线属性表
    get:
      description: 获取产线属性表列表
      parameters:
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.CategoryAttribute'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取产线属性表列表
      tags:
      - 产线属性表
    post:
      consumes:
      - application/json
      description: 创建产线属性表
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_pc_service_admin_dto.CategoryAttributeInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建产线属性表
      tags:
      - 产线属性表
  /api/v1/pc/category-attribute/{id}:
    get:
      description: 获取产线属性表
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.CategoryAttribute'
              type: object
      security:
      - Bearer: []
      summary: 获取产线属性表
      tags:
      - 产线属性表
    put:
      consumes:
      - application/json
      description: 修改产线属性表
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_pc_service_admin_dto.CategoryAttributeUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改产线属性表
      tags:
      - 产线属性表
  /api/v1/pc/category-log:
    get:
      description: 获取产线分类日志表列表
      parameters:
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.CategoryLog'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取产线分类日志表列表
      tags:
      - 产线分类日志表
  /api/v1/pc/category-log/{id}:
    get:
      description: 获取产线分类日志表
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.CategoryLog'
              type: object
      security:
      - Bearer: []
      summary: 获取产线分类日志表
      tags:
      - 产线分类日志表
  /api/v1/pc/category-path/{id}:
    get:
      description: 父级获取产线
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Category'
              type: object
      security:
      - Bearer: []
      summary: 父级获取产线
      tags:
      - 产线表
  /api/v1/pc/category/{id}:
    get:
      description: 获取子产线列表
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.CategoryChildList'
              type: object
      security:
      - Bearer: []
      summary: 获取子产线列表
      tags:
      - 获取子产线列表
    put:
      consumes:
      - application/json
      description: 修改产线表
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_pc_service_admin_dto.CategoryUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改产线表
      tags:
      - 产线表
  /api/v1/pc/category/sort:
    post:
      consumes:
      - application/json
      description: 排序
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SortReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 排序
      tags:
      - 排序
  /api/v1/pc/goods:
    delete:
      description: 删除商品管理表
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.GoodsDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除商品管理表
      tags:
      - 商品管理表
    get:
      description: 获取商品管理表列表
      parameters:
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.Goods'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取商品管理表列表
      tags:
      - 商品管理表
    post:
      consumes:
      - application/json
      description: 创建商品管理表
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.GoodsInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建商品管理表
      tags:
      - 商品管理表
  /api/v1/pc/goods-log:
    get:
      description: 获取商品管理日志表列表
      parameters:
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.GoodsLog'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取商品管理日志表列表
      tags:
      - 商品管理日志表
  /api/v1/pc/goods-log/{id}:
    get:
      description: 获取商品管理日志表
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.GoodsLog'
              type: object
      security:
      - Bearer: []
      summary: 获取商品管理日志表
      tags:
      - 商品管理日志表
  /api/v1/pc/goods/{id}:
    get:
      description: 获取商品管理表
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Goods'
              type: object
      security:
      - Bearer: []
      summary: 获取商品管理表
      tags:
      - 商品管理表
    put:
      consumes:
      - application/json
      description: 修改商品管理表
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.GoodsUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改商品管理表
      tags:
      - 商品管理表
  /api/v1/pc/goods/approve:
    post:
      description: 商品审核
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.GoodsApproveReq'
      responses:
        "200":
          description: '{"code": 200, "message": "商品审核成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 商品审核
      tags:
      - 商品审核
  /api/v1/pc/goods/export:
    get:
      description: 商品导出
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_pc_service_admin_dto.GoodsGetPageReq'
      responses: {}
      security:
      - Bearer: []
      summary: 商品导出
      tags:
      - 商品导出
  /api/v1/pc/goods/import:
    post:
      description: 产品新增导入
      responses: {}
      security:
      - Bearer: []
      summary: 产品新增导入
      tags:
      - 产品新增导入
  /api/v1/pc/goods/online-offline:
    post:
      description: 商品批量上下架
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.OlineOfflineReq'
      responses:
        "200":
          description: '{"code": 200, "message": "商品批量上下架成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 商品批量上下架
      tags:
      - 商品批量上下架
  /api/v1/pc/log-types:
    get:
      description: 获取LOG字段类型表列表
      parameters:
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/go-admin_app_pc_models.LogTypes'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取LOG字段类型表列表
      tags:
      - LOG字段类型表
  /api/v1/pc/mall/product:
    get:
      description: 获取商品管理表列表
      parameters:
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      - description: 分类ID
        in: query
        name: categoryId
        type: integer
      - collectionFormat: csv
        description: 品牌ID
        in: query
        items:
          type: integer
        name: brandId
        type: array
      - description: 关键词
        in: query
        name: keyword
        type: string
      - description: 价格排序
        in: query
        name: marketPriceOrder
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        $ref: '#/definitions/dto.List'
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取商品管理表列表
      tags:
      - 商品管理表
  /api/v1/pc/mall/product/{id}:
    get:
      description: 获取商品管理表
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/go-admin_app_pc_service_mall_dto.GoodsGetResp'
              type: object
      security:
      - Bearer: []
      summary: 获取商品管理表
      tags:
      - 商品管理表
  /api/v1/pc/mall/product/filter-items:
    get:
      description: 获取小程序端筛选项
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/go-admin_app_pc_service_mall_dto.GoodsGetResp'
              type: object
      security:
      - Bearer: []
      summary: 获取小程序端筛选项
      tags:
      - 商品管理表
  /api/v1/pc/mall/user-cart:
    delete:
      description: 删除购物车信息表
      parameters:
      - description: goodsId
        in: query
        name: goodsId
        type: integer
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除购物车信息表
      tags:
      - 购物车信息表
    get:
      description: 获取购物车信息表列表
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserCartGetProductForCartPageResp'
              type: object
      security:
      - Bearer: []
      summary: 获取购物车信息表列表
      tags:
      - 购物车信息表
    post:
      consumes:
      - application/json
      description: 创建购物车信息表
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UserCartInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建购物车信息表
      tags:
      - 购物车信息表
    put:
      consumes:
      - application/json
      description: 修改购物车信息表
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UserCartUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改购物车信息表
      tags:
      - 购物车信息表
  /api/v1/pc/mall/user-cart/batch-add:
    post:
      consumes:
      - application/json
      description: 批量添加购物车信息表
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UserCartBatchAddReq'
      responses:
        "200":
          description: '{"code": 200, "message": "批量添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 批量添加购物车信息表
      tags:
      - 购物车信息表
  /api/v1/pc/mall/user-cart/clear-invalid:
    post:
      description: 购物车ClearInvalid
      responses:
        "200":
          description: '{"code": 200, "message": "成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 购物车ClearInvalid
      tags:
      - 购物车信息表
  /api/v1/pc/mall/user-cart/clear-select:
    post:
      description: 购物车ClearSelect
      responses:
        "200":
          description: '{"code": 200, "message": "成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 购物车ClearSelect
      tags:
      - 购物车信息表
  /api/v1/pc/mall/user-cart/order-buy-now-product:
    get:
      description: 获取领用单（立即购买）商品列表
      parameters:
      - description: goodsId
        in: query
        name: goodsId
        type: integer
      - description: quantity
        in: query
        name: quantity
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserCartGetProductForOrderBuyNowResp'
              type: object
      security:
      - Bearer: []
      summary: 获取领用单（立即购买）商品列表
      tags:
      - 购物车信息表
  /api/v1/pc/mall/user-cart/order-cart-products:
    get:
      description: 获取领用单（购物车）商品列表
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserCartGetProductForOrderPageResp'
              type: object
      security:
      - Bearer: []
      summary: 获取领用单（购物车）商品列表
      tags:
      - 购物车信息表
  /api/v1/pc/mall/user-cart/sale-moq:
    post:
      description: 购物车SaleMoq
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UserCartGetProductForSaleMoqReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserCartGetProductForSaleMoqResp'
              type: object
      security:
      - Bearer: []
      summary: 购物车SaleMoq
      tags:
      - 购物车信息表
  /api/v1/pc/mall/user-cart/select-all:
    post:
      description: 购物车SelectAll
      responses:
        "200":
          description: '{"code": 200, "message": "选择成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 购物车SelectAll
      tags:
      - 购物车信息表
  /api/v1/pc/mall/user-cart/select-one:
    post:
      description: 购物车SelectOne
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UserCartSelectOneReq'
      responses:
        "200":
          description: '{"code": 200, "message": "选择成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 购物车SelectOne
      tags:
      - 购物车信息表
  /api/v1/pc/mall/user-cart/unselect-all:
    post:
      description: 购物车UnSelectAll
      responses:
        "200":
          description: '{"code": 200, "message": "选择成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 购物车UnSelectAll
      tags:
      - 购物车信息表
  /api/v1/pc/mall/user-cart/verify-buy-now:
    get:
      description: 购物车VerifyBuyNow
      parameters:
      - description: goodsId
        in: query
        name: goodsId
        type: integer
      - description: quantity
        in: query
        name: quantity
        type: integer
      responses:
        "200":
          description: '{"code": 200, "message": "成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 购物车VerifyBuyNow
      tags:
      - 购物车信息表
  /api/v1/pc/mall/user-cart/verify-cart:
    get:
      description: 购物车VerifyCart
      responses:
        "200":
          description: '{"code": 200, "message": "成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 购物车VerifyCart
      tags:
      - 购物车信息表
  /api/v1/pc/product:
    delete:
      description: 删除商品档案
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_pc_service_admin_dto.ProductDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除商品档案
      tags:
      - 商品档案
    get:
      description: 获取商品档案列表
      parameters:
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.Product'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取商品档案列表
      tags:
      - 商品档案
    post:
      consumes:
      - application/json
      description: 创建商品档案
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_pc_service_admin_dto.ProductInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建商品档案
      tags:
      - 商品档案
  /api/v1/pc/product-log:
    delete:
      description: 删除商品档案日志表
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ProductLogDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除商品档案日志表
      tags:
      - 商品档案日志表
    get:
      description: 获取商品档案日志表列表
      parameters:
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.ProductLog'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取商品档案日志表列表
      tags:
      - 商品档案日志表
    post:
      consumes:
      - application/json
      description: 创建商品档案日志表
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ProductLogInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建商品档案日志表
      tags:
      - 商品档案日志表
  /api/v1/pc/product-log/{id}:
    get:
      description: 获取商品档案日志表
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.ProductLog'
              type: object
      security:
      - Bearer: []
      summary: 获取商品档案日志表
      tags:
      - 商品档案日志表
    put:
      consumes:
      - application/json
      description: 修改商品档案日志表
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ProductLogUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改商品档案日志表
      tags:
      - 商品档案日志表
  /api/v1/pc/product/{id}:
    get:
      description: 获取商品档案
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Product'
              type: object
      security:
      - Bearer: []
      summary: 获取商品档案
      tags:
      - 商品档案
    put:
      consumes:
      - application/json
      description: 修改商品档案
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_pc_service_admin_dto.ProductUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改商品档案
      tags:
      - 商品档案
  /api/v1/pc/product/batch-pro-approval:
    put:
      description: 批量审核图文
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.BatchProApprovalReq'
      responses:
        "200":
          description: '{"code": 200, "message": "批量审核图文成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 批量审核图文
      tags:
      - 商品档案
  /api/v1/pc/product/batch-upload-product-image:
    post:
      consumes:
      - application/json
      description: 批量上传产品图片
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.BatchUploadProductImageReq'
      responses: {}
      security:
      - Bearer: []
      summary: 批量上传产品图片
      tags:
      - 批量上传产品图片
  /api/v1/pc/product/pro-approval/{id}:
    put:
      description: 单条图文审核
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_pc_service_admin_dto.ProductDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 单条图文审核
      tags:
      - 单条图文审核
  /api/v1/pc/product/product-attribute:
    post:
      consumes:
      - application/json
      description: 获取产品属性
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_pc_service_admin_dto.GetProductExtAttributeReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 获取产品属性
      tags:
      - 获取产品属性
  /api/v1/pc/product/product-attribute-export:
    get:
      description: 产品属性维护导出
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ExportReq'
      responses: {}
      security:
      - Bearer: []
      summary: 产品属性维护导出
      tags:
      - 产品属性维护导出
  /api/v1/pc/product/product-attribute-import:
    post:
      description: 产品属性维护导入
      responses: {}
      security:
      - Bearer: []
      summary: 产品属性维护导入
      tags:
      - 产品属性维护导入
  /api/v1/pc/product/product-export:
    get:
      description: 产品维护导出
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_pc_service_admin_dto.ProductGetPageReq'
      responses: {}
      security:
      - Bearer: []
      summary: 产品维护导出
      tags:
      - 产品维护导出
  /api/v1/pc/product/product-import-add:
    post:
      description: 产品新增导入
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ExportReq'
      responses: {}
      security:
      - Bearer: []
      summary: 产品新增导入
      tags:
      - 产品新增导入
  /api/v1/pc/product/product-import-update:
    post:
      description: 产品维护导入
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ExportReq'
      responses: {}
      security:
      - Bearer: []
      summary: 产品维护导入
      tags:
      - 产品维护导入
  /api/v1/pc/product/sort:
    post:
      consumes:
      - application/json
      description: 排序
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ProductSortReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 排序
      tags:
      - 排序
  /api/v1/pc/uommaster:
    delete:
      description: 删除Uommaster
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UommasterDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除Uommaster
      tags:
      - Uommaster
    get:
      description: 获取Uommaster列表
      parameters:
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.Uommaster'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取Uommaster列表
      tags:
      - Uommaster
    post:
      consumes:
      - application/json
      description: 创建Uommaster
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UommasterInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建Uommaster
      tags:
      - Uommaster
  /api/v1/pc/uommaster/{id}:
    get:
      description: 获取Uommaster
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Uommaster'
              type: object
      security:
      - Bearer: []
      summary: 获取Uommaster
      tags:
      - Uommaster
    put:
      consumes:
      - application/json
      description: 修改Uommaster
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UommasterUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改Uommaster
      tags:
      - Uommaster
  /api/v1/pc/user-search-history:
    get:
      description: 获取用户搜索历史记录表列表
      parameters:
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.UserSearchHistory'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取用户搜索历史记录表列表
      tags:
      - 用户搜索历史记录表
  /api/v1/post:
    delete:
      description: 删除数据
      parameters:
      - description: 请求参数
        in: body
        name: id
        required: true
        schema:
          $ref: '#/definitions/dto.SysPostDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除岗位
      tags:
      - 岗位
    get:
      description: 获取JSON
      parameters:
      - description: postName
        in: query
        name: postName
        type: string
      - description: postCode
        in: query
        name: postCode
        type: string
      - description: postId
        in: query
        name: postId
        type: string
      - description: status
        in: query
        name: status
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 岗位列表数据
      tags:
      - 岗位
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysPostInsertReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 添加岗位
      tags:
      - 岗位
  /api/v1/post/{id}:
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysPostUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改岗位
      tags:
      - 岗位
  /api/v1/post/{postId}:
    get:
      description: 获取JSON
      parameters:
      - description: 编码
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 获取岗位信息
      tags:
      - 岗位
  /api/v1/public/uploadFile:
    post:
      consumes:
      - multipart/form-data
      description: 获取JSON
      parameters:
      - description: type
        in: query
        name: type
        required: true
        type: string
      - description: file
        in: formData
        name: file
        required: true
        type: file
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 上传图片
      tags:
      - 公共接口
  /api/v1/quality-check-config:
    delete:
      description: 删除质检配置
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.QualityCheckConfigDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除质检配置
      tags:
      - 质检配置
    get:
      description: 获取质检配置列表
      parameters:
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.QualityCheckConfig'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取质检配置列表
      tags:
      - 质检配置
    post:
      consumes:
      - application/json
      description: 创建质检配置
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.QualityCheckConfigInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建质检配置
      tags:
      - 质检配置
  /api/v1/quality-check-config/{id}:
    get:
      description: 获取质检配置
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.QualityCheckConfig'
              type: object
      security:
      - Bearer: []
      summary: 获取质检配置
      tags:
      - 质检配置
    put:
      consumes:
      - application/json
      description: 修改质检配置
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.QualityCheckConfigInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改质检配置
      tags:
      - 质检配置
  /api/v1/region:
    delete:
      description: 删除Region
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RegionDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除Region
      tags:
      - Region
    post:
      consumes:
      - application/json
      description: 创建Region
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RegionInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建Region
      tags:
      - Region
  /api/v1/region/{id}:
    put:
      consumes:
      - application/json
      description: 修改Region
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RegionUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改Region
      tags:
      - Region
  /api/v1/role:
    delete:
      description: 删除数据
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysRoleDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除用户角色
      tags:
      - 角色/Role
    get:
      description: Get JSON
      parameters:
      - description: roleName
        in: query
        name: roleName
        type: string
      - description: status
        in: query
        name: status
        type: string
      - description: roleKey
        in: query
        name: roleKey
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 角色列表数据
      tags:
      - 角色/Role
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysRoleInsertReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建角色
      tags:
      - 角色/Role
  /api/v1/role-status/{id}:
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RoleDataScopeReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 更新角色数据权限
      tags:
      - 角色/Role
  /api/v1/role/{id}:
    get:
      description: 获取JSON
      parameters:
      - description: roleId
        in: path
        name: roleId
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 获取Role数据
      tags:
      - 角色/Role
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysRoleUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改用户角色
      tags:
      - 角色/Role
  /api/v1/server-monitor:
    get:
      description: 获取JSON
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 系统信息
      tags:
      - 系统信息
  /api/v1/set-config:
    get:
      consumes:
      - application/json
      description: 界面操作设置配置值的获取
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
              type: object
      security:
      - Bearer: []
      summary: 获取配置
      tags:
      - 配置管理
    put:
      consumes:
      - application/json
      description: 界面操作设置配置值
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          items:
            $ref: '#/definitions/dto.GetSetSysConfigReq'
          type: array
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 设置配置
      tags:
      - 配置管理
  /api/v1/sys-api:
    delete:
      description: 删除接口管理
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysApiDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除接口管理
      tags:
      - 接口管理
    get:
      description: 获取接口管理列表
      parameters:
      - description: 名称
        in: query
        name: name
        type: string
      - description: 标题
        in: query
        name: title
        type: string
      - description: 地址
        in: query
        name: path
        type: string
      - description: 类型
        in: query
        name: action
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/go-admin_app_admin_models.SysApi'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取接口管理列表
      tags:
      - 接口管理
  /api/v1/sys-api/{id}:
    get:
      description: 获取接口管理
      parameters:
      - description: id
        in: path
        name: id
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/go-admin_app_admin_models.SysApi'
              type: object
      security:
      - Bearer: []
      summary: 获取接口管理
      tags:
      - 接口管理
    put:
      consumes:
      - application/json
      description: 修改接口管理
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysApiUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改接口管理
      tags:
      - 接口管理
  /api/v1/sys-config:
    delete:
      description: 删除配置管理
      parameters:
      - description: ids
        in: body
        name: ids
        schema:
          items:
            type: integer
          type: array
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除配置管理
      tags:
      - 配置管理
    get:
      description: 获取配置管理列表
      parameters:
      - description: 名称
        in: query
        name: configName
        type: string
      - description: key
        in: query
        name: configKey
        type: string
      - description: 类型
        in: query
        name: configType
        type: string
      - description: 是否前端
        in: query
        name: isFrontend
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/go-admin_app_admin_models.SysApi'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取配置管理列表
      tags:
      - 配置管理
    post:
      consumes:
      - application/json
      description: 创建配置管理
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysConfigControl'
      responses:
        "200":
          description: '{"code": 200, "message": "创建成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建配置管理
      tags:
      - 配置管理
  /api/v1/sys-config/{id}:
    get:
      description: 根据Key获取SysConfig的Service
      parameters:
      - description: configKey
        in: path
        name: configKey
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.SysConfigByKeyReq'
              type: object
      security:
      - Bearer: []
      summary: 根据Key获取SysConfig的Service
      tags:
      - 配置管理
    put:
      consumes:
      - application/json
      description: 修改配置管理
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysConfigControl'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改配置管理
      tags:
      - 配置管理
  /api/v1/sys-login-log:
    delete:
      description: 登录日志删除
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysLoginLogDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 登录日志删除
      tags:
      - 登录日志
    get:
      description: 获取JSON
      parameters:
      - description: 用户名
        in: query
        name: username
        type: string
      - description: ip地址
        in: query
        name: ipaddr
        type: string
      - description: 归属地
        in: query
        name: loginLocation
        type: string
      - description: 状态
        in: query
        name: status
        type: string
      - description: 开始时间
        in: query
        name: beginTime
        type: string
      - description: 结束时间
        in: query
        name: endTime
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 登录日志列表
      tags:
      - 登录日志
  /api/v1/sys-login-log/{id}:
    get:
      description: 获取JSON
      parameters:
      - description: id
        in: path
        name: id
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 登录日志通过id获取
      tags:
      - 登录日志
  /api/v1/sys-opera-log:
    delete:
      description: 删除数据
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysOperaLogDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除操作日志
      tags:
      - 操作日志
    get:
      description: 获取JSON
      parameters:
      - description: title
        in: query
        name: title
        type: string
      - description: method
        in: query
        name: method
        type: string
      - description: requestMethod
        in: query
        name: requestMethod
        type: string
      - description: operUrl
        in: query
        name: operUrl
        type: string
      - description: operIp
        in: query
        name: operIp
        type: string
      - description: status
        in: query
        name: status
        type: string
      - description: beginTime
        in: query
        name: beginTime
        type: string
      - description: endTime
        in: query
        name: endTime
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 操作日志列表
      tags:
      - 操作日志
  /api/v1/sys-opera-log/{id}:
    get:
      description: 获取JSON
      parameters:
      - description: id
        in: path
        name: id
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 操作日志通过id获取
      tags:
      - 操作日志
  /api/v1/sys-user:
    get:
      description: 获取JSON
      parameters:
      - description: 用户名
        in: query
        name: username
        type: string
      - description: 中文名称
        in: query
        name: nickName
        type: string
      - description: 英文名称
        in: query
        name: nickNameEn
        type: string
      - description: 角色id
        in: query
        name: roleId
        type: string
      - description: 用户状态
        in: query
        name: status
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 列表用户信息数据
      tags:
      - 用户
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: 用户数据
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysUserInsertReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建用户
      tags:
      - 用户
  /api/v1/sys-user-log:
    get:
      description: 获取系统用户日志列表
      parameters:
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.SysUserLog'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取系统用户日志列表
      tags:
      - 系统用户日志
  /api/v1/sys-user-log/{id}:
    get:
      description: 获取系统用户日志
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/utils.OperateLogDetail'
                  type: array
              type: object
      security:
      - Bearer: []
      summary: 获取系统用户日志
      tags:
      - 系统用户日志
  /api/v1/sys-user/{userId}:
    delete:
      description: 删除数据
      parameters:
      - description: userId
        in: path
        name: userId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除用户数据
      tags:
      - 用户
    get:
      description: 获取JSON
      parameters:
      - description: 用户编码
        in: path
        name: userId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 获取用户
      tags:
      - 用户
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysUserUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改用户数据
      tags:
      - 用户
  /api/v1/sys-user/proxy-login:
    post:
      consumes:
      - application/json
      description: 后台代登录
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.PassWord'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 后台代登录
      tags:
      - 用户
  /api/v1/sys/tables/info:
    post:
      consumes:
      - application/json
      description: 添加表结构
      parameters:
      - description: tableName / 数据表名称
        in: query
        name: tables
        type: string
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 添加表结构
      tags:
      - 工具 / 生成工具
    put:
      consumes:
      - application/json
      description: 修改表结构
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tools.SysTables'
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 修改表结构
      tags:
      - 工具 / 生成工具
  /api/v1/sys/tables/info/{tableId}:
    delete:
      description: 删除表结构
      parameters:
      - description: tableId
        in: path
        name: tableId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": -1, "message": "删除失败"}'
          schema:
            type: string
      summary: 删除表结构
      tags:
      - 工具 / 生成工具
    get:
      description: 获取JSON
      parameters:
      - description: configKey
        in: path
        name: configKey
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 获取配置
      tags:
      - 工具 / 生成工具
  /api/v1/sys/tables/page:
    get:
      description: 生成表分页列表
      parameters:
      - description: tableName / 数据表名称
        in: query
        name: tableName
        type: string
      - description: pageSize / 页条数
        in: query
        name: pageSize
        type: integer
      - description: pageIndex / 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      summary: 分页列表数据
      tags:
      - 工具 / 生成工具
  /api/v1/uc/admin/classification:
    delete:
      description: 删除客户分类表
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ClassificationDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除客户分类表
      tags:
      - 客户分类表
    get:
      description: 获取客户分类表列表
      parameters:
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.Classification'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取客户分类表列表
      tags:
      - 客户分类表
    post:
      consumes:
      - application/json
      description: 创建客户分类表
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ClassificationInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建客户分类表
      tags:
      - 客户分类表
  /api/v1/uc/admin/classification/{id}:
    get:
      description: 获取客户分类表
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Classification'
              type: object
      security:
      - Bearer: []
      summary: 获取客户分类表
      tags:
      - 客户分类表
    put:
      consumes:
      - application/json
      description: 修改客户分类表
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ClassificationUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改客户分类表
      tags:
      - 客户分类表
  /api/v1/uc/admin/company-department:
    delete:
      description: 删除公司部门
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.CompanyDepartmentDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除公司部门
      tags:
      - 部门管理
    get:
      description: 获取公司部门列表
      parameters:
      - description: 部门名称
        in: query
        name: name
        type: string
      - description: 部门层级
        in: query
        name: level
        type: integer
      - description: 父级部门id
        in: query
        name: fId
        type: integer
      - description: 一级部门ID
        in: query
        name: topId
        type: integer
      - description: 公司id
        in: query
        name: companyId
        type: integer
      - description: '人均预算 null不设置无限预算 >=0 有预算限制 '
        in: query
        name: personalBudget
        type: string
      - description: '部门预算 null不设置无限预算 >=0 有预算限制 '
        in: query
        name: departmentBudget
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/dto.CompanyDepartmentGetPageListData'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取公司部门列表
      tags:
      - 部门管理
    post:
      consumes:
      - application/json
      description: 创建部门
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.CompanyDepartmentInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建部门
      tags:
      - 部门管理
  /api/v1/uc/admin/company-department/{id}:
    get:
      description: 获取部门信息
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.CompanyDepartment'
              type: object
      security:
      - Bearer: []
      summary: 获取部门信息
      tags:
      - 部门管理
    put:
      consumes:
      - application/json
      description: 修改公司部门
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.CompanyDepartmentUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改公司部门
      tags:
      - 部门管理
  /api/v1/uc/admin/company-department/export:
    get:
      description: 部门导出
      parameters:
      - description: ids
        in: query
        name: ids
        type: string
      - description: 部门名称
        in: query
        name: name
        type: string
      - description: 部门层级
        in: query
        name: level
        type: integer
      - description: 父级部门id
        in: query
        name: fId
        type: integer
      - description: 一级部门ID
        in: query
        name: topId
        type: integer
      - description: 公司id
        in: query
        name: companyId
        type: integer
      - description: '人均预算 null不设置无限预算 >=0 有预算限制 '
        in: query
        name: personalBudget
        type: string
      - description: '部门预算 null不设置无限预算 >=0 有预算限制 '
        in: query
        name: departmentBudget
        type: string
      - description: tenant-id
        in: query
        name: tenant-id
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/dto.CompanyDepartmentGetPageListData'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 部门导出
      tags:
      - 部门管理
  /api/v1/uc/admin/company-department/import:
    post:
      consumes:
      - application/json
      description: 导入
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_uc_service_admin_dto.ImportReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 导入
      tags:
      - 部门管理
  /api/v1/uc/admin/company-department/is-cane-delete/{id}:
    get:
      description: 是否可以删除删除部门
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.CompanyDepartmentIsCanDeleteRes'
              type: object
      security:
      - Bearer: []
      summary: 是否可以删除删除部门
      tags:
      - 部门管理
  /api/v1/uc/admin/company-department/select-list:
    get:
      description: 获取公司部门列表
      parameters:
      - description: 公司id
        in: query
        name: companyId
        required: true
        type: integer
      - description: 部门名称
        in: query
        name: name
        type: string
      - description: 部门层级
        in: query
        name: level
        type: integer
      - description: 父级部门id
        in: query
        name: fId
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/dto.CompanyDepartmentGetPageListData'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取公司部门列表
      tags:
      - 部门管理
  /api/v1/uc/admin/company-department/update-budget/{id}:
    put:
      consumes:
      - application/json
      description: 修改预算
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.CompanyDepartmentUpdateBudgetReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改预算
      tags:
      - 部门管理
  /api/v1/uc/admin/company-individuality-switch:
    delete:
      description: 删除公司开关表
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.CompanyIndividualitySwitchDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除公司开关表
      tags:
      - 公司开关表
    get:
      description: 获取公司开关表列表
      parameters:
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.CompanyIndividualitySwitch'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取公司开关表列表
      tags:
      - 公司开关表
    post:
      consumes:
      - application/json
      description: 创建公司开关表
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.CompanyIndividualitySwitchInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建公司开关表
      tags:
      - 公司开关表
  /api/v1/uc/admin/company-individuality-switch/{id}:
    get:
      description: 获取公司开关表
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.CompanyIndividualitySwitch'
              type: object
      security:
      - Bearer: []
      summary: 获取公司开关表
      tags:
      - 公司开关表
    put:
      consumes:
      - application/json
      description: 修改公司开关表
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.CompanyIndividualitySwitchUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改公司开关表
      tags:
      - 公司开关表
  /api/v1/uc/admin/company-info:
    delete:
      description: 删除公司信息
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.CompanyInfoDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除公司信息
      tags:
      - 公司信息
    get:
      description: 获取公司信息列表
      parameters:
      - description: 公司状态（1可用 0不可用）
        in: query
        name: companyStatus
        type: integer
      - description: 公司名称
        in: query
        name: companyName
        type: string
      - description: 公司性质 （2终端，3分销）
        in: query
        name: companyNature
        type: integer
      - description: 公司类型（1:KA 2:SME 3:DS 4:整包 5:央企 6:其他）
        in: query
        name: companyType
        type: integer
      - description: 父级节点
        in: query
        name: parentId
        type: integer
      - description: 新建公司等级1-5
        in: query
        name: companyLevels
        type: integer
      - description: 最高级公司
        in: query
        name: pid
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.CompanyInfoGetPageRes'
              type: object
      security:
      - Bearer: []
      summary: 获取公司信息列表
      tags:
      - 公司信息
    post:
      consumes:
      - application/json
      description: 创建公司信息
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.CompanyInfoInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建公司信息
      tags:
      - 公司信息
  /api/v1/uc/admin/company-info/{id}:
    get:
      description: 获取公司信息
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.CompanyInfoGetRes'
              type: object
      security:
      - Bearer: []
      summary: 获取公司信息
      tags:
      - 公司信息
    put:
      consumes:
      - application/json
      description: 修改公司信息
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.CompanyInfoUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改公司信息
      tags:
      - 公司信息
  /api/v1/uc/admin/company-info/get-by-name:
    get:
      description: 获取公司信息(根据公司名)
      parameters:
      - description: 公司名称
        in: query
        name: companyName
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.CompanyInfo'
              type: object
      security:
      - Bearer: []
      summary: 获取公司信息(根据公司名)
      tags:
      - 公司信息
  /api/v1/uc/admin/company-info/parameters:
    get:
      description: 获取公司参数
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: 获取公司参数
      tags:
      - 公司信息
  /api/v1/uc/admin/company-info/select-list:
    get:
      description: 查询公司列表（下拉）
      parameters:
      - description: 公司状态（1可用 0不可用）
        in: query
        name: companyStatus
        type: integer
      - description: 公司名称
        in: query
        name: companyName
        type: string
      - description: 公司性质 （2终端，3分销）
        in: query
        name: companyNature
        type: integer
      - description: 公司类型（1:KA 2:SME 3:DS 4:整包 5:央企 6:其他）
        in: query
        name: companyType
        type: integer
      - description: 父级节点
        in: query
        name: parentId
        type: integer
      - description: 新建公司等级1-5
        in: query
        name: companyLevels
        type: integer
      - description: 最高级公司
        in: query
        name: pid
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/dto.CompanyInfoGetSelectPageData'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 查询公司列表（下拉）
      tags:
      - 公司信息
  /api/v1/uc/admin/operate-logs:
    get:
      description: 获取操作日志列表
      parameters:
      - description: 数据id eg:WH0001
        in: query
        name: dataId
        type: string
      - description: 模型name
        in: query
        name: modelName
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/go-admin_common_models.OperateLogs'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取操作日志列表
      tags:
      - uc操作日志
  /api/v1/uc/admin/operate-logs/{id}:
    get:
      description: 获取操作日志
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/go-admin_common_models.OperateLogDetail'
                  type: array
              type: object
      security:
      - Bearer: []
      summary: 获取操作日志
      tags:
      - uc操作日志
  /api/v1/uc/admin/role:
    get:
      description: 获取角色信息表列表
      parameters:
      - description: 角色名称
        in: query
        name: roleName
        type: string
      - description: 状态
        in: query
        name: roleStatus
        type: integer
      - description: 判断公司是否可以管理该权限(1xx:punchout管理,x1x:EAS管理,xx1:普通管理)
        in: query
        name: manageCompany
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.RoleInfo'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取角色信息表列表
      tags:
      - 角色信息表
  /api/v1/uc/admin/sku-classification:
    delete:
      description: 删除SKU对应客户分类表
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SkuClassificationDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除SKU对应客户分类表
      tags:
      - SKU对应客户分类表
    get:
      description: 获取SKU对应客户分类表列表
      parameters:
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.SkuClassification'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取SKU对应客户分类表列表
      tags:
      - SKU对应客户分类表
    post:
      consumes:
      - application/json
      description: 创建SKU对应客户分类表
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SkuClassificationInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建SKU对应客户分类表
      tags:
      - SKU对应客户分类表
  /api/v1/uc/admin/sku-classification/{id}:
    get:
      description: 获取SKU对应客户分类表
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.SkuClassification'
              type: object
      security:
      - Bearer: []
      summary: 获取SKU对应客户分类表
      tags:
      - SKU对应客户分类表
    put:
      consumes:
      - application/json
      description: 修改SKU对应客户分类表
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SkuClassificationUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改SKU对应客户分类表
      tags:
      - SKU对应客户分类表
  /api/v1/uc/admin/user-collect:
    get:
      description: 获取用户收藏列表
      parameters:
      - description: 产品SKU
        in: query
        name: skuCode
        type: string
      - description: 用户ID
        in: query
        name: userId
        type: integer
      - description: 商品表id
        in: query
        name: goodsId
        type: integer
      - description: 仓库code
        in: query
        name: warehouseCode
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.UserCollect'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取用户收藏列表
      tags:
      - 用户收藏
  /api/v1/uc/admin/user-info:
    get:
      description: 获取用户中心列表
      parameters:
      - description: 用户邮箱
        in: query
        name: userEmail
        type: string
      - description: 用户登录名
        in: query
        name: loginName
        type: string
      - description: 手机号码
        in: query
        name: userPhone
        type: string
      - description: 用户名称
        in: query
        name: userName
        type: string
      - description: 用户状态（1可用，0不可用）
        in: query
        name: userStatus
        type: integer
      - description: 公司ID
        in: query
        name: companyId
        type: integer
      - description: 用户所属部门
        in: query
        name: companyDepartmentId
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.UserInfo'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取用户中心列表
      tags:
      - 用户中心
    post:
      consumes:
      - application/json
      description: 创建用户中心
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_uc_service_admin_dto.UserInfoInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建用户中心
      tags:
      - 用户中心
  /api/v1/uc/admin/user-info/{id}:
    get:
      description: 获取用户中心
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.UserInfo'
              type: object
      security:
      - Bearer: []
      summary: 获取用户中心
      tags:
      - 用户中心
    put:
      consumes:
      - application/json
      description: 修改用户中心
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_uc_service_admin_dto.UserInfoUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改用户中心
      tags:
      - 用户中心
  /api/v1/uc/admin/user-info/import:
    post:
      consumes:
      - application/json
      description: 导入
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_uc_service_admin_dto.ImportReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 导入
      tags:
      - 用户中心
  /api/v1/uc/admin/user-info/proxy-login:
    get:
      consumes:
      - application/json
      description: 代登录
      parameters:
      - description: 用户Id
        in: query
        name: UserID
        type: string
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 代登录
      tags:
      - 用户中心
  /api/v1/uc/admin/user-info/select-list:
    get:
      description: 获取用户SelectList
      parameters:
      - description: 用户邮箱
        in: query
        name: userEmail
        type: string
      - description: 用户登录名
        in: query
        name: loginName
        type: string
      - description: 手机号码
        in: query
        name: userPhone
        type: string
      - description: 用户名称
        in: query
        name: userName
        type: string
      - description: 用户状态（1可用，0不可用）
        in: query
        name: userStatus
        type: integer
      - description: 公司ID
        in: query
        name: companyId
        type: integer
      - description: 用户所属部门
        in: query
        name: companyDepartmentId
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.UserInfo'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取用户SelectList
      tags:
      - 用户中心
  /api/v1/uc/admin/user-info/update-password:
    put:
      consumes:
      - application/json
      description: 修改密码
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UserInfoUpdatePassword'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改密码
      tags:
      - 用户中心
  /api/v1/uc/admin/user-info/update-userphone:
    put:
      consumes:
      - application/json
      description: 修改手机号
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UserInfoUpdateUserPhone'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改手机号
      tags:
      - 用户中心
  /api/v1/uc/admin/user-password-change-log:
    get:
      description: 获取用户密码修改记录列表
      parameters:
      - description: 用户ID
        in: query
        name: userId
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.UserPasswordChangeLog'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取用户密码修改记录列表
      tags:
      - 用户密码修改记录
  /api/v1/uc/admin/user-pay-account:
    delete:
      description: 删除客户分类对应支付账户表
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UserPayAccountDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除客户分类对应支付账户表
      tags:
      - 客户分类对应支付账户表
    get:
      description: 获取客户分类对应支付账户表列表
      parameters:
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.UserPayAccount'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取客户分类对应支付账户表列表
      tags:
      - 客户分类对应支付账户表
    post:
      consumes:
      - application/json
      description: 创建客户分类对应支付账户表
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UserPayAccountInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建客户分类对应支付账户表
      tags:
      - 客户分类对应支付账户表
  /api/v1/uc/admin/user-pay-account/{id}:
    get:
      description: 获取客户分类对应支付账户表
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.UserPayAccount'
              type: object
      security:
      - Bearer: []
      summary: 获取客户分类对应支付账户表
      tags:
      - 客户分类对应支付账户表
    put:
      consumes:
      - application/json
      description: 修改客户分类对应支付账户表
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UserPayAccountUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改客户分类对应支付账户表
      tags:
      - 客户分类对应支付账户表
  /api/v1/uc/admin/user/address:
    delete:
      description: 删除用户收货地址
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_uc_service_admin_dto.AddressDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除用户收货地址
      tags:
      - 用户收货地址
    get:
      description: 获取用户收货地址列表
      parameters:
      - description: 用户ID
        in: query
        name: userId
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.Address'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取用户收货地址列表
      tags:
      - 用户收货地址
    post:
      consumes:
      - application/json
      description: 创建用户收货地址
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_uc_service_admin_dto.AddressInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建用户收货地址
      tags:
      - 用户收货地址
  /api/v1/uc/admin/user/address/{id}:
    get:
      description: 获取用户收货地址
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Address'
              type: object
      security:
      - Bearer: []
      summary: 获取用户收货地址
      tags:
      - 用户收货地址
    put:
      consumes:
      - application/json
      description: 修改用户收货地址
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_uc_service_admin_dto.AddressUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改用户收货地址
      tags:
      - 用户收货地址
  /api/v1/uc/admin/user/login-log:
    get:
      description: 获取用户登录记录表 列表
      parameters:
      - description: 用户ID
        in: query
        name: userId
        type: integer
      - description: 状态
        in: query
        name: status
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.UserLoginLog'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取用户登录记录表 列表
      tags:
      - 用户登录记录表
  /api/v1/uc/department-budget:
    get:
      description: 获取部门预算列表
      parameters:
      - description: 公司id
        in: query
        name: companyId
        type: integer
      - description: 父部门id
        in: query
        name: parentDepId
        type: integer
      - description: 父部门id
        in: query
        name: depId
        type: integer
      - description: 开始月份
        in: query
        name: startMonth
        type: string
      - description: 结束月份
        in: query
        name: endMonth
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/dto.DepartmentBudgetListResp'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取部门预算列表
      tags:
      - 部门预算
  /api/v1/uc/department-budget/{id}:
    get:
      description: 获取部门预算
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.DepartmentBudgetGetResp'
              type: object
      security:
      - Bearer: []
      summary: 获取部门预算
      tags:
      - 部门预算
  /api/v1/uc/mall/address:
    delete:
      description: 删除用户收货地址
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_uc_service_mall_dto.AddressDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除用户收货地址
      tags:
      - 用户收货地址
    get:
      description: 获取用户收货地址列表
      parameters:
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.Address'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取用户收货地址列表
      tags:
      - 用户收货地址
    post:
      consumes:
      - application/json
      description: 创建用户收货地址
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_uc_service_mall_dto.AddressInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建用户收货地址
      tags:
      - 用户收货地址
  /api/v1/uc/mall/address/{id}:
    get:
      description: 获取用户收货地址
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Address'
              type: object
      security:
      - Bearer: []
      summary: 获取用户收货地址
      tags:
      - 用户收货地址
    put:
      consumes:
      - application/json
      description: 修改用户收货地址
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_uc_service_mall_dto.AddressUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改用户收货地址
      tags:
      - 用户收货地址
  /api/v1/uc/mall/address/default/{id}:
    put:
      consumes:
      - application/json
      description: 设置默认地址
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AddressDefaultReq'
      responses:
        "200":
          description: '{"code": 200, "message": "设置成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 设置默认地址
      tags:
      - 用户收货地址
  /api/v1/uc/mall/approval-time:
    delete:
      description: 删除审批时间
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ApprovalTimeDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除审批时间
      tags:
      - 审批时间
    get:
      description: 获取审批时间列表
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/dto.ApprovalTimeInsertReq'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取审批时间列表
      tags:
      - 审批时间
    post:
      consumes:
      - application/json
      description: 创建审批时间
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ApprovalTimeInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建审批时间
      tags:
      - 审批时间
  /api/v1/uc/mall/approval-time/{id}:
    get:
      description: 获取审批时间
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.ApprovalTimeInsertReq'
              type: object
      security:
      - Bearer: []
      summary: 获取审批时间
      tags:
      - 审批时间
    put:
      consumes:
      - application/json
      description: 修改审批时间
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ApprovalTimeUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改审批时间
      tags:
      - 审批时间
  /api/v1/uc/mall/company-collect:
    get:
      description: 获取公司收藏列表
      parameters:
      - description: 产品SKU
        in: query
        name: skuCode
        type: string
      - description: 用户ID
        in: query
        name: companyId
        type: integer
      - description: 用户ID
        in: query
        name: userId
        type: integer
      - description: 商品表id
        in: query
        name: goodsId
        type: integer
      - description: 仓库code
        in: query
        name: warehouseCode
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/go-admin_app_uc_service_mall_dto.UserCollectGetListPageRes'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取公司收藏列表
      tags:
      - 商城-用户收藏
  /api/v1/uc/mall/email-approve:
    delete:
      description: 删除审批流表
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.EmailApproveDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除审批流表
      tags:
      - 审批流表
    get:
      description: 获取审批流表列表
      parameters:
      - description: 审批流程过滤
        in: query
        name: filterProcess
        type: string
      - description: 领用人过滤
        in: query
        name: filterPerson
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.EmailApproveListCustomer'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取审批流表列表
      tags:
      - 审批流表
    post:
      consumes:
      - application/json
      description: 创建审批流表
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.EmailApproveInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建审批流表
      tags:
      - 审批流表
  /api/v1/uc/mall/email-approve/{id}:
    get:
      description: 获取审批流表
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.EmailApproveGetResp'
              type: object
      security:
      - Bearer: []
      summary: 获取审批流表
      tags:
      - 审批流表
    put:
      consumes:
      - application/json
      description: 修改审批流表
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.EmailApproveUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改审批流表
      tags:
      - 审批流表
  /api/v1/uc/mall/email-approve/approve-recipient-users:
    get:
      description: 获取审批人和领用人
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.EmailApproveGetApproveAndRecipient'
              type: object
      security:
      - Bearer: []
      summary: 获取审批人和领用人
      tags:
      - 审批流表
  /api/v1/uc/mall/email-approve/workflow:
    get:
      description: 获取审批流程
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.EmailApproveWorkflow'
              type: object
      security:
      - Bearer: []
      summary: 获取审批流程
      tags:
      - 审批流表
  /api/v1/uc/mall/login:
    post:
      consumes:
      - application/json
      description: |-
        获取token
        LoginHandler can be used by clients to get a jwt token.
        Payload needs to be json in the form of {"username": "USERNAME", "password": "PASSWORD"}.
        Reply will be of the form {"token": "TOKEN"}.
        dev mode：It should be noted that all fields cannot be empty, and a value of 0 can be passed in addition to the account password
        注意：开发模式：需要注意全部字段不能为空，账号密码外可以传入0值
      parameters:
      - description: account
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/mall_handler.Login'
      responses:
        "200":
          description: '{"code": 200, "expire": "2019-08-07T12:45:48+08:00", "token":
            ".eyJleHAiOjE1NjUxNTMxNDgsImlkIjoiYWRtaW4iLCJvcmlnX2lhdCI6MTU2NTE0OTU0OH0.-zvzHvbg0A"
            }'
          schema:
            type: string
      summary: 商城登陆
      tags:
      - Mall登陆
  /api/v1/uc/mall/logout:
    post:
      consumes:
      - application/json
      description: 获取token
      responses:
        "200":
          description: '{"code": 200, "msg": "成功退出系统" }'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 退出登录
      tags:
      - Mall登陆
  /api/v1/uc/mall/user-collect:
    delete:
      description: 删除用户收藏
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UserCollectDeleteGoodsIdsReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除用户收藏
      tags:
      - 商城-用户收藏
    get:
      description: 获取用户收藏列表
      parameters:
      - description: 产品SKU
        in: query
        name: skuCode
        type: string
      - description: 用户ID
        in: query
        name: userId
        type: integer
      - description: 商品表id
        in: query
        name: goodsId
        type: integer
      - description: 仓库code
        in: query
        name: warehouseCode
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/go-admin_app_uc_service_mall_dto.UserCollectGetListPageRes'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取用户收藏列表
      tags:
      - 商城-用户收藏
    post:
      consumes:
      - application/json
      description: 创建用户收藏
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_uc_service_mall_dto.UserCollectInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建用户收藏
      tags:
      - 商城-用户收藏
  /api/v1/uc/mall/user-collect/{id}:
    get:
      description: 获取用户收藏
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.UserCollect'
              type: object
      security:
      - Bearer: []
      summary: 获取用户收藏
      tags:
      - 商城-用户收藏
    put:
      consumes:
      - application/json
      description: 修改用户收藏
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_uc_service_mall_dto.UserCollectUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改用户收藏
      tags:
      - 商城-用户收藏
  /api/v1/uc/mall/user-footprint:
    delete:
      description: 删除用户足迹表
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UserFootprintDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除用户足迹表
      tags:
      - 商城-用户足迹
    get:
      description: 获取用户足迹表列表
      parameters:
      - description: goodsId
        in: query
        name: goodsId
        type: integer
      - description: skuCode
        in: query
        name: skuCode
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.UserFootprint'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取用户足迹表列表
      tags:
      - 商城-用户足迹
    post:
      consumes:
      - application/json
      description: 创建用户足迹表
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UserFootprintInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建用户足迹表
      tags:
      - 商城-用户足迹
  /api/v1/uc/mall/user-footprint/{id}:
    get:
      description: 获取用户足迹表
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.UserFootprint'
              type: object
      security:
      - Bearer: []
      summary: 获取用户足迹表
      tags:
      - 商城-用户足迹
    put:
      consumes:
      - application/json
      description: 修改用户足迹表
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UserFootprintUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改用户足迹表
      tags:
      - 商城-用户足迹
  /api/v1/uc/mall/user-info:
    delete:
      description: 删除用户中心
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_uc_service_mall_dto.UserInfoDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除用户中心
      tags:
      - 商城-个人中心
    get:
      description: 获取用户中心列表
      parameters:
      - description: 用户邮箱
        in: query
        name: userEmail
        type: string
      - description: 用户登录名
        in: query
        name: loginName
        type: string
      - description: 手机号码
        in: query
        name: userPhone
        type: string
      - description: 用户名称
        in: query
        name: userName
        type: string
      - description: 用户状态（1可用，0不可用）
        in: query
        name: userStatus
        type: integer
      - description: 公司ID
        in: query
        name: companyId
        type: integer
      - description: 用户状态（1是，0否）
        in: query
        name: isAdminShow
        type: string
      - description: 是否可登陆
        in: query
        name: canLogin
        type: integer
      - description: 用户所属部门
        in: query
        name: companyDepartmentId
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.UserInfo'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取用户中心列表
      tags:
      - 商城-个人中心
    post:
      consumes:
      - application/json
      description: 创建用户中心
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_uc_service_mall_dto.UserInfoInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建用户中心
      tags:
      - 商城-个人中心
  /api/v1/uc/mall/user-info/{id}:
    get:
      description: 获取用户中心
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.UserInfo'
              type: object
      security:
      - Bearer: []
      summary: 获取用户中心
      tags:
      - 商城-个人中心
    put:
      consumes:
      - application/json
      description: 修改用户中心
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_uc_service_mall_dto.UserInfoUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改用户中心
      tags:
      - 商城-个人中心
  /api/v1/uc/mall/user/captcha:
    get:
      description: 找回密码验证码
      responses:
        "200":
          description: '{"code": 200, "data": {"data":data,"id":id}, "msg": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 找回密码验证码
      tags:
      - 找回密码
  /api/v1/uc/mall/user/change-basic-info:
    put:
      consumes:
      - application/json
      description: 用户基础资料修改
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UserInfoChangeBasicInfoReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 用户基础资料修改
      tags:
      - 商城-个人中心
  /api/v1/uc/mall/user/change-password:
    put:
      consumes:
      - application/json
      description: 用户修改密码
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UserInfoChangePasswordReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 用户修改密码
      tags:
      - 商城-个人中心
  /api/v1/uc/mall/user/change-phone:
    put:
      consumes:
      - application/json
      description: 修改手机号
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UserInfoChangePhoneReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改手机号
      tags:
      - 商城-个人中心
  /api/v1/uc/mall/user/change-pwd:
    post:
      description: 修改密码
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ChangePwdReq'
      responses:
        "200":
          description: '{"code": 200, "data": "data", "msg": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改密码
      tags:
      - 找回密码
  /api/v1/uc/mall/user/change-user-email:
    put:
      consumes:
      - application/json
      description: 修改邮箱
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UserInfoChangeUserEmailReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改邮箱
      tags:
      - 商城-个人中心
  /api/v1/uc/mall/user/check-phone:
    post:
      description: 检查手机号是否注册
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.VerifyCodeReq'
      responses:
        "200":
          description: '{"code": 200, "data": true, "msg": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 检查手机号是否注册
      tags:
      - 找回密码
  /api/v1/uc/mall/user/check-send-email-token:
    post:
      consumes:
      - application/json
      description: 验证修改邮箱的Token
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.CheckUserTokenAvailableReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 验证修改邮箱的Token
      tags:
      - 商城-个人中心
  /api/v1/uc/mall/user/comit-verify-code:
    post:
      description: 提交手机验证码
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ComitVerifyCodeReq'
      responses:
        "200":
          description: '{"code": 200, "data": "data", "msg": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 提交手机验证码
      tags:
      - 找回密码
  /api/v1/uc/mall/user/info:
    get:
      description: 获取当前用户信息
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.UserInfo'
              type: object
      security:
      - Bearer: []
      summary: 获取当前用户信息
      tags:
      - 商城-个人中心
  /api/v1/uc/mall/user/proxy-login:
    post:
      description: 小程序登录
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ChangePwdReq'
      responses:
        "200":
          description: '{"code": 200, "data": "data", "msg": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 小程序登录
      tags:
      - 商城-个人中心
  /api/v1/uc/mall/user/select-warehouse:
    post:
      consumes:
      - application/json
      description: 切换当前用户的仓库
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UserConfigSelectWarehouseReq'
      responses:
        "200":
          description: '{"requestId":"40180c07-5a91-42fb-960a-aabec7deaca1","code":200,"msg":"仓库选择成功!","data":{"userId":1,"selectedWarehouseId":1,"selectedWarehouseCode":"121212"}}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 切换当前用户的仓库
      tags:
      - Mall登陆
  /api/v1/uc/mall/user/send-email:
    post:
      description: 修改密码
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SendEmailReq'
      responses:
        "200":
          description: '{"code": 200, "data": "data", "msg": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改密码
      tags:
      - 找回密码
  /api/v1/uc/mall/user/send-email-for-change-email:
    post:
      consumes:
      - application/json
      description: 修改邮箱发送修改邮件
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SendEmailForChangeEmailReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改邮箱发送修改邮件
      tags:
      - 商城-个人中心
  /api/v1/uc/mall/user/send-email-for-check-email:
    post:
      consumes:
      - application/json
      description: 修改邮箱发送验证邮件
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SendEmailForCheckEmailReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改邮箱发送验证邮件
      tags:
      - 商城-个人中心
  /api/v1/uc/mall/user/send-sms:
    post:
      consumes:
      - application/json
      description: 发送手机验证码(不校验手机号是否存在)
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.VerifyCodeReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 发送手机验证码(不校验手机号是否存在)
      tags:
      - 商城-个人中心
  /api/v1/uc/mall/user/verify-code:
    post:
      description: 获取手机验证码
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.VerifyCodeReq'
      responses:
        "200":
          description: '{"code": 200, "data": "data", "msg": "success"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 获取手机验证码
      tags:
      - 找回密码
  /api/v1/uc/mall/wechat/login:
    post:
      description: 微信小程序登录
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UserLoginRequest'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserLoginResponse'
              type: object
      security:
      - Bearer: []
      summary: 微信小程序登录
      tags:
      - 商城-微信登录api
  /api/v1/uc/mall/wechat/phone-number:
    post:
      description: 获取手机号
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.PhoneNumberRequest'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.PhoneNumberResponse'
              type: object
      security:
      - Bearer: []
      summary: 微信小程序获取手机号
      tags:
      - 商城-微信登录api
  /api/v1/uc/manage-menu:
    delete:
      description: 删除ManageMenu
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ManageMenuDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除ManageMenu
      tags:
      - ManageMenu
    get:
      description: 获取ManageMenu列表
      parameters:
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.ManageMenu'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取ManageMenu列表
      tags:
      - ManageMenu
    post:
      consumes:
      - application/json
      description: 创建ManageMenu
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ManageMenuInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建ManageMenu
      tags:
      - ManageMenu
  /api/v1/uc/manage-menu/{id}:
    get:
      description: 获取ManageMenu
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.ManageMenu'
              type: object
      security:
      - Bearer: []
      summary: 获取ManageMenu
      tags:
      - ManageMenu
    put:
      consumes:
      - application/json
      description: 修改ManageMenu
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ManageMenuUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改ManageMenu
      tags:
      - ManageMenu
  /api/v1/uc/role:
    delete:
      description: 删除角色信息表
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RoleInfoDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除角色信息表
      tags:
      - 角色信息表
    post:
      consumes:
      - application/json
      description: 创建角色信息表
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RoleInfoInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建角色信息表
      tags:
      - 角色信息表
  /api/v1/uc/role/{id}:
    get:
      description: 获取角色信息表
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.RoleInfo'
              type: object
      security:
      - Bearer: []
      summary: 获取角色信息表
      tags:
      - 角色信息表
    put:
      consumes:
      - application/json
      description: 修改角色信息表
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RoleInfoUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改角色信息表
      tags:
      - 角色信息表
  /api/v1/uc/user-budget:
    get:
      description: 获取用户预算列表
      parameters:
      - description: 用户id
        in: query
        name: userId
        type: integer
      - description: 用户姓名
        in: query
        name: userName
        type: string
      - description: 年月
        in: query
        name: month
        type: string
      - description: 部门id
        in: query
        name: depId
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/dto.UserBudgetGetPageResp'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取用户预算列表
      tags:
      - 用户预算
  /api/v1/uc/user-budget/{id}:
    get:
      description: 获取用户预算
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.UserBudget'
              type: object
      security:
      - Bearer: []
      summary: 获取用户预算
      tags:
      - 用户预算
  /api/v1/uc/user/role:
    delete:
      description: 删除用户角色表
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UserRoleDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除用户角色表
      tags:
      - 用户角色表
    get:
      description: 获取用户角色表列表
      parameters:
      - description: 用户ID
        in: query
        name: userId
        type: integer
      - description: 角色ID
        in: query
        name: roleId
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.UserRole'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取用户角色表列表
      tags:
      - 用户角色表
    post:
      consumes:
      - application/json
      description: 创建用户角色表
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UserRoleInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建用户角色表
      tags:
      - 用户角色表
  /api/v1/uc/user/role/{id}:
    get:
      description: 获取用户角色表
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.UserRole'
              type: object
      security:
      - Bearer: []
      summary: 获取用户角色表
      tags:
      - 用户角色表
    put:
      consumes:
      - application/json
      description: 修改用户角色表
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UserRoleUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改用户角色表
      tags:
      - 用户角色表
  /api/v1/user/avatar:
    post:
      consumes:
      - multipart/form-data
      description: 获取JSON
      parameters:
      - description: file
        in: formData
        name: file
        required: true
        type: file
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改头像
      tags:
      - 个人中心
  /api/v1/user/profile:
    get:
      description: 获取JSON
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 获取个人中心用户
      tags:
      - 个人中心
  /api/v1/user/pwd/reset:
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ResetSysUserPwdReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 重置用户密码
      tags:
      - 用户
  /api/v1/user/pwd/set:
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.PassWord'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改密码
      tags:
      - 用户
  /api/v1/user/status:
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateSysUserStatusReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改用户状态
      tags:
      - 用户
  /api/v1/warehouse:
    delete:
      description: 删除实体仓
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_wc_service_mall_dto.WarehouseDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除实体仓
      tags:
      - 实体仓
    get:
      description: 获取实体仓列表
      parameters:
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.Warehouse'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取实体仓列表
      tags:
      - 实体仓
    post:
      consumes:
      - application/json
      description: 创建实体仓
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_wc_service_mall_dto.WarehouseInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建实体仓
      tags:
      - 实体仓
  /api/v1/warehouse/{id}:
    get:
      description: 获取实体仓
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Warehouse'
              type: object
      security:
      - Bearer: []
      summary: 获取实体仓
      tags:
      - 实体仓
    put:
      consumes:
      - application/json
      description: 修改实体仓
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_wc_service_mall_dto.WarehouseUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改实体仓
      tags:
      - 实体仓
  /api/v1/wc/admin/common-prints/:print-type/:id:
    get:
      description: 共用的获取打印数据接口-json
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      - description: 打印类型:outboundprint>打印出库单 pickingprint>打印拣货单 entryprint>入库单打印
        in: path
        name: print-type
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.CommonPrintsResp'
              type: object
      security:
      - Bearer: []
      summary: 获取打印数据接口
      tags:
      - WC公用接口
  /api/v1/wc/admin/logic-warehouse:
    get:
      description: 获取逻辑仓列表
      parameters:
      - description: 逻辑仓库编码
        in: query
        name: logicWarehouseCode
        type: string
      - description: 逻辑仓库名称
        in: query
        name: logicWarehouseName
        type: string
      - description: 逻辑仓库对应实体仓code
        in: query
        name: warehouseCode
        type: string
      - description: 0 正品仓 1次品仓
        in: query
        name: type
        type: string
      - description: 是否使用 0-否，1-是
        in: query
        name: status
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.LogicWarehouse'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取逻辑仓列表
      tags:
      - 逻辑仓
    post:
      consumes:
      - application/json
      description: 创建逻辑仓
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.LogicWarehouseInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建逻辑仓
      tags:
      - 逻辑仓
  /api/v1/wc/admin/logic-warehouse/{id}:
    get:
      description: 获取逻辑仓
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.LogicWarehouse'
              type: object
      security:
      - Bearer: []
      summary: 获取逻辑仓
      tags:
      - 逻辑仓
    put:
      consumes:
      - application/json
      description: 修改逻辑仓
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.LogicWarehouseUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改逻辑仓
      tags:
      - 逻辑仓
  /api/v1/wc/admin/logic-warehouse/select:
    get:
      description: 获取逻辑仓下拉数据
      parameters:
      - description: 逻辑仓库编码
        in: query
        name: logicWarehouseCode
        type: string
      - description: 逻辑仓库名称
        in: query
        name: logicWarehouseName
        type: string
      - description: 逻辑仓库对应实体仓code
        in: query
        name: warehouseCode
        type: string
      - description: 0 正品仓 1次品仓
        in: query
        name: type
        type: string
      - description: 调拨单获取仓库时为1
        in: query
        name: isTransfer
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/dto.LogicWarehouseSelectResp'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取逻辑仓下拉数据
      tags:
      - 逻辑仓
  /api/v1/wc/admin/operate-logs:
    get:
      description: 获取操作日志列表
      parameters:
      - description: 数据id eg:WH0001
        in: query
        name: dataId
        type: string
      - description: 模型name
        in: query
        name: modelName
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/go-admin_app_wc_models.OperateLogs'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取操作日志列表
      tags:
      - WC操作日志
  /api/v1/wc/admin/operate-logs/{id}:
    get:
      description: 获取操作日志
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/go-admin_app_wc_models.OperateLogDetail'
                  type: array
              type: object
      security:
      - Bearer: []
      summary: 获取操作日志
      tags:
      - WC操作日志
  /api/v1/wc/admin/quality-check:
    get:
      description: 获取质检任务列表
      parameters:
      - description: id
        in: query
        name: id
        type: integer
      - description: 质检单号
        in: query
        name: qualityCheckCode
        type: string
      - description: 来源单据code
        in: query
        name: sourceCode
        type: string
      - description: 入库单编码
        in: query
        name: entryCode
        type: string
      - description: 来源方
        in: query
        name: sourceName
        type: string
      - description: 状态:0-已作废 1-创建 2-已完成
        in: query
        name: status
        type: integer
      - description: 实体仓code
        in: query
        name: warehouseCode
        type: string
      - description: 逻辑仓code
        in: query
        name: logicWarehouseCode
        type: string
      - description: 质检结果
        in: query
        name: qualityRes
        type: integer
      - description: 质检类型,1全检，2抽检
        in: query
        name: type
        type: integer
      - description: 质检进度：0未质检，1部分质检，2全部质检
        in: query
        name: qualityStatus
        type: integer
      - description: skuCode
        in: query
        name: skuCode
        type: string
      - description: 商品名称
        in: query
        name: goodsName
        type: string
      - description: 开始日期
        in: query
        name: startDate
        type: string
      - description: 结束日期
        in: query
        name: endDate
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.QualityCheck'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取质检任务列表
      tags:
      - 质检任务
  /api/v1/wc/admin/quality-check/{id}:
    get:
      description: 质检导出
      parameters:
      - description: id
        in: query
        name: id
        type: integer
      - description: 质检单号
        in: query
        name: qualityCheckCode
        type: string
      - description: 来源单据code
        in: query
        name: sourceCode
        type: string
      - description: 入库单编码
        in: query
        name: entryCode
        type: string
      - description: 来源方
        in: query
        name: sourceName
        type: string
      - description: 状态:0-已作废 1-创建 2-已完成
        in: query
        name: status
        type: integer
      - description: 实体仓code
        in: query
        name: warehouseCode
        type: string
      - description: 逻辑仓code
        in: query
        name: logicWarehouseCode
        type: string
      - description: 质检结果
        in: query
        name: qualityRes
        type: integer
      - description: 质检类型,1全检，2抽检
        in: query
        name: type
        type: integer
      - description: 质检进度：0未质检，1部分质检，2全部质检
        in: query
        name: qualityStatus
        type: integer
      - description: skuCode
        in: query
        name: skuCode
        type: string
      - description: 商品名称
        in: query
        name: goodsName
        type: string
      - description: 开始日期
        in: query
        name: startDate
        type: string
      - description: 结束日期
        in: query
        name: endDate
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.QualityCheck'
              type: object
      security:
      - Bearer: []
      summary: 质检导出
      tags:
      - 质检导出
  /api/v1/wc/admin/quality-check/uploadquality/{id}:
    get:
      consumes:
      - application/json
      description: 上传质检结果
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.QualityCheckUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.QualityCheck'
              type: object
      security:
      - Bearer: []
      summary: 上传质检结果
      tags:
      - 上传质检结果
  /api/v1/wc/admin/reminder-list:
    get:
      description: 获取补货清单列表
      parameters:
      - description: sxyz_reminder_rule 补货规则表id
        in: query
        name: reminderRuleId
        type: integer
      - description: 公司id
        in: query
        name: companyId
        type: integer
      - description: 仓库id
        in: query
        name: warehouseCode
        type: integer
      - description: 货主id
        in: query
        name: VendorId
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/dto.ReminderListData'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取补货清单列表
      tags:
      - 补货清单
  /api/v1/wc/admin/reminder-list-sku:
    get:
      description: 获取补货清单SKU明细列表
      parameters:
      - description: sxyz_reminder_list 补货清单表id
        in: query
        name: reminderListId
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.ReminderListSku'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取补货清单SKU明细列表
      tags:
      - 补货清单SKU明细
  /api/v1/wc/admin/reminder-list/{id}:
    get:
      description: 获取补货清单
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.ReminderListData'
              type: object
      security:
      - Bearer: []
      summary: 获取补货清单
      tags:
      - 补货清单
  /api/v1/wc/admin/reminder-list/create:
    get:
      consumes:
      - application/json
      description: 自动创建补货清单
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 自动创建补货清单
      tags:
      - 补货清单
  /api/v1/wc/admin/reminder-list/export/{id}:
    get:
      description: 导出补货清单
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.ReminderList'
              type: object
      security:
      - Bearer: []
      summary: 导出补货清单
      tags:
      - 补货清单
  /api/v1/wc/admin/reminder-rule:
    get:
      description: 获取补货提醒规则列表
      parameters:
      - description: 公司id
        in: query
        name: companyId
        type: integer
      - description: 仓库code
        in: query
        name: warehouseCode
        type: string
      - description: 状态 1启用 0未启用
        in: query
        name: status
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.ReminderRule'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取补货提醒规则列表
      tags:
      - 补货提醒规则
    post:
      consumes:
      - application/json
      description: 创建补货提醒规则
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ReminderRuleInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建补货提醒规则
      tags:
      - 补货提醒规则
  /api/v1/wc/admin/reminder-rule-sku:
    delete:
      description: 删除补货提醒规则sku单独配置子表
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ReminderRuleSkuDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除补货提醒规则sku单独配置子表
      tags:
      - 补货提醒规则sku单独配置子表
    get:
      description: 获取补货提醒规则sku单独配置子表列表
      parameters:
      - description: sxyz_reminder_rule 补货提醒规则表id
        in: query
        name: reminderRuleId
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.ReminderRuleSku'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取补货提醒规则sku单独配置子表列表
      tags:
      - 补货提醒规则sku单独配置子表
    post:
      consumes:
      - application/json
      description: 创建补货提醒规则sku单独配置子表
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ReminderRuleSkuInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建补货提醒规则sku单独配置子表
      tags:
      - 补货提醒规则sku单独配置子表
  /api/v1/wc/admin/reminder-rule-sku-log:
    get:
      description: 获取补货提醒规则sku单独配置子表的log表列表
      parameters:
      - description: sku补货提醒规则表id
        in: query
        name: reminderRuleSkuId
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.ReminderRuleSkuLog'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取补货提醒规则sku单独配置子表的log表列表
      tags:
      - 补货提醒规则sku单独配置子表的log表
  /api/v1/wc/admin/reminder-rule-sku/{id}:
    get:
      description: 获取补货提醒规则sku单独配置子表
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.ReminderRuleSku'
              type: object
      security:
      - Bearer: []
      summary: 获取补货提醒规则sku单独配置子表
      tags:
      - 补货提醒规则sku单独配置子表
    put:
      consumes:
      - application/json
      description: 修改补货提醒规则sku单独配置子表
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ReminderRuleSkuUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改补货提醒规则sku单独配置子表
      tags:
      - 补货提醒规则sku单独配置子表
  /api/v1/wc/admin/reminder-rule/{id}:
    get:
      description: 获取补货提醒规则
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.ReminderRuleGetRes'
              type: object
      security:
      - Bearer: []
      summary: 获取补货提醒规则
      tags:
      - 补货提醒规则
    put:
      consumes:
      - application/json
      description: 修改补货提醒规则
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ReminderRuleUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改补货提醒规则
      tags:
      - 补货提醒规则
  /api/v1/wc/admin/stock-control:
    delete:
      description: 作废库存调整单
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.StockControlDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "作废成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 作废库存调整单
      tags:
      - 库存调整单
    get:
      description: 获取库存调整单列表
      parameters:
      - description: 调整单编码
        in: query
        name: controlCode
        type: string
      - description: '调整类型: 0 调增 1 调减'
        in: query
        name: type
        type: string
      - description: 状态:0-已作废 1-创建 2-已完成 99未提交
        in: query
        name: status
        type: string
      - description: 实体仓code
        in: query
        name: warehouseCode
        type: string
      - description: 逻辑仓code
        in: query
        name: logicWarehouseCode
        type: string
      - description: 审核状态 0 待审核 1 审核通过 2 审核驳回 99初始化
        in: query
        name: verifyStatus
        type: string
      - description: 货主id
        in: query
        name: vendorId
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/dto.StockControlGetPageResp'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取库存调整单列表
      tags:
      - 库存调整单
    post:
      consumes:
      - application/json
      description: 创建库存调整单
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.StockControlInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建库存调整单
      tags:
      - 库存调整单
  /api/v1/wc/admin/stock-control/{id}:
    get:
      description: 获取库存调整单
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      - description: 'eg: edit'
        in: path
        name: type
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.StockControlGetResp'
              type: object
      security:
      - Bearer: []
      summary: 获取库存调整单
      tags:
      - 库存调整单
    put:
      consumes:
      - application/json
      description: 修改库存调整单
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.StockControlUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改库存调整单
      tags:
      - 库存调整单
  /api/v1/wc/admin/stock-control/audit:
    post:
      consumes:
      - application/json
      description: 审核库存调整单
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.StockControlAuditReq'
      responses:
        "200":
          description: '{"code": 200, "message": "审核成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 审核库存调整单
      tags:
      - 库存调整单
  /api/v1/wc/admin/stock-control/import:
    post:
      description: 库存调整单新增导入
      parameters:
      - description: 导入文件
        in: formData
        name: file
        type: file
      responses: {}
      security:
      - Bearer: []
      summary: 库存调整单新增导入
      tags:
      - 库存调整单
  /api/v1/wc/admin/stock-control/save-commit:
    post:
      consumes:
      - application/json
      description: 保存并提交调整单
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.StockControlInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "保存并提交成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 保存并提交调整单
      tags:
      - 库存调整单
  /api/v1/wc/admin/stock-control/update-commit/{id}:
    put:
      consumes:
      - application/json
      description: 修改并提交库存调整单
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.StockControlUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改并提交成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改并提交库存调整单
      tags:
      - 库存调整单
  /api/v1/wc/admin/stock-control/validate-skus:
    get:
      description: 调整单验证skus
      parameters:
      - description: 多个用,分割
        in: query
        name: skuCodes
        type: string
      - description: 货主id
        in: query
        name: vendorId
        type: integer
      - description: 实体仓code
        in: query
        name: warehouseCode
        type: string
      - description: logicWarehouseCode
        in: query
        name: logicWarehouseCode
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.StockControlValidateSkusResp'
                  type: array
              type: object
      security:
      - Bearer: []
      summary: 调整单验证skus
      tags:
      - 库存调整单
  /api/v1/wc/admin/stock-entry:
    get:
      description: 获取入库单列表
      parameters:
      - description: 入库单编码
        in: query
        name: entryCode
        type: string
      - description: '入库类型:  0 大货入库  1 退货入库'
        in: query
        name: type
        type: string
      - description: 状态:0-已作废 1-创建 2-已完成
        in: query
        name: status
        type: string
      - description: 来源单据code
        in: query
        name: sourceCode
        type: string
      - description: 实体仓code
        in: query
        name: warehouseCode
        type: string
      - description: 逻辑仓code
        in: query
        name: logicWarehouseCode
        type: string
      - description: 货主id
        in: query
        name: vendorId
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/dto.StockEntryGetPageResp'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取入库单列表
      tags:
      - 入库单
  /api/v1/wc/admin/stock-entry/{id}:
    get:
      description: 获取入库单
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      - description: 'eg: confirm'
        in: path
        name: type
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.StockEntryGetResp'
              type: object
      security:
      - Bearer: []
      summary: 获取入库单
      tags:
      - 入库单
  /api/v1/wc/admin/stock-entry/add:
    post:
      consumes:
      - application/json
      description: 采购入库编辑
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AddStockEntryReq'
      responses:
        "200":
          description: '{"code": 200, "message": "入库成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 采购入库编辑
      tags:
      - 采购入库编辑
  /api/v1/wc/admin/stock-entry/check-entry{id}:
    put:
      description: 审核
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      - description: 'eg: confirm'
        in: path
        name: type
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.StockEntryGetResp'
              type: object
      security:
      - Bearer: []
      summary: 审核
      tags:
      - 入库单
  /api/v1/wc/admin/stock-entry/confirm-entry:
    post:
      consumes:
      - application/json
      description: 确认入库
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.StockEntryConfirmReq'
      responses:
        "200":
          description: '{"code": 200, "message": "入库成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 确认入库
      tags:
      - 入库单
  /api/v1/wc/admin/stock-entry/part-entry:
    post:
      consumes:
      - application/json
      description: 部分入库
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.StockEntryPartReq'
      responses:
        "200":
          description: '{"code": 200, "message": "入库成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 部分入库
      tags:
      - 入库单
  /api/v1/wc/admin/stock-entry/print-html/{id}:
    get:
      description: 获取打印html
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.StockEntryPrintHtmlResp'
              type: object
      security:
      - Bearer: []
      summary: 获取打印html
      tags:
      - 入库单
  /api/v1/wc/admin/stock-entry/print-sku/{goodsId}:
    get:
      description: 批量打印sku信息
      parameters:
      - description: goodsId
        in: path
        name: goodsId
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.StockEntryPrintSkusReq'
              type: object
      security:
      - Bearer: []
      summary: 批量打印sku信息
      tags:
      - 入库单
  /api/v1/wc/admin/stock-entry/sku-info/{goodsId}:
    get:
      description: 通过goodsId获取sku信息
      parameters:
      - description: goodsId
        in: path
        name: goodsId
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.StockEntryScanSkuBaseInfoResp'
              type: object
      security:
      - Bearer: []
      summary: 通过goodsId获取sku信息
      tags:
      - 入库单
  /api/v1/wc/admin/stock-entry/stash:
    post:
      consumes:
      - application/json
      description: 暂存（保存）入库单
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.StockEntryStashReq'
      responses:
        "200":
          description: '{"code": 200, "message": "保存成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 暂存（保存）入库单
      tags:
      - 入库单
  /api/v1/wc/admin/stock-entry/stock-locations:
    get:
      description: 下拉获取库位列表
      parameters:
      - description: 逻辑仓code
        in: query
        name: logicWarehouseCode
        type: string
      - description: 是否次品
        in: query
        name: isDefective
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.StockEntryProductsLocationGetResp'
                  type: array
              type: object
      security:
      - Bearer: []
      summary: 下拉获取库位列表
      tags:
      - 入库单
  /api/v1/wc/admin/stock-entry/validate-skus:
    get:
      description: 入库单验证skus
      parameters:
      - description: 多个用,分割
        in: query
        name: skuCodes
        type: string
      - description: 货主id
        in: query
        name: vendorId
        type: integer
      - description: 实体仓code
        in: query
        name: WarehouseCode
        type: string
      - description: 逻辑仓code
        in: query
        name: logicWarehouseCode
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.StockTransferValidateSkusResp'
                  type: array
              type: object
      security:
      - Bearer: []
      summary: 入库单验证skus
      tags:
      - 入库单
  /api/v1/wc/admin/stock-info:
    get:
      description: 获取库存信息列表
      parameters:
      - description: 逻辑仓code
        in: query
        name: logicWarehouseCode
        type: string
      - description: 实体仓code
        in: query
        name: warehouseCode
        type: string
      - description: 实体仓code多个用','分割
        in: query
        name: queryWarehouseCode
        type: string
      - description: sku多个用','分割
        in: query
        name: skuCode
        type: string
      - description: productName
        in: query
        name: productName
        type: string
      - description: productNo
        in: query
        name: productNo
        type: string
      - description: vendorSkuCode
        in: query
        name: vendorSkuCode
        type: string
      - description: vendorCode
        in: query
        name: vendorCode
        type: string
      - description: vendorName
        in: query
        name: vendorName
        type: string
      - description: vendorShortName
        in: query
        name: vendorShortName
        type: string
      - description: isVirtualWarehouse
        in: query
        name: isVirtualWarehouse
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/dto.StockInfoGetPageResp'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取库存信息列表
      tags:
      - 库存信息
  /api/v1/wc/admin/stock-info/export:
    get:
      description: 库存信息导出
      parameters:
      - description: 逻辑仓code
        in: query
        name: logicWarehouseCode
        type: string
      - description: 实体仓code
        in: query
        name: warehouseCode
        type: string
      - description: 实体仓code多个用','分割
        in: query
        name: queryWarehouseCode
        type: string
      - description: sku多个用','分割
        in: query
        name: skuCode
        type: string
      - description: productName
        in: query
        name: productName
        type: string
      - description: productNo
        in: query
        name: productNo
        type: string
      - description: vendorSkuCode
        in: query
        name: vendorSkuCode
        type: string
      - description: vendorCode
        in: query
        name: vendorCode
        type: string
      - description: vendorName
        in: query
        name: vendorName
        type: string
      - description: vendorShortName
        in: query
        name: vendorShortName
        type: string
      - description: ids 多个用,分割 其他查询无效
        in: query
        name: ids
        type: string
      responses: {}
      security:
      - Bearer: []
      summary: 库存信息导出
      tags:
      - 库存信息
  /api/v1/wc/admin/stock-location-goods-log:
    get:
      description: 获取库位商品变动日志列表
      parameters:
      - description: 逻辑仓code
        in: query
        name: logicWarehouseCode
        type: string
      - description: 实体仓code
        in: query
        name: warehouseCode
        type: string
      - description: 实体仓code多个用','分割
        in: query
        name: queryWarehouseCode
        type: string
      - description: sku多个用','分割
        in: query
        name: skuCode
        type: string
      - description: productName
        in: query
        name: productName
        type: string
      - description: productNo
        in: query
        name: productNo
        type: string
      - description: vendorSkuCode
        in: query
        name: vendorSkuCode
        type: string
      - description: vendorCode
        in: query
        name: vendorCode
        type: string
      - description: vendorName
        in: query
        name: vendorName
        type: string
      - description: vendorShortName
        in: query
        name: vendorShortName
        type: string
      - description: isVirtualWarehouse
        in: query
        name: isVirtualWarehouse
        type: string
      - description: createdAtStart
        in: query
        name: createdAtStart
        type: string
      - description: createdAtEnd
        in: query
        name: createdAtEnd
        type: string
      - description: fromType 0 出库单 1 入库单 2 库存调整单
        in: query
        name: fromType
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.StockLocationGoodsLog'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取库位商品变动日志列表
      tags:
      - 库位商品变动日志
  /api/v1/wc/admin/stock-location-goods-log/export:
    get:
      description: 库位库存日志导出
      parameters:
      - description: 逻辑仓code
        in: query
        name: logicWarehouseCode
        type: string
      - description: 实体仓code
        in: query
        name: warehouseCode
        type: string
      - description: 实体仓code多个用','分割
        in: query
        name: queryWarehouseCode
        type: string
      - description: sku多个用','分割
        in: query
        name: skuCode
        type: string
      - description: productName
        in: query
        name: productName
        type: string
      - description: productNo
        in: query
        name: productNo
        type: string
      - description: vendorSkuCode
        in: query
        name: vendorSkuCode
        type: string
      - description: vendorCode
        in: query
        name: vendorCode
        type: string
      - description: vendorName
        in: query
        name: vendorName
        type: string
      - description: vendorShortName
        in: query
        name: vendorShortName
        type: string
      - description: isVirtualWarehouse
        in: query
        name: isVirtualWarehouse
        type: string
      - description: createdAtStart
        in: query
        name: createdAtStart
        type: string
      - description: createdAtEnd
        in: query
        name: createdAtEnd
        type: string
      - description: fromType 0 出库单 1 入库单 2 库存调整单
        in: query
        name: fromType
        type: string
      - description: docketCode
        in: query
        name: docketCode
        type: string
      - description: ids 多个用,分割 其他查询无效
        in: query
        name: ids
        type: string
      responses: {}
      security:
      - Bearer: []
      summary: 库位库存日志导出
      tags:
      - 库位库存日志
  /api/v1/wc/admin/stock-log:
    get:
      description: 获取库存日志列表
      parameters:
      - description: 逻辑仓code
        in: query
        name: logicWarehouseCode
        type: string
      - description: 实体仓code
        in: query
        name: warehouseCode
        type: string
      - description: 实体仓code多个用','分割
        in: query
        name: queryWarehouseCode
        type: string
      - description: sku多个用','分割
        in: query
        name: skuCode
        type: string
      - description: productName
        in: query
        name: productName
        type: string
      - description: productNo
        in: query
        name: productNo
        type: string
      - description: vendorSkuCode
        in: query
        name: vendorSkuCode
        type: string
      - description: vendorCode
        in: query
        name: vendorCode
        type: string
      - description: vendorName
        in: query
        name: vendorName
        type: string
      - description: vendorShortName
        in: query
        name: vendorShortName
        type: string
      - description: isVirtualWarehouse
        in: query
        name: isVirtualWarehouse
        type: string
      - description: createdAtStart
        in: query
        name: createdAtStart
        type: string
      - description: createdAtEnd
        in: query
        name: createdAtEnd
        type: string
      - description: fromType 0 出库单 1 入库单 2 库存调整单
        in: query
        name: fromType
        type: string
      - description: docketCode
        in: query
        name: docketCode
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/dto.StockLogGetPageResp'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取库存日志列表
      tags:
      - 库存日志
  /api/v1/wc/admin/stock-log/export:
    get:
      description: 库存日志导出
      parameters:
      - description: 逻辑仓code
        in: query
        name: logicWarehouseCode
        type: string
      - description: 实体仓code
        in: query
        name: warehouseCode
        type: string
      - description: 实体仓code多个用','分割
        in: query
        name: queryWarehouseCode
        type: string
      - description: sku多个用','分割
        in: query
        name: skuCode
        type: string
      - description: productName
        in: query
        name: productName
        type: string
      - description: productNo
        in: query
        name: productNo
        type: string
      - description: vendorSkuCode
        in: query
        name: vendorSkuCode
        type: string
      - description: vendorCode
        in: query
        name: vendorCode
        type: string
      - description: vendorName
        in: query
        name: vendorName
        type: string
      - description: vendorShortName
        in: query
        name: vendorShortName
        type: string
      - description: isVirtualWarehouse
        in: query
        name: isVirtualWarehouse
        type: string
      - description: createdAtStart
        in: query
        name: createdAtStart
        type: string
      - description: createdAtEnd
        in: query
        name: createdAtEnd
        type: string
      - description: fromType 0 出库单 1 入库单 2 库存调整单
        in: query
        name: fromType
        type: string
      - description: docketCode
        in: query
        name: docketCode
        type: string
      - description: ids 多个用,分割 其他查询无效
        in: query
        name: ids
        type: string
      responses: {}
      security:
      - Bearer: []
      summary: 库存日志导出
      tags:
      - 库存日志
  /api/v1/wc/admin/stock-outbound:
    get:
      description: 获取出库单列表
      parameters:
      - description: 出库单编码
        in: query
        name: outboundCode
        type: string
      - description: '出库类型:  0 大货出库  1 订单出库  2 其他'
        in: query
        name: type
        type: string
      - description: 状态:0-已作废 1-创建 2-已完成
        in: query
        name: status
        type: string
      - description: 来源单据code
        in: query
        name: sourceCode
        type: string
      - description: 实体仓code
        in: query
        name: warehouseCode
        type: string
      - description: 逻辑仓code
        in: query
        name: logicWarehouseCode
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/dto.StockOutboundGetPageResp'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取出库单列表
      tags:
      - 出库单
  /api/v1/wc/admin/stock-outbound/{id}:
    get:
      description: 获取出库单
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      - description: 'eg: confirm'
        in: path
        name: type
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.StockOutboundGetResp'
              type: object
      security:
      - Bearer: []
      summary: 获取出库单
      tags:
      - 出库单
  /api/v1/wc/admin/stock-outbound/confirm-outbound:
    post:
      consumes:
      - application/json
      description: 部分出库
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.StockPartOutboundReq'
      responses:
        "200":
          description: '{"code": 200, "message": "操作成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 部分出库
      tags:
      - 出库单
  /api/v1/wc/admin/stock-outbound/print-outbound/{id}:
    get:
      description: 打印出库单
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.StockOutboundPrintResp'
              type: object
      security:
      - Bearer: []
      summary: 打印出库单
      tags:
      - 出库单
  /api/v1/wc/admin/stock-outbound/print-picking/{id}:
    get:
      description: 打印拣货单
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.StockOutboundPrintResp'
              type: object
      security:
      - Bearer: []
      summary: 打印拣货单
      tags:
      - 出库单
  /api/v1/wc/admin/stock-transfer:
    delete:
      description: 作废调拨单
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.StockTransferDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "作废成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 作废调拨单
      tags:
      - 调拨单
    get:
      description: 获取调拨单列表
      parameters:
      - description: 调拨单编码
        in: query
        name: transferCode
        type: string
      - description: '调拨类型: 0 -正常调拨 1-次品调拨 2-正转次调拨 3-次转正调拨'
        in: query
        name: type
        type: string
      - description: 状态:0-已作废 1-未出库未入库 2-已出库未入库 3-出库完成入库完成 98已提交 99未提交
        in: query
        name: status
        type: string
      - description: 出库实体仓code
        in: query
        name: fromWarehouseCode
        type: string
      - description: 出库逻辑仓code
        in: query
        name: fromLogicWarehouseCode
        type: string
      - description: 入库实体仓code
        in: query
        name: toWarehouseCode
        type: string
      - description: 入库逻辑仓code
        in: query
        name: toLogicWarehouseCode
        type: string
      - description: 来源单号
        in: query
        name: sourceCode
        type: string
      - description: 审核状态 0 待审核 1 审核通过 2 审核驳回 99初始化
        in: query
        name: verifyStatus
        type: string
      - description: 货主id
        in: query
        name: vendorId
        type: integer
      - description: 创建时间开始
        in: query
        name: createdAtStart
        type: string
      - description: 创建时间结束
        in: query
        name: createdAtEnd
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/dto.StockTransferGetPageResp'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取调拨单列表
      tags:
      - 调拨单
    post:
      consumes:
      - application/json
      description: 保存调拨单
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.StockTransferInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "创建成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 保存调拨单
      tags:
      - 调拨单
  /api/v1/wc/admin/stock-transfer/{id}:
    get:
      description: 获取调拨单
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.StockTransferGetResp'
              type: object
      security:
      - Bearer: []
      summary: 获取调拨单
      tags:
      - 调拨单
    put:
      consumes:
      - application/json
      description: 修改调拨单
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.StockTransferUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改调拨单
      tags:
      - 调拨单
  /api/v1/wc/admin/stock-transfer/audit:
    post:
      consumes:
      - application/json
      description: 审核调拨单
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.StockTransferAuditReq'
      responses:
        "200":
          description: '{"code": 200, "message": "审核成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 审核调拨单
      tags:
      - 调拨单
  /api/v1/wc/admin/stock-transfer/save-commit:
    post:
      consumes:
      - application/json
      description: 保存并提交调拨单
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.StockTransferInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "保存并提交成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 保存并提交调拨单
      tags:
      - 调拨单
  /api/v1/wc/admin/stock-transfer/update-commit/{id}:
    put:
      consumes:
      - application/json
      description: 修改并提交调拨单
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.StockTransferUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改并提交调拨单"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改并提交调拨单
      tags:
      - 调拨单
  /api/v1/wc/admin/stock-transfer/validate-skus:
    get:
      description: 调拨单验证skus
      parameters:
      - description: 多个用,分割
        in: query
        name: skuCodes
        type: string
      - description: 货主id
        in: query
        name: vendorId
        type: integer
      - description: 出库仓code
        in: query
        name: fromWarehouseCode
        type: string
      - description: 入库仓code
        in: query
        name: toWarehouseCode
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.StockTransferValidateSkusResp'
                  type: array
              type: object
      security:
      - Bearer: []
      summary: 调拨单验证skus
      tags:
      - 调拨单
  /api/v1/wc/admin/supplier:
    get:
      description: 获取供应商列表
      parameters:
      - description: 供应商编码
        in: query
        name: code
        type: string
      - description: 供应商中文名
        in: query
        name: nameZh
        type: string
      - description: 供应商英文名
        in: query
        name: nameEn
        type: string
      - description: 供应商简称
        in: query
        name: shortName
        type: string
      - description: 市id
        in: query
        name: cityId
        type: string
      - description: 省id
        in: query
        name: provinceId
        type: string
      - description: 国家id
        in: query
        name: countryId
        type: string
      - description: 关联公司
        in: query
        name: companyId
        type: string
      - description: 0无效 1有效
        in: query
        name: status
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.Supplier'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取供应商列表
      tags:
      - 供应商
    post:
      consumes:
      - application/json
      description: 创建供应商
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SupplierInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建供应商
      tags:
      - 供应商
  /api/v1/wc/admin/supplier/{id}:
    get:
      description: 获取供应商
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Supplier'
              type: object
      security:
      - Bearer: []
      summary: 获取供应商
      tags:
      - 供应商
    put:
      consumes:
      - application/json
      description: 修改供应商
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SupplierUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改供应商
      tags:
      - 供应商
  /api/v1/wc/admin/supplier/select:
    get:
      description: 获取供应商下拉列表
      parameters:
      - description: 供应商id
        in: query
        name: id
        type: integer
      - description: 供应商编码
        in: query
        name: code
        type: string
      - description: 供应商中文名
        in: query
        name: nameZh
        type: string
      - description: 供应商简称
        in: query
        name: shortName
        type: string
      - description: 是否有效 0-否，1-是
        in: query
        name: status
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/dto.SupplierSelectResp'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取供应商下拉列表
      tags:
      - 供应商
  /api/v1/wc/admin/vendors:
    get:
      description: 获取货主列表
      parameters:
      - description: 货主编码
        in: query
        name: code
        type: string
      - description: 货主中文名
        in: query
        name: nameZh
        type: string
      - description: 供应商英文名
        in: query
        name: nameEn
        type: string
      - description: 供应商简称
        in: query
        name: shortName
        type: string
      - description: 市id
        in: query
        name: city
        type: string
      - description: 省id
        in: query
        name: province
        type: string
      - description: 国家id
        in: query
        name: country
        type: string
      - description: 关联公司
        in: query
        name: companyId
        type: string
      - description: 0无效 1有效
        in: query
        name: status
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.Vendors'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取货主列表
      tags:
      - 货主
    post:
      consumes:
      - application/json
      description: 创建货主
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.VendorsInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建货主
      tags:
      - 货主
  /api/v1/wc/admin/vendors/{id}:
    get:
      description: 获取货主
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Vendors'
              type: object
      security:
      - Bearer: []
      summary: 获取货主
      tags:
      - 货主
    put:
      consumes:
      - application/json
      description: 修改货主
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.VendorsUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改货主
      tags:
      - 货主
  /api/v1/wc/admin/vendors/select:
    get:
      description: 获取货主下拉列表
      parameters:
      - description: 货主id
        in: query
        name: id
        type: integer
      - description: 货主编码
        in: query
        name: code
        type: string
      - description: 货主中文名
        in: query
        name: nameZh
        type: string
      - description: 货主简称
        in: query
        name: shortName
        type: string
      - description: 是否有效 0-否，1-是
        in: query
        name: status
        type: string
      - description: 是否不校验货主权限
        in: query
        name: noCheckPermission
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/dto.VendorsSelectResp'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取货主下拉列表
      tags:
      - 货主
  /api/v1/wc/admin/warehouse:
    get:
      description: 获取实体仓列表
      parameters:
      - description: 仓库编码
        in: query
        name: warehouseCode
        type: string
      - description: 仓库名称
        in: query
        name: WarehouseName
        type: string
      - description: 仓库对应公司id
        in: query
        name: companyId
        type: integer
      - description: 是否为虚拟仓 0-否，1-是
        in: query
        name: isVirtual
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/dto.WarehouseGetPageResp'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取实体仓列表
      tags:
      - 实体仓
    post:
      consumes:
      - application/json
      description: 创建实体仓
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_wc_service_admin_dto.WarehouseInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建实体仓
      tags:
      - 实体仓
  /api/v1/wc/admin/warehouse/{id}:
    get:
      description: 获取实体仓
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.WarehouseGetResp'
              type: object
      security:
      - Bearer: []
      summary: 获取实体仓
      tags:
      - 实体仓
    put:
      consumes:
      - application/json
      description: 修改实体仓
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/go-admin_app_wc_service_admin_dto.WarehouseUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改实体仓
      tags:
      - 实体仓
  /api/v1/wc/admin/warehouse/code/{code}:
    get:
      description: 获取实体仓通过code
      parameters:
      - description: code
        in: path
        name: code
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Warehouse'
              type: object
      security:
      - Bearer: []
      summary: 获取实体仓通过code
      tags:
      - 实体仓
  /api/v1/wc/admin/warehouse/cw-tree:
    get:
      description: 获取公司实体仓树
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Warehouse'
              type: object
      security:
      - Bearer: []
      summary: 获取公司实体仓树
      tags:
      - 实体仓
  /api/v1/wc/admin/warehouse/select:
    get:
      description: 获取实体仓下拉数据
      parameters:
      - description: 仓库编码
        in: query
        name: warehouseCode
        type: string
      - description: 仓库名称
        in: query
        name: WarehouseName
        type: string
      - description: 仓库对应公司id
        in: query
        name: companyId
        type: integer
      - description: 是否为虚拟仓 0-否，1-是
        in: query
        name: isVirtual
        type: string
      - description: 调拨单获取仓库时为1
        in: query
        name: isTransfer
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/dto.WarehouseSelectResp'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取实体仓下拉数据
      tags:
      - 实体仓
  /api/v1/wc/mall/warehouse/list:
    get:
      description: 获取登录后用户的实体仓列表
      parameters:
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.Warehouse'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取登录后用户的实体仓列表
      tags:
      - Mall登录
  /api/v1/wc/stock-location:
    get:
      description: 获取库位列表
      parameters:
      - description: 库位编码
        in: query
        name: locationCode
        type: string
      - description: 实体仓
        in: query
        name: warehouseCode
        type: string
      - description: 逻辑仓
        in: query
        name: logicWarehouseCode
        type: string
      - description: 是否启用
        in: query
        name: status
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.StockLocation'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取库位列表
      tags:
      - 库位
    post:
      consumes:
      - application/json
      description: 创建库位
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.StockLocationInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建库位
      tags:
      - 库位
  /api/v1/wc/stock-location-goods:
    get:
      description: 获取库位商品列表
      parameters:
      - description: 库位编码
        in: query
        name: locationCode
        type: string
      - description: SKU
        in: query
        name: skuCode
        type: string
      - description: 商品名称
        in: query
        name: productName
        type: string
      - description: 货主SKU
        in: query
        name: supplierSkuCode
        type: string
      - description: 物料编码
        in: query
        name: productNo
        type: string
      - description: 实体仓
        in: query
        name: locationCode
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/dto.StockLocationGoodsListResp'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取库位商品列表
      tags:
      - 库位商品
  /api/v1/wc/stock-location-goods/{id}:
    get:
      description: 获取库位商品
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.StockLocationGoodsListResp'
              type: object
      security:
      - Bearer: []
      summary: 获取库位商品
      tags:
      - 库位商品
  /api/v1/wc/stock-location-goods/export:
    get:
      description: 导出库位商品
      parameters:
      - description: 勾选的id集
        in: query
        name: filterIds
        type: string
      - description: 库位编码
        in: query
        name: locationCode
        type: string
      - description: 实体仓
        in: query
        name: warehouseCode
        type: string
      responses: {}
      security:
      - Bearer: []
      summary: 导出库位商品
      tags:
      - 库位商品
  /api/v1/wc/stock-location-goods/location-list:
    get:
      description: 获取同一逻辑仓下的仓位
      parameters:
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.Option'
                  type: array
              type: object
      security:
      - Bearer: []
      summary: 获取同一逻辑仓下的仓位
      tags:
      - 库位商品
  /api/v1/wc/stock-location-goods/transfer-stock:
    post:
      description: 转移数量
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.TransferStockReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.Option'
                  type: array
              type: object
      security:
      - Bearer: []
      summary: 转移数量
      tags:
      - 库位商品
  /api/v1/wc/stock-location/{id}:
    get:
      description: 获取库位
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.StockLocationResp'
              type: object
      security:
      - Bearer: []
      summary: 获取库位
      tags:
      - 库位
    put:
      consumes:
      - application/json
      description: 修改库位
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.StockLocationUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改库位
      tags:
      - 库位
  /api/v1/wc/stock-location/import:
    post:
      consumes:
      - application/json
      description: 导入库位
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 导入库位
      tags:
      - 库位
  /inner/admin/sys-dict/data:
    get:
      description: 数据字典根据key获取
      parameters:
      - description: dictType
        in: query
        name: dictType
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.SysDictDataGetAllResp'
                  type: array
              type: object
      security:
      - Bearer: []
      summary: 数据字典根据key获取
      tags:
      - 字典数据
  /inner/oc/order:
    get:
      description: 判断是否有未完结订单
      parameters:
      - description: 订单号
        in: query
        name: orderIds
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.OrderInfo'
                  type: array
              type: object
      security:
      - Bearer: []
      summary: 判断是否有未完结订单
      tags:
      - 领用单
  /inner/oc/order/by-cs-no/{csNo}:
    get:
      description: 根据售后单号获取订单信息
      parameters:
      - description: csNo
        in: path
        name: csNo
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.OrderInfo'
              type: object
      security:
      - Bearer: []
      summary: 根据售后单号获取订单信息
      tags:
      - 售后中心
  /inner/oc/order/is-order-in-after-pending-review/{orderId}:
    get:
      description: 根据订单号查询是否有订单再售后中inner
      parameters:
      - description: orderId
        in: path
        name: orderId
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.CsApplyIsOrderInAfterPendingReviewRes'
              type: object
      security:
      - Bearer: []
      summary: 根据订单号查询是否有订单再售后中inner
      tags:
      - 售后中心
  /inner/pc/admin/product/get-by-sku:
    post:
      description: SKU查询产品档案信息
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ExportReq'
      responses: {}
      security:
      - Bearer: []
      summary: SKU查询产品档案信息
      tags:
      - SKU查询产品档案信息
  /inner/pc/admin/product/get-category:
    post:
      description: SKU查询产线
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ExportReq'
      responses: {}
      security:
      - Bearer: []
      summary: SKU查询产线
      tags:
      - SKU查询产线
  /inner/pc/get-by-id:
    post:
      description: ID获取商品信息
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.GetGoodsByIdReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: ID获取商品信息
      tags:
      - 商品管理表
  /inner/pc/get-by-skucode:
    post:
      description: 仓库Code + sku查商品信息
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.GoodsDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 仓库Code + sku查商品信息
      tags:
      - 商品管理表
  /inner/pc/info:
    post:
      description: 获取商品信息
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.GoodsDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 获取商品信息
      tags:
      - 商品管理表
  /inner/sys-user/permission:
    put:
      consumes:
      - application/json
      description: 修改用户权限
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysUserUpdatePermissionReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改用户权限
      tags:
      - 用户
  /inner/uc/admin/company-info/is-available/{id}:
    get:
      description: 查询公司是否可用
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.CompanyInfoIsAvailableRes'
              type: object
      security:
      - Bearer: []
      summary: 查询公司是否可用
      tags:
      - 公司信息
  /inner/uc/admin/company-info/select-list:
    get:
      description: 查询公司列表（下拉）Inner
      parameters:
      - description: 公司状态（1可用 0不可用）
        in: query
        name: companyStatus
        type: integer
      - description: 公司名称
        in: query
        name: companyName
        type: string
      - description: 公司性质 （2终端，3分销）
        in: query
        name: companyNature
        type: integer
      - description: 公司类型（1:KA 2:SME 3:DS 4:整包 5:央企 6:其他）
        in: query
        name: companyType
        type: integer
      - description: 父级节点
        in: query
        name: parentId
        type: integer
      - description: 新建公司等级1-5
        in: query
        name: companyLevels
        type: integer
      - description: 最高级公司
        in: query
        name: pid
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      - description: 页条数 支持-1不分页
        in: query
        name: pageSize
        type: integer
      - description: 公司id多查 id逗号分隔
        in: query
        name: queryCompanyIds
        type: string
      - description: 公司name多查 name逗号分隔
        in: query
        name: queryCompanyNames
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/dto.CompanyInfoGetSelectPageData'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 查询公司列表（下拉）Inner
      tags:
      - 公司信息
  /inner/uc/company-info/{id}:
    get:
      description: 获取公司信息-Inner
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.CompanyInfoGetRes'
              type: object
      security:
      - Bearer: []
      summary: 获取公司信息-Inner
      tags:
      - 公司信息
  /inner/uc/user-collect/get-goods-is-collected:
    get:
      description: 批量获取商品收藏状态
      parameters:
      - description: 用户ID
        in: query
        name: userId
        type: integer
      - description: 商品表id 逗号分隔的字符串
        in: query
        name: goodsIds
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/go-admin_app_uc_service_mall_dto.UserCollectGetListPageRes'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 批量获取商品收藏状态
      tags:
      - 商城-用户收藏
  /inner/wc/admin/region/get-info:
    get:
      description: Inner通过ids获取Region信息
      parameters:
      - description: ids 多个用,分割
        in: query
        name: ids
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Region'
                  type: array
              type: object
      security:
      - Bearer: []
      summary: Inner通过ids获取Region信息
      tags:
      - InnerRegion
  /inner/wc/admin/stock-info:
    post:
      consumes:
      - application/json
      description: Inner批量获取库存信息通过实体仓和goodsId
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.InnerStockInfoGetByGoodsIdAndWarehouseCodeReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Warehouse'
                  type: array
              type: object
      summary: Inner批量获取库存信息通过实体仓和goodsId
      tags:
      - Inner库存信息
  /inner/wc/admin/stock-info/get:
    post:
      consumes:
      - application/json
      description: Inner批量获取库存信息
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.InnerStockInfoGetByGoodsIdAndLwhCodeReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Warehouse'
                  type: array
              type: object
      summary: Inner批量获取库存信息
      tags:
      - Inner库存信息
  /inner/wc/admin/supplier/list:
    get:
      description: Inner批量获取供应商信息
      parameters:
      - description: 供应商id 多个用','分割
        in: query
        name: ids
        type: string
      - description: 供应商编码 多个用','分割
        in: query
        name: code
        type: string
      - description: 供应商中文名  多个用','分割
        in: query
        name: nameZh
        type: string
      - description: 0 无效 1 有效
        in: query
        name: status
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Supplier'
                  type: array
              type: object
      summary: Inner批量获取供应商信息
      tags:
      - Inner供应商
  /inner/wc/admin/vendors/list:
    get:
      description: Inner批量获取货主信息
      parameters:
      - description: 货主id 多个用','分割
        in: query
        name: ids
        type: string
      - description: 货主编码 多个用','分割
        in: query
        name: code
        type: string
      - description: 货主中文名  多个用','分割
        in: query
        name: nameZh
        type: string
      - description: 0 无效 1 有效
        in: query
        name: status
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Vendors'
                  type: array
              type: object
      summary: Inner批量获取货主信息
      tags:
      - Inner货主
  /inner/wc/admin/warehouse/list:
    get:
      description: Inner获取实体仓列表
      parameters:
      - description: 仓库编码 多个用','分割
        in: query
        name: warehouseCode
        type: string
      - description: 仓库名称 多个用','分割
        in: query
        name: WarehouseName
        type: string
      - description: 仓库对应公司id
        in: query
        name: companyId
        type: integer
      - description: 是否为虚拟仓 0-否，1-是
        in: query
        name: isVirtual
        type: string
      - description: 是否为虚拟仓 0-否，1-是
        in: query
        name: status
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.WarehouseGetPageResp'
                  type: array
              type: object
      summary: Inner获取实体仓列表
      tags:
      - Inner实体仓
  /inner/wc/admin/warehouse/list-by-name-company-id:
    post:
      consumes:
      - application/json
      description: Inner获取实体仓列表通过公司Id和仓库名
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          items:
            $ref: '#/definitions/dto.InnerWarehouseGetListReq'
          type: array
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Warehouse'
                  type: array
              type: object
      summary: Inner获取实体仓列表通过公司Id和仓库名
      tags:
      - Inner实体仓
  /logout:
    post:
      consumes:
      - application/json
      description: 获取token
      responses:
        "200":
          description: '{"code": 200, "msg": "成功退出系统" }'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 退出登录
      tags:
      - Admin登陆
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
